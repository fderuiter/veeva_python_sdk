note
 description:"[
		Veeva Vault API v25.1
 		The latest GA version of the Vault REST API.
  		The version of the OpenAPI document: 1.0.0
 	    

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"

class
	DEFAULT_API

inherit

    API_I


feature -- API Access


	api_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve API Versions
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/api/"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	api_mdl_components_component_type_and_record_name_files_get (component_type_and_record_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Content File
			-- 
			-- 
			-- argument: component_type_and_record_name The component type of the record followed by the name of the record from which to retrieve the content file. The format is &#x60;{Componenttype}.{record_name}&#x60;. For example, &#x60;Formattedoutput.my_formatted_output__c&#x60;. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/api/mdl/components/{component_type_and_record_name}/files"
			l_path.replace_substring_all ("{"+"component_type_and_record_name"+"}", api_client.url_encode (component_type_and_record_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	api_mdl_components_component_type_and_record_name_get (component_type_and_record_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Component Record (MDL)
			-- 
			-- 
			-- argument: component_type_and_record_name The component type name (&#x60;Picklist&#x60;, &#x60;Docfield&#x60;, &#x60;Doctype&#x60;, etc.) followed by the name of the record from which to retrieve metadata. The format is &#x60;{Componenttype}.{record_name}&#x60;. For example, &#x60;Picklist.color__c&#x60;. Find this with the [Retrieve Component Record Collection](https://developer.veevavault.com/api/24.3#Retrieve_Component_Record_Collection) endpoint. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/api/mdl/components/{component_type_and_record_name}"
			l_path.replace_substring_all ("{"+"component_type_and_record_name"+"}", api_client.url_encode (component_type_and_record_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	api_mdl_execute_async_job_id_results_get (job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Asynchronous MDL Script Results
			-- 
			-- 
			-- argument: job_id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/api/mdl/execute_async/{job_id}/results"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	api_mdl_execute_async_post (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Execute MDL Script Asynchronously
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/api/mdl/execute_async"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	api_mdl_execute_post (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Execute MDL Script
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/api/mdl/execute"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	api_mdl_files_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Upload Content File
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/api/mdl/files"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	audittrail_audit_trail_type_get (audit_trail_type: STRING_32; start_date: STRING_32; end_date: STRING_32; all_dates: STRING_32; format_result: STRING_32; limit: STRING_32; offset: STRING_32; objects: STRING_32; events: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Audit Details
			-- 
			-- 
			-- argument: audit_trail_type The name of the specified audit type (document_audit_trail, object_audit_trail, etc). Use the Retrieve Audit Types API to retrieve types available in your Vault. Requests for login_audit_trail only accept one request per user at a time. (required)
			-- 
			-- argument: start_date Specify a start date to retrieve audit information. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z. If omitted, defaults to the last 30 days. (optional, default to null)
			-- 
			-- argument: end_date Specify an end date to retrieve audit information. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z. If omitted, defaults to the last 30 days. (optional, default to null)
			-- 
			-- argument: all_dates Set to true to request audit information for all dates. You must leave start_date and end_date blank when requesting an export of a full audit trail. (optional, default to null)
			-- 
			-- argument: format_result To request a downloadable CSV file of your audit details, use csv. The response contains a jobId to retrieve the job status, which contains a link to download the CSV file. If omitted, the API returns a JSON response and does not start a job. If all_dates is true, this parameter is required. (optional, default to null)
			-- 
			-- argument: limit Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200. (optional, default to null)
			-- 
			-- argument: offset Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. If omitted, defaults to 0. (optional, default to null)
			-- 
			-- argument: objects This is an optional parameter when specifying object_audit_trail as the {audit_trail_type}. Provide a comma-separated list of one or more object names to retrieve their audit details. For example, objects&#x3D;product__v,country__v. If omitted, defaults to all objects. (optional, default to null)
			-- 
			-- argument: events This is an optional parameter when specifying object_audit_trail or document_audit_trail as the {audit_trail_type}. Provide a comma-separated list of one or more audit events to retrieve their audit details. For example, events&#x3D;Edit,Delete,TaskAssignment. If omitted, defaults to all audit events. See Vault Help for full lists of object audit events and document audit events. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/audittrail/{audit_trail_type}"
			l_path.replace_substring_all ("{"+"audit_trail_type"+"}", api_client.url_encode (audit_trail_type.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "start_date", start_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "end_date", end_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "all_dates", all_dates));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "format_result", format_result));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "offset", offset));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "objects", objects));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "events", events));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	auth_discovery_post (accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Authentication Type Discovery
			-- 
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/auth/discovery"

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	auth_oauth_session_oath_oidc_profile_id_post (oath_oidc_profile_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- OAuth 2.0 / OpenID Connect
			-- 
			-- 
			-- argument: oath_oidc_profile_id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/auth/oauth/session/{oath_oidc_profile_id}"
			l_path.replace_substring_all ("{"+"oath_oidc_profile_id"+"}", api_client.url_encode (oath_oidc_profile_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	auth_post (content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- User Name and Password
			-- 
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/auth"

			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	code_class_name_delete (class_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Single Source Code File
			-- 
			-- 
			-- argument: class_name The fully qualified class name of your file. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/code/{class_name}"
			l_path.replace_substring_all ("{"+"class_name"+"}", api_client.url_encode (class_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	code_class_name_disable_put (class_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Disable Vault Extension
			-- 
			-- 
			-- argument: class_name The fully qualified class name of your file. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/code/{class_name}/disable"
			l_path.replace_substring_all ("{"+"class_name"+"}", api_client.url_encode (class_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	code_class_name_enable_put (class_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Enable Vault Extension
			-- 
			-- 
			-- argument: class_name The fully qualified class name of your file. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/code/{class_name}/enable"
			l_path.replace_substring_all ("{"+"class_name"+"}", api_client.url_encode (class_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	code_class_name_get (class_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Single Source Code File
			-- 
			-- 
			-- argument: class_name The fully qualified class name of your file. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/code/{class_name}"
			l_path.replace_substring_all ("{"+"class_name"+"}", api_client.url_encode (class_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	code_profiler_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Profiling Sessions
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/code/profiler"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	code_profiler_post (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Profiling Session
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/code/profiler"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	code_profiler_session_name_actions_end_post (session_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- End Profiling Session
			-- 
			-- 
			-- argument: session_name The name of the session, for example,  baseline__c. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/code/profiler/{session_name}/actions/end"
			l_path.replace_substring_all ("{"+"session_name"+"}", api_client.url_encode (session_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	code_profiler_session_name_delete (session_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Profiling Session
			-- 
			-- 
			-- argument: session_name The name of the session, for example,  baseline__c. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/code/profiler/{session_name}"
			l_path.replace_substring_all ("{"+"session_name"+"}", api_client.url_encode (session_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	code_profiler_session_name_get (session_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Profiling Session
			-- 
			-- 
			-- argument: session_name The name of the session, for example,  baseline__c. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/code/profiler/{session_name}"
			l_path.replace_substring_all ("{"+"session_name"+"}", api_client.url_encode (session_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	code_profiler_session_name_results_get (session_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Profiling Session Results
			-- 
			-- 
			-- argument: session_name The name of the session, for example,  baseline__c. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/code/profiler/{session_name}/results"
			l_path.replace_substring_all ("{"+"session_name"+"}", api_client.url_encode (session_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	code_put (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Add or Replace Single Source Code File
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/code"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	composites_trees_edl_hierarchy_or_template_actions_listnodes_post (edl_hierarchy_or_template: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Specific Root Nodes
			-- 
			-- 
			-- argument: edl_hierarchy_or_template Choose to retrieve either edl_hierarchy__v or edl_template__v (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/composites/trees/{edl_hierarchy_or_template}/actions/listnodes"
			l_path.replace_substring_all ("{"+"edl_hierarchy_or_template"+"}", api_client.url_encode (edl_hierarchy_or_template.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	composites_trees_edl_hierarchy_or_template_get (edl_hierarchy_or_template: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Root Nodes
			-- 
			-- 
			-- argument: edl_hierarchy_or_template  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/composites/trees/{edl_hierarchy_or_template}"
			l_path.replace_substring_all ("{"+"edl_hierarchy_or_template"+"}", api_client.url_encode (edl_hierarchy_or_template.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	composites_trees_edl_hierarchy_vparent_node_id_children_get (parent_node_id: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve a Node&#39;s Children
			-- 
			-- 
			-- argument: parent_node_id The ID of a parent node in the hierarchy. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/composites/trees/edl_hierarchy__v/{parent_node_id}/children"
			l_path.replace_substring_all ("{"+"parent_node_id"+"}", api_client.url_encode (parent_node_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	composites_trees_edl_hierarchy_vparent_node_id_children_put (parent_node_id: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Node Order
			-- 
			-- 
			-- argument: parent_node_id The ID of a parent node in the hierarchy. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/composites/trees/edl_hierarchy__v/{parent_node_id}/children"
			l_path.replace_substring_all ("{"+"parent_node_id"+"}", api_client.url_encode (parent_node_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	configuration_component_type_and_record_name_get (component_type_and_record_name: STRING_32; loc: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Component Record (XML/JSON)
			-- 
			-- 
			-- argument: component_type_and_record_name The component type name (&#x60;Picklist&#x60;, &#x60;Docfield&#x60;, &#x60;Doctype&#x60;, etc.) followed by the name of the record from which to retrieve metadata. The format is &#x60;{Componenttype}.{record_name}&#x60;. For example, &#x60;Picklist.color__c&#x60;. Find this with the [Retrieve Component Record Collection](https://developer.veevavault.com/api/24.3#Retrieve_Component_Record_Collection) endpoint. (required)
			-- 
			-- argument: loc When localized (translated) strings are available, retrieve them by setting loc to true. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/configuration/{component_type_and_record_name}"
			l_path.replace_substring_all ("{"+"component_type_and_record_name"+"}", api_client.url_encode (component_type_and_record_name.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	configuration_component_type_get (component_type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Component Record Collection
			-- 
			-- 
			-- argument: component_type  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/configuration/{component_type}"
			l_path.replace_substring_all ("{"+"component_type"+"}", api_client.url_encode (component_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	configuration_object_name_and_object_type_get (object_name_and_object_type: STRING_32; loc: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Details from a Specific Object
			-- 
			-- 
			-- argument: object_name_and_object_type The object name followed by the object type in the format &#x60;Objecttype.{object_name}.{object_type}&#x60;. For example, &#x60;Objecttype.product__v.base__v&#x60;. (required)
			-- 
			-- argument: loc When localized (translated) strings are available, retrieve them by setting loc to true. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/configuration/{object_name_and_object_type}"
			l_path.replace_substring_all ("{"+"object_name_and_object_type"+"}", api_client.url_encode (object_name_and_object_type.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	configuration_objecttype_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Details from All Object Types
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/configuration/Objecttype"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	configuration_role_assignment_rule_delete (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Lifecycle Role Assignment Override Rules
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/configuration/role_assignment_rule"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	configuration_role_assignment_rule_get (lifecycle__v: STRING_32; role__v: STRING_32; product__v: STRING_32; country__v: STRING_32; study__v: STRING_32; study_country__v: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Lifecycle Role Assignment Rules (Default &amp; Override)
			-- 
			-- 
			-- argument: lifecycle__v Include the name of the lifecycle from which to retrieve information. For example: lifecycle_v&#x3D;general_lifecycle__c (optional, default to null)
			-- 
			-- argument: role__v Include the name of the role from which to retrieve information. For example: role__v&#x3D;editor__c (optional, default to null)
			-- 
			-- argument: product__v Include the ID/name of a specific product to see product-based override rules to default users/allowed users for the lifecycle role. For example: product__v&#x3D;0PR0011001 or product__v.name__v&#x3D;CholeCap (optional, default to null)
			-- 
			-- argument: country__v Include the ID/name of a specific country to see country-based override rules to default users/allowed users for the lifecycle role. For example: country__v&#x3D;0CR0022002 or country__v.name__v&#x3D;United States (optional, default to null)
			-- 
			-- argument: study__v In eTMF Vaults only. Include the ID/name of a specific study to see study-based override rules to default users/allowed users for the lifecycle role. For example: study__v&#x3D;0ST0021J01 or study__v.name__v&#x3D;CholeCap Study (optional, default to null)
			-- 
			-- argument: study_country__v In eTMF Vaults only. Include the ID/name of a specific study country to see study country-based override rules to default users/allowed users for the lifecycle role. For example: study_country__v&#x3D;0SC0001001 or study_country__v.name__v&#x3D;Germany (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/configuration/role_assignment_rule"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "lifecycle__v", lifecycle__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "role__v", role__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "product__v", product__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "country__v", country__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "study__v", study__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "study_country__v", study_country__v));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	configuration_role_assignment_rule_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Lifecycle Role Assignment Override Rules
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/configuration/role_assignment_rule"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	configuration_role_assignment_rule_put (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Lifecycle Role Assignment Rules (Default &amp; Override)
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/configuration/role_assignment_rule"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	delegation_login_post (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Initiate Delegated Session
			-- 
			-- 
			-- argument: authorization The sessionId of the currently authenticated user who will initiate the delegated session. Cannot be a delegated_sessionid. (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/delegation/login"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	delegation_vaults_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Delegations
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/delegation/vaults"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	keep_alive_post (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Session Keep Alive
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/keep-alive"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	limits_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Limits on Objects
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/limits"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	logs_api_usage_get (date: STRING_32; log_format: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Daily API Usage
			-- 
			-- 
			-- argument: date The day to retrieve the API Usage log. Date is in UTC and follows the format YYYY-MM-DD. Date cannot be more than 30 days in the past. (optional, default to null)
			-- 
			-- argument: log_format Optional: Specify the format to download. Possible values are csv or logfile. If omitted, defaults to csv. Note that this call always downloads a ZIP file. This parameter only changes the format of the file contained within the ZIP.  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/logs/api_usage"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "date", date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "log_format", log_format));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	logs_code_debug_get (user_id: STRING_32; include_inactive: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Debug Logs
			-- 
			-- 
			-- argument: user_id Filter results to retrieve the debug log for this user ID only. If omitted, this request retrieves debug logs for all users in the Vault. (optional, default to null)
			-- 
			-- argument: include_inactive Set to &#x60;true&#x60; to include debug log sessions with a status of &#x60;inactive__sys&#x60; in the response. If omitted, defaults to &#x60;false&#x60; and inactive sessions are not included in the response. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/logs/code/debug"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "user_id", user_id));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "include_inactive", include_inactive));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	logs_code_debug_id_actions_reset_delete (id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Debug Log
			-- 
			-- 
			-- argument: id The ID of the debug log to delete. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/logs/code/debug/{id}/actions/reset"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	logs_code_debug_id_actions_reset_post (id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Reset Debug Log
			-- 
			-- 
			-- argument: id The ID of the debug log to delete. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/logs/code/debug/{id}/actions/reset"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	logs_code_debug_id_files_get (id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Debug Log Files
			-- 
			-- 
			-- argument: id The ID of the debug log to download. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/logs/code/debug/{id}/files"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	logs_code_debug_id_get (id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Single Debug Log
			-- 
			-- 
			-- argument: id The ID of the debug log to retrieve. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/logs/code/debug/{id}"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	logs_code_debug_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Debug Log
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/logs/code/debug"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	logs_code_runtime_get (date: STRING_32; log_format: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download SDK Runtime Log
			-- 
			-- 
			-- argument: date  (optional, default to null)
			-- 
			-- argument: log_format Optional: Specify the format to download. Possible values are csv or logfile. If omitted, defaults to csv. Note that this call always downloads a ZIP file. This parameter only changes the format of the file contained within the ZIP.  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/logs/code/runtime"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "date", date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "log_format", log_format));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	messages_message_type_actions_import_post (message_type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Import Bulk Translation File
			-- 
			-- 
			-- argument: message_type The message type name: field_labels__sys, system_messages__sys, notification_template_messages__sys, or user_account_messages__sys. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/messages/{message_type}/actions/import"
			l_path.replace_substring_all ("{"+"message_type"+"}", api_client.url_encode (message_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	messages_message_type_language_lang_actions_export_post (message_type: STRING_32; lang: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Export Bulk Translation File
			-- 
			-- 
			-- argument: message_type The message type name: field_labels__sys, system_messages__sys, notification_template_messages__sys, or user_account_messages__sys. (required)
			-- 
			-- argument: lang A valid language code value, for example, en. Retrieve available values from the Admin Key (admin_key__sys) field on the Language (language__sys) object. Active and Inactive languages are both valid.  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/messages/{message_type}/language/{lang}/actions/export"
			l_path.replace_substring_all ("{"+"message_type"+"}", api_client.url_encode (message_type.out))
			l_path.replace_substring_all ("{"+"lang"+"}", api_client.url_encode (lang.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_audittrail_audit_trail_type_get (audit_trail_type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Audit Metadata
			-- 
			-- 
			-- argument: audit_trail_type The name of the specified audit type (document_audit_trail, object_audit_trail, etc). (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/audittrail/{audit_trail_type}"
			l_path.replace_substring_all ("{"+"audit_trail_type"+"}", api_client.url_encode (audit_trail_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_audittrail_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Audit Types
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/audittrail"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_components_component_type_get (component_type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Component Type Metadata
			-- 
			-- 
			-- argument: component_type The component type name (Picklist, Docfield, Doctype, etc.). (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/components/{component_type}"
			l_path.replace_substring_all ("{"+"component_type"+"}", api_client.url_encode (component_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_components_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Component Metadata
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/components"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_binders_templates_bindernodes_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder Template Node Metadata
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/binders/templates/bindernodes"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_binders_templates_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder Template Metadata
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/binders/templates"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_annotations_placemarks_types_placemark_type_get (placemark_type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Annotation Placemark Type Metadata
			-- 
			-- 
			-- argument: placemark_type The name of the placemark type. For example, sticky__sys. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/annotations/placemarks/types/{placemark_type}"
			l_path.replace_substring_all ("{"+"placemark_type"+"}", api_client.url_encode (placemark_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_annotations_references_types_reference_type_get (reference_type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Annotation Reference Type Metadata
			-- 
			-- 
			-- argument: reference_type  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/annotations/references/types/{reference_type}"
			l_path.replace_substring_all ("{"+"reference_type"+"}", api_client.url_encode (reference_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_annotations_types_annotation_type_get (annotation_type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Annotation Type Metadata
			-- 
			-- 
			-- argument: annotation_type The name of the annotation type. Valid annotation types include: &#x60;note__sys&#x60; &#x60;line__sys&#x60; &#x60;document_link__sys&#x60; &#x60;permalink_link__sys&#x60; &#x60;anchor__sys&#x60; &#x60;reply__sys&#x60; &#x60;external_link__sys&#x60;  The following annotation types are only valid in Medical and PromoMats Vaults:  &#x60;suggested_link__sys&#x60; &#x60;approved_link__sys&#x60; &#x60;auto_link__sys&#x60; &#x60;keyword_link__sys&#x60; (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/annotations/types/{annotation_type}"
			l_path.replace_substring_all ("{"+"annotation_type"+"}", api_client.url_encode (annotation_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_events_event_type_types_event_subtype_get (event_type: STRING_32; event_subtype: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Event SubType Metadata
			-- 
			-- 
			-- argument: event_type The event type. For example, distribution__v. (required)
			-- 
			-- argument: event_subtype The event subtype. For example, approved_email__v. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/events/{event_type}/types/{event_subtype}"
			l_path.replace_substring_all ("{"+"event_type"+"}", api_client.url_encode (event_type.out))
			l_path.replace_substring_all ("{"+"event_subtype"+"}", api_client.url_encode (event_subtype.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_events_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Event Types and Subtypes
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/events"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_lock_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Lock Metadata
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/lock"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_properties_find_common_post (content__type: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Common Document Fields
			-- 
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/properties/find_common"

			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_properties_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Document Fields
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/properties"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_templates_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Template Metadata
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/templates"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_types_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Document Types
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/types"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_types_type_get (type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Type
			-- 
			-- 
			-- argument: type The document type. See Retrieve Document Types. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/types/{type}"
			l_path.replace_substring_all ("{"+"type"+"}", api_client.url_encode (type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_types_type_relationships_get (type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Type Relationships
			-- 
			-- 
			-- argument: type The document type. See Retrieve Document Types. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/types/{type}/relationships"
			l_path.replace_substring_all ("{"+"type"+"}", api_client.url_encode (type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get (type: STRING_32; subtype: STRING_32; classification: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Classification
			-- 
			-- 
			-- argument: type The document type. See Retrieve Document Types. (required)
			-- 
			-- argument: subtype The document subtype. See Retrieve Document Types. (required)
			-- 
			-- argument: classification The document classification. See Retrieve Document Types. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/types/{type}/subtypes/{subtype}/classifications/{classification}"
			l_path.replace_substring_all ("{"+"type"+"}", api_client.url_encode (type.out))
			l_path.replace_substring_all ("{"+"subtype"+"}", api_client.url_encode (subtype.out))
			l_path.replace_substring_all ("{"+"classification"+"}", api_client.url_encode (classification.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_documents_types_type_subtypes_subtype_get (type: STRING_32; subtype: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Subtype
			-- 
			-- 
			-- argument: type The document type. See Retrieve Document Types. (required)
			-- 
			-- argument: subtype The document subtype. See Retrieve Document Types. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/documents/types/{type}/subtypes/{subtype}"
			l_path.replace_substring_all ("{"+"type"+"}", api_client.url_encode (type.out))
			l_path.replace_substring_all ("{"+"subtype"+"}", api_client.url_encode (subtype.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_groups_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Group Metadata
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/groups"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_securitypolicies_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Security Policy Metadata
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/securitypolicies"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_objects_users_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve User Metadata
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/objects/users"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_query_archived_documents_relationships_document_signature_sysr_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Archived Document Signature Metadata
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/query/archived_documents/relationships/document_signature__sysr"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_query_documents_relationships_document_signature_sysr_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Signature Metadata
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/query/documents/relationships/document_signature__sysr"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_vobjects_get (loc: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Object Collection
			-- 
			-- 
			-- argument: loc To retrieve localized (translated) strings, include the parameter loc&#x3D;true. See the next request below for details. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/vobjects"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_vobjects_object_name_actions_canceldeployment_post (object_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Cancel Raw Object Deployment
			-- 
			-- 
			-- argument: object_name  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/vobjects/{object_name}/actions/canceldeployment"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_vobjects_object_name_fields_object_field_name_get (object_name: STRING_32; object_field_name: STRING_32; loc: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Object Field Metadata
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_field_name The object field name value (id, name__v, external_id__v, etc.). (required)
			-- 
			-- argument: loc To retrieve localized (translated) strings, include the parameter loc&#x3D;true. See the next request below for details. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/vobjects/{object_name}/fields/{object_field_name}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_field_name"+"}", api_client.url_encode (object_field_name.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_vobjects_object_name_get (object_name: STRING_32; loc: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Object Metadata
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: loc To retrieve localized (translated) strings, include the parameter loc&#x3D;true. See the next request below for details. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/vobjects/{object_name}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_vobjects_object_name_page_layouts_get (object_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Page Layouts
			-- 
			-- 
			-- argument: object_name  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/vobjects/{object_name}/page_layouts"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	metadata_vobjects_object_name_page_layouts_layout_name_get (object_name: STRING_32; layout_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Page Layout Metadata
			-- 
			-- 
			-- argument: object_name The name of the object from which to retrieve page layout metadata. (required)
			-- 
			-- argument: layout_name The name of the page layout from which to retrieve metadata. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/metadata/vobjects/{object_name}/page_layouts/{layout_name}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"layout_name"+"}", api_client.url_encode (layout_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	notifications_histories_get (start_date: STRING_32; end_date: STRING_32; all_dates: BOOLEAN; format_result: STRING_32; limit: STRING_32; offset: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Email Notification Histories
			-- 
			-- 
			-- argument: start_date Specify a start date to retrieve notification history. This date cannot be more than 2 years ago. Dates must be in YYYY-MM-DD or YYYY-MM-DDTHH:mm:ssZ format. If time is omitted (THH:mm:ssZ), defaults to the start of the day. If start_date is omitted entirely, defaults to the start of the previous day. If you’ve specified a start_date, you must also specify an end_date. (optional, default to null)
			-- 
			-- argument: end_date Specify an end date to retrieve notification history. This date cannot be more than 30 days away from the specified start_date. Dates must be in YYYY-MM-DD or YYYY-MM-DDTHH:mm:ssZ format. If time is omitted (THH:mm:ssZ), defaults to the time of the API request. If you’ve specified an end_date, you must also specify a start_date. (optional, default to null)
			-- 
			-- argument: all_dates Set to true to request notification history for all dates. This is the same as requesting a full CSV export from the Vault UI. When requesting a full notification history, you must leave start_date and end_date blank and set format_result to csv. You can request an export of notification history for all_dates once every 24 hours. (optional, default to null)
			-- 
			-- argument: format_result To request a downloadable CSV file of your notification history, set this parameter to csv. The response contains a jobId to retrieve the job status, which provides a link to download the CSV file. If omitted, the API returns a JSON response with notification history and does not start a job. If all_dates is true, this parameter must be csv. (optional, default to null)
			-- 
			-- argument: limit Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200. (optional, default to null)
			-- 
			-- argument: offset Paginate the results displayed per page by specifying the amount of offset from the entry returned. If omitted, defaults to 0. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/notifications/histories"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "start_date", start_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "end_date", end_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "all_dates", all_dates));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "format_result", format_result));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "offset", offset));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	object_workflow_actions_action_get (action: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Bulk Workflow Action Details
			-- 
			-- 
			-- argument: action  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/object/workflow/actions/{action}"
			l_path.replace_substring_all ("{"+"action"+"}", api_client.url_encode (action.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	object_workflow_actions_action_post (action: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Initiate Workflow Actions on Multiple Workflows
			-- 
			-- 
			-- argument: action  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/object/workflow/actions/{action}"
			l_path.replace_substring_all ("{"+"action"+"}", api_client.url_encode (action.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	object_workflow_actions_canceltasks_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Cancel Workflow Tasks
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/object/workflow/actions/canceltasks"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	object_workflow_actions_cancelworkflows_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Cancel Workflows
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/object/workflow/actions/cancelworkflows"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	object_workflow_actions_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Bulk Workflow Actions
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/object/workflow/actions"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	object_workflow_actions_reassigntasks_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Reassign Workflow Tasks
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/object/workflow/actions/reassigntasks"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	object_workflow_actions_replaceworkflowowner_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Replace Workflow Owner
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/object/workflow/actions/replaceworkflowowner"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_actions_export_job_id_results_get (job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder Export Results
			-- 
			-- 
			-- argument: job_id The id value of the requested export job. This is returned with the export binder requests above. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/actions/export/{job_id}/results"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_actions_export_post (binder_id: STRING_32; source: BOOLEAN; renditiontype: STRING_32; docversion: STRING_32; attachments: STRING_32; var_export: STRING_32; docfield: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Export Binder (Latest Version)
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: source to include source content or not (optional, default to null)
			-- 
			-- argument: renditiontype to include viewable renditions (optional, default to null)
			-- 
			-- argument: docversion to include all major versions (optional, default to null)
			-- 
			-- argument: attachments to include all versions of attachments (optional, default to null)
			-- 
			-- argument: var_export configurable filename metadata (optional, default to null)
			-- 
			-- argument: docfield to exclude document metadata csv (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/actions/export"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "source", source));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "renditiontype", renditiontype));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "docversion", docversion));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "attachments", attachments));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "export", var_export));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "docfield", docfield));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_actions_post (binder_id: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Refresh Binder Auto-Filing
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/actions"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_binding_rule_put (binder_id: STRING_32; content__type: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Binding Rule
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/binding_rule"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))

			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_delete (binder_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Binder
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_documents_node_id_binding_rule_put (binder_id: STRING_32; node_id: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Binder Document Binding Rule
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: node_id The binder node id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/documents/{node_id}/binding_rule"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"node_id"+"}", api_client.url_encode (node_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_documents_post (binder_id: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Add Document to Binder
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/documents"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_documents_section_id_delete (binder_id: STRING_32; section_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Remove Document from Binder
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: section_id The binder node id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/documents/{section_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"section_id"+"}", api_client.url_encode (section_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_documents_section_id_put (binder_id: STRING_32; section_id: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Move Document in Binder
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: section_id The binder node id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/documents/{section_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"section_id"+"}", api_client.url_encode (section_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_get (binder_id: STRING_32; depth: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: depth To retrieve all information in all levels of the binder, set this to all. By default, only one level is returned. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "depth", depth));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_post (binder_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Binder Version
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_put (binder_id: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Binder
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete (binder_id: STRING_32; role_name_and_user_or_group: STRING_32; id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Remove Users &amp; Groups from Roles on a Single Binder
			-- 
			-- 
			-- argument: binder_id The id value of the binder from which to remove roles. (required)
			-- 
			-- argument: role_name_and_user_or_group The name of the role from which to remove the user or group followed by either &#x60;user&#x60; or &#x60;group&#x60;. The format is &#x60;{role_name}.{user_or_group}&#x60;. For example, &#x60;consumer__v.user&#x60;. (required)
			-- 
			-- argument: id The id value of the user or group to remove from the role. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/roles/{role_name_and_user_or_group}/{id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"role_name_and_user_or_group"+"}", api_client.url_encode (role_name_and_user_or_group.out))
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_sections_node_id_binding_rule_put (binder_id: STRING_32; node_id: STRING_32; content__type: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Binder Section Binding Rule
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: node_id The binder node id field value. (required)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/sections/{node_id}/binding_rule"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"node_id"+"}", api_client.url_encode (node_id.out))

			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_sections_node_id_put (binder_id: STRING_32; node_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Binder Section
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: node_id The binder node id of the section. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/sections/{node_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"node_id"+"}", api_client.url_encode (node_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_sections_post (binder_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Binder Section
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/sections"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_sections_section_id_delete (binder_id: STRING_32; section_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Binder Section
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: section_id The binder node id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/sections/{section_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"section_id"+"}", api_client.url_encode (section_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_sections_section_id_get (binder_id: STRING_32; section_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder Sections
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: section_id The binder node id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/sections/{section_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"section_id"+"}", api_client.url_encode (section_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_versions_get (binder_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Binder Versions
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/versions"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_versions_major_version_minor_version_actions_export_post (binder_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; source: BOOLEAN; renditiontype: STRING_32; docversion: STRING_32; attachments: STRING_32; var_export: STRING_32; docfield: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Export Binder (Specific Version)
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: major_version The binder major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The binder minor_version_number__v field value. (required)
			-- 
			-- argument: source to include source content or not (optional, default to null)
			-- 
			-- argument: renditiontype to include viewable renditions (optional, default to null)
			-- 
			-- argument: docversion to include all major versions (optional, default to null)
			-- 
			-- argument: attachments to include all versions of attachments (optional, default to null)
			-- 
			-- argument: var_export configurable filename metadata (optional, default to null)
			-- 
			-- argument: docfield to exclude document metadata csv (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/actions/export"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "source", source));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "renditiontype", renditiontype));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "docversion", docversion));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "attachments", attachments));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "export", var_export));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "docfield", docfield));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_versions_major_version_minor_version_delete (binder_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Binder Version
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: major_version The binder major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The binder minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_versions_major_version_minor_version_get (binder_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder Version
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: major_version The binder major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The binder minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_versions_major_version_minor_version_put (binder_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Binder Version
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: major_version The binder major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The binder minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_versions_major_version_minor_version_relationships_post (binder_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Binder Relationship
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: major_version The binder major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The binder minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete (binder_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; relationship_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Binder Relationship
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: major_version The binder major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The binder minor_version_number__v field value. (required)
			-- 
			-- argument: relationship_id The binder relationship id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"relationship_id"+"}", api_client.url_encode (relationship_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get (binder_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; relationship_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder Relationship
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: major_version The binder major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The binder minor_version_number__v field value. (required)
			-- 
			-- argument: relationship_id The binder relationship id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"relationship_id"+"}", api_client.url_encode (relationship_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get (binder_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; section_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder Version Section
			-- 
			-- 
			-- argument: binder_id The binder id field value. (required)
			-- 
			-- argument: major_version The binder major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The binder minor_version_number__v field value. (required)
			-- 
			-- argument: section_id Retrieve all sections (documents and subsections) in a binder’s sub-level node. If not included, all sections from the binder’s top-level root node will be returned. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/sections/{section_id}"
			l_path.replace_substring_all ("{"+"binder_id"+"}", api_client.url_encode (binder_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"section_id"+"}", api_client.url_encode (section_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_id_roles_get (id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Binder Roles
			-- 
			-- 
			-- argument: id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{id}/roles"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_id_roles_post (id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Assign Users &amp; Groups to Roles on a Single Binder
			-- 
			-- 
			-- argument: id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{id}/roles"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_id_roles_role_name_get (id: STRING_32; role_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Role
			-- 
			-- 
			-- argument: id The binder &#x60;id&#x60;. (required)
			-- 
			-- argument: role_name The name of the role to retrieve. For example, &#x60;owner__v&#x60;. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{id}/roles/{role_name}"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_path.replace_substring_all ("{"+"role_name"+"}", api_client.url_encode (role_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get (id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder User Actions
			-- 
			-- 
			-- argument: id The binder id field value from which to retrieve available user actions. (required)
			-- 
			-- argument: major_version The major version number of the binder. (required)
			-- 
			-- argument: minor_version The minor version number of the binder. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_ventry_requirements_get (id: STRING_32; major_version: STRING_32; minor_version: STRING_32; name__v: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder Entry Criteria
			-- 
			-- 
			-- argument: id The binder id field value from which to retrieve available user actions. (required)
			-- 
			-- argument: major_version The major version number of the binder. (required)
			-- 
			-- argument: minor_version The minor version number of the binder. (required)
			-- 
			-- argument: name__v The lifecycle name__v field value from which to retrieve entry criteria. This is retrieved from the Retrieve User Actions request above. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}/entry_requirements"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"name__v"+"}", api_client.url_encode (name__v.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_vput (id: STRING_32; major_version: STRING_32; minor_version: STRING_32; name__v: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Initiate Binder User Action
			-- 
			-- 
			-- argument: id The binder id field value from which to retrieve available user actions. (required)
			-- 
			-- argument: major_version The major version number of the binder. (required)
			-- 
			-- argument: minor_version The minor version number of the binder. (required)
			-- 
			-- argument: name__v The action name__v field value to initiate. This is retrieved from the Retrieve User Action request. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"name__v"+"}", api_client.url_encode (name__v.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_lifecycle_actions_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve User Actions on Multiple Binders
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/lifecycle_actions"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_lifecycle_actions_user_action_name_put (user_action_name: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Initiate Bulk Binder User Actions
			-- 
			-- 
			-- argument: user_action_name The user action name__v field value. Find this value with the Retrieve User Actions on Multiple Binders endpoint. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/lifecycle_actions/{user_action_name}"
			l_path.replace_substring_all ("{"+"user_action_name"+"}", api_client.url_encode (user_action_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_post (async: BOOLEAN; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Binder
			-- 
			-- 
			-- argument: async When creating a binder, the binder metadata is indexed synchronously by default. To process the indexing asynchronously, include a query parameter async set to true (objects/binders?async&#x3D;true). This helps speed up the response time from Vault when processing large amounts of data.  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "async", async));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_templates_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder Template Collection
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/templates"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_templates_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Binder Template
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/templates"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_templates_put (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Binder Template
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/templates"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_templates_template_name_bindernodes_get (template_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder Template Node Attributes
			-- 
			-- 
			-- argument: template_name The binder template name__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/templates/{template_name}/bindernodes"
			l_path.replace_substring_all ("{"+"template_name"+"}", api_client.url_encode (template_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_templates_template_name_bindernodes_post (template_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Binder Template Node
			-- 
			-- 
			-- argument: template_name The binder template name__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/templates/{template_name}/bindernodes"
			l_path.replace_substring_all ("{"+"template_name"+"}", api_client.url_encode (template_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_templates_template_name_bindernodes_put (template_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Replace Binder Template Nodes
			-- 
			-- 
			-- argument: template_name The binder template name__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/templates/{template_name}/bindernodes"
			l_path.replace_substring_all ("{"+"template_name"+"}", api_client.url_encode (template_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_templates_template_name_delete (template_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Binder Template
			-- 
			-- 
			-- argument: template_name The binder template name__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/templates/{template_name}"
			l_path.replace_substring_all ("{"+"template_name"+"}", api_client.url_encode (template_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_binders_templates_template_name_get (template_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Binder Template Attributes
			-- 
			-- 
			-- argument: template_name The binder template name__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/binders/templates/{template_name}"
			l_path.replace_substring_all ("{"+"template_name"+"}", api_client.url_encode (template_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_deletions_documents_get (start_date: STRING_32; end_date: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Deleted Document IDs
			-- 
			-- 
			-- argument: start_date Specify a date (no more than 30 days past) after which Vault will look for deleted documents. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z (optional, default to null)
			-- 
			-- argument: end_date Specify a date (no more than 30 days past) before which Vault will look for deleted documents. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/deletions/documents"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "start_date", start_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "end_date", end_date));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_deletions_vobjects_object_name_get (object_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Deleted Object Record ID
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/deletions/vobjects/{object_name}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_actions_get (loc: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Document Workflows
			-- 
			-- 
			-- argument: loc When localized (translated) strings are available, retrieve them by setting loc to true. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/actions"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get (lifecycle_and_state_and_action: STRING_32; job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Controlled Copy Job Results
			-- 
			-- 
			-- argument: lifecycle_and_state_and_action The &#x60;name__v&#x60; values for the lifecycle, state, and action in the format &#x60;{lifecycle_name}.{state_name}.{action_name}&#x60;. To get this value, [Retrieve the Job Status](https://developer.veevavault.com/api/24.3#RetrieveJobStatus) and find the &#x60;href&#x60; under the &#x60;artifacts&#x60; link. (required)
			-- 
			-- argument: job_id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/actions/{lifecycle_and_state_and_action}/{job_id}/results"
			l_path.replace_substring_all ("{"+"lifecycle_and_state_and_action"+"}", api_client.url_encode (lifecycle_and_state_and_action.out))
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_actions_workflow_name_get (workflow_name: STRING_32; loc: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Workflow Details
			-- 
			-- 
			-- argument: workflow_name The document workflow name value. (required)
			-- 
			-- argument: loc When localized (translated) strings are available, retrieve them by setting loc to true. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/actions/{workflow_name}"
			l_path.replace_substring_all ("{"+"workflow_name"+"}", api_client.url_encode (workflow_name.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_actions_workflow_name_post (workflow_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Initiate Document Workflow
			-- 
			-- 
			-- argument: workflow_name The document workflow name value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/actions/{workflow_name}"
			l_path.replace_substring_all ("{"+"workflow_name"+"}", api_client.url_encode (workflow_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_annotations_batch_delete (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Annotations
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/annotations/batch"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_annotations_batch_post (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Multiple Annotations
			-- 
			-- 
			-- argument: authorization  (required)
			-- 
			-- argument: content__type  (required)
			-- 
			-- argument: accept  (required)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (required)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/annotations/batch"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_annotations_batch_put (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Annotations
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/annotations/batch"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_annotations_replies_batch_post (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Add Annotation Replies
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/annotations/replies/batch"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_attachments_batch_delete (accept: STRING_32; authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Multiple Document Attachments
			-- 
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/attachments/batch"

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_attachments_batch_post (accept: STRING_32; authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Multiple Document Attachments
			-- 
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/attachments/batch"

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_attachments_batch_put (accept: STRING_32; authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Multiple Document Attachment Descriptions
			-- 
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/attachments/batch"

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_batch_actions_fileextract_job_id_results_get (job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Export Results
			-- 
			-- 
			-- argument: job_id The id value of the requested export job. This is returned with the export document requests. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/batch/actions/fileextract/{job_id}/results"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_batch_actions_fileextract_post (source: BOOLEAN; renditions: BOOLEAN; allversions: BOOLEAN; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Export Documents
			-- 
			-- 
			-- argument: source Optional: To exclude source files, include a query parameter source&#x3D;false. If omitted, defaults to true. (optional, default to null)
			-- 
			-- argument: renditions Optional: To include renditions, include a query parameter renditions&#x3D;true. If omitted, defaults to false. (optional, default to null)
			-- 
			-- argument: allversions Optional: To include all versions or latest version, include a query parameter allversions&#x3D;true. If omitted, defaults to false. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/batch/actions/fileextract"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "source", source));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "renditions", renditions));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "allversions", allversions));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_batch_actions_reclassify_put (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__migration_mode: BOOLEAN; x__vault_ap_i__client_id: STRING_32)
			-- Reclassify Multiple Documents
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__migration_mode When set to true, Vault allows you to manually set the document number and to update documents to any lifecycle state using the status__v field. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message.  You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;\&quot;https://platform.veevavault.help/en/gr/54028\&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/batch/actions/reclassify"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__migration_mode as l_x__vault_ap_i__migration_mode then
				l_request.add_header(l_x__vault_ap_i__migration_mode.out,"X-VaultAPI-MigrationMode");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_batch_actions_rerender_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Multiple Document Renditions
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/batch/actions/rerender"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_batch_delete (id_param: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Multiple Documents
			-- 
			-- 
			-- argument: id_param If you’re identifying documents in your input by their external ID (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/batch"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "idParam", id_param));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_batch_lock_delete (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Undo Collaborative Authoring Checkout
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/batch/lock"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_batch_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__migration_mode: BOOLEAN; x__vault_ap_i__client_id: STRING_32)
			-- Create Multiple Documents
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__migration_mode When set to true, Vault allows you to create documents in any lifecycle state using the status__v field, and to manually set the name, document number, and version number. Vault also bypasses entry criteria, entry actions, and event actions. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;\&quot;https://platform.veevavault.help/en/gr/54028\&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/batch"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__migration_mode as l_x__vault_ap_i__migration_mode then
				l_request.add_header(l_x__vault_ap_i__migration_mode.out,"X-VaultAPI-MigrationMode");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_batch_put (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__migration_mode: BOOLEAN; x__vault_ap_i__client_id: STRING_32)
			-- Update Multiple Documents
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__migration_mode When set to true, Vault allows you to change the document number. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message. You must have the Document Migration permission to use this header.Learn more about &lt;a href&#x3D;\&quot;https://platform.veevavault.help/en/gr/54028\&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/batch"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__migration_mode as l_x__vault_ap_i__migration_mode then
				l_request.add_header(l_x__vault_ap_i__migration_mode.out,"X-VaultAPI-MigrationMode");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_anchors_get (doc_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Anchor IDs
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/anchors"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_annotations_file_get (doc_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Export Document Annotations to PDF
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/annotations/file"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_annotations_file_post (doc_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Import Document Annotations from PDF
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/annotations/file"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_attachment_id_delete (doc_id: STRING_32; attachment_id: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Single Document Attachment
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments/{attachment_id}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_attachment_id_file_get (doc_id: STRING_32; attachment_id: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Document Attachment
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments/{attachment_id}/file"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_attachment_id_get (doc_id: STRING_32; attachment_id: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Attachment Metadata
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments/{attachment_id}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_attachment_id_put (doc_id: STRING_32; attachment_id: STRING_32; accept: STRING_32; authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Document Attachment Description
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments/{attachment_id}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete (doc_id: STRING_32; attachment_id: STRING_32; attachment_version: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Single Document Attachment Version
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: attachment_version The attachment version__v field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))
			l_path.replace_substring_all ("{"+"attachment_version"+"}", api_client.url_encode (attachment_version.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get (doc_id: STRING_32; attachment_id: STRING_32; attachment_version: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Document Attachment Version
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: attachment_version The attachment version__v field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}/file"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))
			l_path.replace_substring_all ("{"+"attachment_version"+"}", api_client.url_encode (attachment_version.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get (doc_id: STRING_32; attachment_id: STRING_32; attachment_version: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Attachment Version Metadata
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: attachment_version The attachment version__v field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))
			l_path.replace_substring_all ("{"+"attachment_version"+"}", api_client.url_encode (attachment_version.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post (doc_id: STRING_32; attachment_id: STRING_32; attachment_version: STRING_32; restore: BOOLEAN; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Restore Document Attachment Version
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: attachment_version The attachment version__v field value. (required)
			-- 
			-- argument: restore The parameter restore must be set to true.  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))
			l_path.replace_substring_all ("{"+"attachment_version"+"}", api_client.url_encode (attachment_version.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "restore", restore));

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_attachment_id_versions_get (doc_id: STRING_32; attachment_id: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Attachment Versions
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments/{attachment_id}/versions"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_file_get (doc_id: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download All Document Attachments
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments/file"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_get (doc_id: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Attachments
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_attachments_post (doc_id: STRING_32; accept: STRING_32; authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Document Attachment
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/attachments"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_audittrail_get (doc_id: STRING_32; start_date: STRING_32; end_date: STRING_32; format_result: STRING_32; limit: STRING_32; offset: STRING_32; events: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Complete Audit History for a Single Document
			-- 
			-- 
			-- argument: doc_id The document ID for which to retrieve audit history. (required)
			-- 
			-- argument: start_date Specify a start date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to the vault’s creation date.  (optional, default to null)
			-- 
			-- argument: end_date Specify an end date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to today’s date.  (optional, default to null)
			-- 
			-- argument: format_result To request a CSV file of your audit history, use csv.  (optional, default to null)
			-- 
			-- argument: limit Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200. (optional, default to null)
			-- 
			-- argument: offset Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. If omitted, defaults to 0. (optional, default to null)
			-- 
			-- argument: events Provide a comma-separated list of one or more audit events to retrieve their audit history. See Vault Help for a full list of document audit events. The values passed to this parameter are case sensitive. For example, events&#x3D;WorkflowCompletion,TaskAssignment. If omitted, defaults to all audit events. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/audittrail"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "start_date", start_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "end_date", end_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "format_result", format_result));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "offset", offset));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "events", events));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_delete (doc_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Single Document
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_events_get (doc_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Events
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/events"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_file_get (doc_id: STRING_32; lock_document: BOOLEAN; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Document File
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: lock_document Set to true to Check Out this document before retrieval. If omitted, defaults to false. (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/file"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "lockDocument", lock_document));

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_get (doc_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_lock_delete (doc_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Document Lock
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/lock"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_lock_get (doc_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Lock
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/lock"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_lock_post (doc_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Document Lock
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/lock"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_major_version_minor_version_attachments_file_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download All Document Version Attachments
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/{major_version}/{minor_version}/attachments/file"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_post (doc_id: STRING_32; suppress_rendition: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Single Document Version
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: suppress_rendition Set to true to suppress automatic generation of the viewable rendition. If omitted, defaults to false (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "suppressRendition", suppress_rendition));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_put (doc_id: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__migration_mode: BOOLEAN; x__vault_ap_i__client_id: STRING_32)
			-- Update Single Document
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__migration_mode When set to true, Vault allows you to change the document number. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;\&quot;https://platform.veevavault.help/en/gr/54028\&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__migration_mode as l_x__vault_ap_i__migration_mode then
				l_request.add_header(l_x__vault_ap_i__migration_mode.out,"X-VaultAPI-MigrationMode");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_renditions_get (doc_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Renditions
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/renditions"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_renditions_rendition_type_delete (doc_id: STRING_32; rendition_type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Single Document Rendition
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: rendition_type The document rendition type. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/renditions/{rendition_type}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"rendition_type"+"}", api_client.url_encode (rendition_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_renditions_rendition_type_get (doc_id: STRING_32; rendition_type: STRING_32; steady_state: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Document Rendition File
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: rendition_type The document rendition type. (required)
			-- 
			-- argument: steady_state Set to true to download a rendition (file) from the latest steady state version (1.0, 2.0, etc.) of a document.  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/renditions/{rendition_type}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"rendition_type"+"}", api_client.url_encode (rendition_type.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "steadyState", steady_state));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_renditions_rendition_type_post (doc_id: STRING_32; rendition_type: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Add Single Document Rendition
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: rendition_type The document rendition type. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/renditions/{rendition_type}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"rendition_type"+"}", api_client.url_encode (rendition_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_renditions_rendition_type_put (doc_id: STRING_32; rendition_type: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Replace Document Rendition
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: rendition_type The document rendition type. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/renditions/{rendition_type}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"rendition_type"+"}", api_client.url_encode (rendition_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete (doc_id: STRING_32; role_name_and_user_or_group: STRING_32; id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Remove Users &amp; Groups from Roles on a Single Document
			-- 
			-- 
			-- argument: doc_id The id value of the document from which to remove roles. (required)
			-- 
			-- argument: role_name_and_user_or_group The name of the role from which to remove the user or group followed by either &#x60;user&#x60; or &#x60;group&#x60;. The format is &#x60;{role_name}.{user_or_group}&#x60;. For example, &#x60;consumer__v.user&#x60;. (required)
			-- 
			-- argument: id The id value of the user or group to remove from the role. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/roles/{role_name_and_user_or_group}/{id}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"role_name_and_user_or_group"+"}", api_client.url_encode (role_name_and_user_or_group.out))
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_version_major_version_minor_version_attachments_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Version Attachments
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/version/{major_version}/{minor_version}/attachments"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_get (doc_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Versions
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; annotation_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Read Annotations by ID
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: annotation_id The annotation ID, which can be retrieved with Read Annotations by Document Version and Type. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/{annotation_id}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"annotation_id"+"}", api_client.url_encode (annotation_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; annotation_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Read Replies of Parent Annotation
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: annotation_id The parent annotation ID, which can be retrieved with Read Annotations by Document Version and Type. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/{annotation_id}/replies"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"annotation_id"+"}", api_client.url_encode (annotation_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Export Document Version Annotations to PDF
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/file"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Import Document Version Annotations from PDF
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/file"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_annotations_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; limit: STRING_32; offset: STRING_32; annotation_types: STRING_32; pagination_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Read Annotations by Document Version and Type
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: limit Paginate the results by specifying the maximum number of records per page in the response. This can be any value between 1 and 500. If omitted, defaults to 500. Values greater than 500 are ignored. (optional, default to null)
			-- 
			-- argument: offset This parameter is used to paginate the results. It specifies the amount of offset from the first record returned. Vault returns 200 records per page by default. If you are viewing the first 200 results (page 1) and want to see the next page, set this to offset&#x3D;201. (optional, default to null)
			-- 
			-- argument: annotation_types The type(s) of annotations to retrieve. For example, note__sys,anchor__sys. If omitted, Vault returns all annotations. Valid annotation types include: &#x60;note__sys&#x60; &#x60;line__sys&#x60; &#x60;document_link__sys&#x60; &#x60;permalink_link__sys&#x60; &#x60;anchor__sys&#x60; &#x60;reply__sys&#x60; &#x60;external_link__sys&#x60;  The following annotation types are only valid in PromoMats Vaults:  &#x60;suggested_link__sys&#x60; &#x60;approved_link__sys&#x60; &#x60;auto_link__sys&#x60; &#x60;keyword_link__sys&#x60;  (optional, default to null)
			-- 
			-- argument: pagination_id A unique identifier used to load requests with paginated results. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "offset", offset));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "annotation_types", annotation_types));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "pagination_id", pagination_id));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; attachment_id: STRING_32; attachment_version: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Document Version Attachment Version
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: attachment_id The id field value of the attachment. (required)
			-- 
			-- argument: attachment_version The version of the attachment. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/attachments/{attachment_id}/versions/{attachment_version}/file"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))
			l_path.replace_substring_all ("{"+"attachment_version"+"}", api_client.url_encode (attachment_version.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; attachment_id: STRING_32; attachment_version: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Version Attachment Versions
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: attachment_id The id of the document attachment to retrieve. (required)
			-- 
			-- argument: attachment_version Optional: The version of the attachment to retrieve. If omitted, the endpoint retrieves all versions of the specified attachment. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/attachments/{attachment_id}/versions/{attachment_version}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))
			l_path.replace_substring_all ("{"+"attachment_version"+"}", api_client.url_encode (attachment_version.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_delete (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Single Document Version
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Version Notes as CSV
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/doc-export-annotations-to-csv"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_events_post (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Document Event
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/events"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Video Annotations
			-- 
			-- 
			-- argument: doc_id The video document id field value. (required)
			-- 
			-- argument: major_version The video document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The video document minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept This &#x60;Accept&#x60; header only changes the format of the response in the case of an error. On &#x60;SUCCESS&#x60;, the HTTP Response Header &#x60;Content-Type&#x60; is set to &#x60;text/plain;charset&#x3D;UnicodeLittle&#x60;. (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/export-video-annotations"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_file_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Document Version File
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/file"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Version
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_put (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__migration_mode: BOOLEAN; x__vault_ap_i__client_id: STRING_32)
			-- Update Document Version
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__migration_mode When set to true, Vault allows you to manually set the document number. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;\&quot;https://platform.veevavault.help/en/gr/54028\&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__migration_mode as l_x__vault_ap_i__migration_mode then
				l_request.add_header(l_x__vault_ap_i__migration_mode.out,"X-VaultAPI-MigrationMode");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_relationships_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Relationships
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_relationships_post (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Single Document Relationship
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; relationship_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Single Document Relationship
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: relationship_id The relationship id field value. See Retrieve Document Relationships. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"relationship_id"+"}", api_client.url_encode (relationship_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; relationship_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Relationship
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: relationship_id The relationship id field value. See Retrieve Document Relationships. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"relationship_id"+"}", api_client.url_encode (relationship_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_renditions_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Version Renditions
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; rendition_type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Document Version Rendition
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: rendition_type The document rendition type. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"rendition_type"+"}", api_client.url_encode (rendition_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; rendition_type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Document Version Rendition File
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: rendition_type The document rendition type. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"rendition_type"+"}", api_client.url_encode (rendition_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; rendition_type: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Upload Document Version Rendition
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: rendition_type The document rendition type. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"rendition_type"+"}", api_client.url_encode (rendition_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; rendition_type: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Replace Document Version Rendition
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: rendition_type The document rendition type. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"rendition_type"+"}", api_client.url_encode (rendition_type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get (doc_id: STRING_32; major_version: STRING_32; minor_version: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Document Version Thumbnail File
			-- 
			-- 
			-- argument: doc_id The document id field value. (required)
			-- 
			-- argument: major_version The document major_version_number__v field value. (required)
			-- 
			-- argument: minor_version The document minor_version_number__v field value. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/thumbnail"
			l_path.replace_substring_all ("{"+"doc_id"+"}", api_client.url_encode (doc_id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_get (named_filter: STRING_32; scope: STRING_32; versionscope: STRING_32; search: STRING_32; limit: STRING_32; sort: STRING_32; start: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Documents
			-- 
			-- 
			-- argument: named_filter Retrieves only documents which you have created. (optional, default to null)
			-- 
			-- argument: scope Searches only within the document content. (optional, default to null)
			-- 
			-- argument: versionscope Retrieves all document versions, rather than only the latest version. (optional, default to null)
			-- 
			-- argument: search Search for documents based on a {keyword} in searchable document fields. (optional, default to null)
			-- 
			-- argument: limit See VQL documentation for more information. (optional, default to null)
			-- 
			-- argument: sort See VQL documentation for more information. (optional, default to null)
			-- 
			-- argument: start See VQL documentation for more information. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "named_filter", named_filter));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "scope", scope));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "versionscope", versionscope));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "search", search));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "sort", sort));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "start", start));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_id_roles_get (id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Document Roles
			-- 
			-- 
			-- argument: id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{id}/roles"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_id_roles_post (id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Assign Users &amp; Groups to Roles on a Single Document
			-- 
			-- 
			-- argument: id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{id}/roles"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_id_roles_role_name_get (id: STRING_32; role_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Role
			-- 
			-- 
			-- argument: id The document &#x60;id&#x60;. (required)
			-- 
			-- argument: role_name The name of the role to retrieve. For example, &#x60;owner__v&#x60;. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{id}/roles/{role_name}"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_path.replace_substring_all ("{"+"role_name"+"}", api_client.url_encode (role_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get (id: STRING_32; major_version: STRING_32; minor_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document User Actions
			-- 
			-- 
			-- argument: id The document id field value from which to retrieve available user actions. (required)
			-- 
			-- argument: major_version The major version number of the document. (required)
			-- 
			-- argument: minor_version The minor version number of the document. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_ventry_requirements_get (id: STRING_32; major_version: STRING_32; minor_version: STRING_32; name__v: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Entry Criteria
			-- 
			-- 
			-- argument: id The document id field value from which to retrieve available user actions. (required)
			-- 
			-- argument: major_version The major version number of the document. (required)
			-- 
			-- argument: minor_version The minor version number of the document. (required)
			-- 
			-- argument: name__v The lifecycle name__v field value from which to retrieve entry criteria. This is retrieved from the Retrieve User Actions request above. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}/entry_requirements"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"name__v"+"}", api_client.url_encode (name__v.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_vput (id: STRING_32; major_version: STRING_32; minor_version: STRING_32; name__v: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Initiate Document User Action
			-- 
			-- 
			-- argument: id The document id field value from which to retrieve available user actions. (required)
			-- 
			-- argument: major_version The major version number of the document. (required)
			-- 
			-- argument: minor_version The minor version number of the document. (required)
			-- 
			-- argument: name__v The action name__v field value to initiate. This is retrieved from the Retrieve User Action request. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_path.replace_substring_all ("{"+"major_version"+"}", api_client.url_encode (major_version.out))
			l_path.replace_substring_all ("{"+"minor_version"+"}", api_client.url_encode (minor_version.out))
			l_path.replace_substring_all ("{"+"name__v"+"}", api_client.url_encode (name__v.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_lifecycle_actions_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve User Actions on Multiple Documents
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/lifecycle_actions"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_lifecycle_actions_user_action_name_put (user_action_name: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Initiate Bulk Document User Actions
			-- 
			-- 
			-- argument: user_action_name The user action name__v field value. Find this value with the Retrieve User Actions on Multiple Documents endpoint. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/lifecycle_actions/{user_action_name}"
			l_path.replace_substring_all ("{"+"user_action_name"+"}", api_client.url_encode (user_action_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_post (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__migration_mode: BOOLEAN; x__vault_ap_i__client_id: STRING_32)
			-- Create Single Document
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__migration_mode When set to true,  you can use the status__v field to create documents in any lifecycle state. Additionally, you can manually set the name, document number, and version number. Vault also bypasses entry criteria, entry actions, and event actions. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;\&quot;https://platform.veevavault.help/en/gr/54028\&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__migration_mode as l_x__vault_ap_i__migration_mode then
				l_request.add_header(l_x__vault_ap_i__migration_mode.out,"X-VaultAPI-MigrationMode");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_relationships_batch_delete (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Multiple Document Relationships
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/relationships/batch"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_relationships_batch_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Multiple Document Relationships
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/relationships/batch"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_renditions_batch_delete (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Multiple Document Renditions
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/renditions/batch"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_renditions_batch_post (id_param: STRING_32; large_size_asset: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__migration_mode: BOOLEAN; x__vault_ap_i__client_id: STRING_32)
			-- Add Multiple Document Renditions
			-- 
			-- 
			-- argument: id_param If you’re identifying documents in your input by their external ID (optional, default to null)
			-- 
			-- argument: large_size_asset If set to true, indicates that the renditions to add are of the Large Size Asset (large_size_asset__v) rendition type. Vault applies Document Migration Mode limitations to renditions created with the request, but Document Migration permission is not required and your vault need not be in Migration Mode to use the parameter. Note that the request results in an error if the CSV contains any rendition type other than large_size_asset__v. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__migration_mode Must be set to true when importing any rendition type other than large_size_asset__v. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;\&quot;https://platform.veevavault.help/en/gr/54028\&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/renditions/batch"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "idParam", id_param));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "largeSizeAsset", large_size_asset));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__migration_mode as l_x__vault_ap_i__migration_mode then
				l_request.add_header(l_x__vault_ap_i__migration_mode.out,"X-VaultAPI-MigrationMode");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_roles_batch_delete (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Remove Users and Groups from Roles on Multiple Documents &amp; Binders
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/roles/batch"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_roles_batch_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Assign Users &amp; Groups to Roles on Multiple Documents &amp; Binders
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/roles/batch"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_templates_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Template Collection
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/templates"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_templates_post (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Single Document Template
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/templates"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_templates_put (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Multiple Document Templates
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/templates"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_templates_template_name_delete (template_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Basic Document Template
			-- 
			-- 
			-- argument: template_name The document template name__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/templates/{template_name}"
			l_path.replace_substring_all ("{"+"template_name"+"}", api_client.url_encode (template_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_templates_template_name_file_get (template_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Document Template File
			-- 
			-- 
			-- argument: template_name The document template name__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/templates/{template_name}/file"
			l_path.replace_substring_all ("{"+"template_name"+"}", api_client.url_encode (template_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_templates_template_name_get (template_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Document Template Attributes
			-- 
			-- 
			-- argument: template_name The document template name__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/templates/{template_name}"
			l_path.replace_substring_all ("{"+"template_name"+"}", api_client.url_encode (template_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_templates_template_name_put (template_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Single Document Template
			-- 
			-- 
			-- argument: template_name The document template name__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/templates/{template_name}"
			l_path.replace_substring_all ("{"+"template_name"+"}", api_client.url_encode (template_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_tokens_post (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Document Tokens
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/tokens"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_versions_batch_actions_fileextract_post (source: BOOLEAN; renditions: BOOLEAN; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Export Document Versions
			-- 
			-- 
			-- argument: source Optional: To exclude source files, include a query parameter source&#x3D;false. If omitted, defaults to true. (optional, default to null)
			-- 
			-- argument: renditions Optional: To include renditions, include a query parameter renditions&#x3D;true. If omitted, defaults to false. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/versions/batch/actions/fileextract"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "source", source));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "renditions", renditions));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_versions_batch_delete (id_param: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Multiple Document Versions
			-- 
			-- 
			-- argument: id_param If you’re identifying documents in your input by their external ID (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/versions/batch"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "idParam", id_param));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_documents_versions_batch_post (id_param: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__migration_mode: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Multiple Document Versions
			-- 
			-- 
			-- argument: id_param If you’re identifying documents in your input by their external ID (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__migration_mode Must be set to true. Vault allows you to manually set the name and version number and to create documents in any lifecycle state using the &#x60;status__v&#x60; field, but does not allow you to change the document number. Vault also bypasses entry criteria, entry actions, and event actions. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;\&quot;https://platform.veevavault.help/en/gr/54028\&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/documents/versions/batch"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "idParam", id_param));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__migration_mode as l_x__vault_ap_i__migration_mode then
				l_request.add_header(l_x__vault_ap_i__migration_mode.out,"X-VaultAPI-MigrationMode");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_domain_get (include_application: BOOLEAN; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Domain Information
			-- 
			-- 
			-- argument: include_application To include Vault application type information in the response, set include_application to true. If omitted, defaults to false and application information is not included. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/domain"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "include_application", include_application));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_domains_get (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Domains
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/domains"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_edl_matched_documents_batch_actions_add_post (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Add EDL Matched Documents
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/edl_matched_documents/batch/actions/add"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_edl_matched_documents_batch_actions_remove_post (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Remove EDL Matched Documents
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/edl_matched_documents/batch/actions/remove"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_groups_auto_get (limit: STRING_32; offset: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Auto Managed Groups
			-- 
			-- 
			-- argument: limit Paginate the results by specifying the maximum number of records per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 1000.  (optional, default to null)
			-- 
			-- argument: offset Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. If omitted, defaults to 0. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/groups/auto"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "offset", offset));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_groups_get (include_implied: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Groups
			-- 
			-- 
			-- argument: include_implied When true, the response includes the implied_members__v field. These users are automatically added to the group when their security_profiles__v are added to the group. If omitted, the response includes only the members__v field. These users are individually added to a group by an Admin. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/groups"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "includeImplied", include_implied));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_groups_group_id_delete (group_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Group
			-- 
			-- 
			-- argument: group_id The group id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/groups/{group_id}"
			l_path.replace_substring_all ("{"+"group_id"+"}", api_client.url_encode (group_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_groups_group_id_get (group_id: STRING_32; include_implied: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Group
			-- 
			-- 
			-- argument: group_id The group id field value. (required)
			-- 
			-- argument: include_implied When true, the response includes the implied_members__v field. These users are automatically added to the group when their security_profiles__v are added to the group. When not used, the response includes only the members__v field. These users are individually added to a group by Admin. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/groups/{group_id}"
			l_path.replace_substring_all ("{"+"group_id"+"}", api_client.url_encode (group_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "includeImplied", include_implied));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_groups_group_id_put (group_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Group
			-- 
			-- 
			-- argument: group_id The group id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/groups/{group_id}"
			l_path.replace_substring_all ("{"+"group_id"+"}", api_client.url_encode (group_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_groups_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Group 
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/groups"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_licenses_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Application License Usage
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/licenses"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_actions_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Multi-Record Workflows
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/actions"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_actions_workflow_name_get (workflow_name: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Multi-Record Workflow Details
			-- 
			-- 
			-- argument: workflow_name  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/actions/{workflow_name}"
			l_path.replace_substring_all ("{"+"workflow_name"+"}", api_client.url_encode (workflow_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_actions_workflow_name_post (workflow_name: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Initiate Multi-Record Workflow
			-- 
			-- 
			-- argument: workflow_name  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/actions/{workflow_name}"
			l_path.replace_substring_all ("{"+"workflow_name"+"}", api_client.url_encode (workflow_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_get (object__v: STRING_32; record_id__v: STRING_32; participant: STRING_32; status__v: STRING_32; offset: STRING_32; page_size: STRING_32; loc: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Workflows
			-- 
			-- 
			-- argument: object__v To retrieve all workflows configured on an object, include the Vault object name__v and object record id field values as ?object__v&#x3D;{name__v}&amp;record_id__v&#x3D;{id}. These two parameters are required when the participant parameter is not used.  (optional, default to null)
			-- 
			-- argument: record_id__v To retrieve all workflows configured on an object, include the Vault object name__v and object record id field values as ?object__v&#x3D;{name__v}&amp;record_id__v&#x3D;{id}. These two parameters are required when the participant parameter is not used.  (optional, default to null)
			-- 
			-- argument: participant To retrieve all workflows available to a particular user, include the user id field value as ?participant&#x3D;{id}. To retrieve your own workflows, set this value to ?participant&#x3D;me. This parameter is required when the object__v and record_id__v parameters are not used.  (optional, default to null)
			-- 
			-- argument: status__v To retrieve all workflows with specific statuses, include one or more status name__v field values. For example: status__v&#x3D;active__v, status__v&#x3D;active__v,completed__v. Workflows with &#x60;status__v&#x3D;active__v&#x60; are in progress for the indicated object record. Valid statuses include: active__v completed__v cancelled__v (optional, default to null)
			-- 
			-- argument: offset This parameter is used to paginate the results. It specifies the amount of offset from the first record returned. Vault returns 200 records per page by default. If you are viewing the first 200 results (page 1) and want to see the next page, set this to ?offset&#x3D;201.  (optional, default to null)
			-- 
			-- argument: page_size This parameter is used to paginate the results. It specifies the size number of records to display per page. Vault returns 200 records per page by default. You can set this value lower or as high as 1000 records per page. For example: ?page_size&#x3D;1000.  (optional, default to null)
			-- 
			-- argument: loc When localized (translated) strings are available, retrieve them by including ?loc&#x3D;true.  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "object__v", object__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "record_id__v", record_id__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "participant", participant));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "status__v", status__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "offset", offset));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "page_size", page_size));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_get (object__v: STRING_32; record_id__v: STRING_32; assignee__v: STRING_32; status__v: STRING_32; offset: STRING_32; page_size: STRING_32; loc: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Workflow Tasks
			-- 
			-- 
			-- argument: object__v To retrieve all workflow tasks configured on an object, include the Vault object name__v and object record id field values as ?object__v&#x3D;{name__v}&amp;record_id__v&#x3D;{id}. These two parameters are required when the assignee__v parameter is not used. (optional, default to null)
			-- 
			-- argument: record_id__v To retrieve all workflow tasks configured on an object, include the Vault object name__v and object record id field values as ?object__v&#x3D;{name__v}&amp;record_id__v&#x3D;{id}. These two parameters are required when the assignee__v parameter is not used. (optional, default to null)
			-- 
			-- argument: assignee__v To retrieve all workflow tasks available to a particular user, include the user id field value as ?assignee__v&#x3D;{id}. To retrieve your own workflow tasks, set this value to ?assignee__v&#x3D;me. This parameter is required when the object__v and record_id__v parameters are not used.  (optional, default to null)
			-- 
			-- argument: status__v To retrieve all workflow tasks with specific statuses, include one or more status name__v field values. For example: ?status__v&#x3D;available__v or ?status__v&#x3D;available__v,completed__v.  (optional, default to null)
			-- 
			-- argument: offset This parameter is used to paginate the results. It specifies the amount of offset from the first record returned. Vault returns 200 records per page by default. If you are viewing the first 200 results (page 1) and want to see the next page, set this to ?offset&#x3D;201.  (optional, default to null)
			-- 
			-- argument: page_size This parameter is used to paginate the results. It specifies the size number of records to display per page. Vault returns 200 records per page by default. You can set this value lower or as high as 1000 records per page. For example: ?page_size&#x3D;1000.  (optional, default to null)
			-- 
			-- argument: loc When localized (translated) strings are available, retrieve them by including ?loc&#x3D;true.  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "object__v", object__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "record_id__v", record_id__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "assignee__v", assignee__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "status__v", status__v));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "offset", offset));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "page_size", page_size));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_accept_post (task_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Accept Single Record Workflow Task
			-- 
			-- 
			-- argument: task_id The task id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions/accept"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_cancel_post (task_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Cancel Workflow Task
			-- 
			-- 
			-- argument: task_id The task id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions/cancel"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_complete_post (task_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Complete Single Record Workflow Task
			-- 
			-- 
			-- argument: task_id The task id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions/complete"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_get (task_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Workflow Task Actions
			-- 
			-- 
			-- argument: task_id The task id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_mdwaccept_post (task_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Accept Multi-item Workflow Task
			-- 
			-- 
			-- argument: task_id The task id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions/mdwaccept"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post (task_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Complete Multi-item Workflow Task
			-- 
			-- 
			-- argument: task_id The task id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions/mdwcomplete"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post (task_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Manage Multi-Item Workflow Content
			-- 
			-- 
			-- argument: task_id The task id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions/mdwmanagecontent"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_mdwreassign_post (task_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Reassign Multi-item Workflow Task
			-- 
			-- 
			-- argument: task_id The id of the task to reassign. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions/mdwreassign"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_reassign_post (task_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Reassign Single Record Workflow Task
			-- 
			-- 
			-- argument: task_id The id of the task to reassign. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions/reassign"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_task_action_get (task_id: STRING_32; task_action: STRING_32; loc: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Workflow Task Action Details
			-- 
			-- 
			-- argument: task_id The task id field value. (required)
			-- 
			-- argument: task_action The name of the task action retrieved from Retrieve Workflow Task Actions. (required)
			-- 
			-- argument: loc When localized (translated) strings are available, retrieve them by including loc&#x3D;true.  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions/{task_action}"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))
			l_path.replace_substring_all ("{"+"task_action"+"}", api_client.url_encode (task_action.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_undoaccept_post (task_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Undo Workflow Task Acceptance
			-- 
			-- 
			-- argument: task_id The task id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions/undoaccept"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_actions_updateduedate_post (task_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Workflow Task Due Date
			-- 
			-- 
			-- argument: task_id The id of the task. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}/actions/updateduedate"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_tasks_task_id_get (task_id: STRING_32; loc: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Workflow Task Details
			-- 
			-- 
			-- argument: task_id The task id field value. (required)
			-- 
			-- argument: loc When localized (translated) strings are available, retrieve them by including loc&#x3D;true. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/tasks/{task_id}"
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_workflow_id_actions_get (workflow_id: STRING_32; loc: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Workflow Actions
			-- 
			-- 
			-- argument: workflow_id The workflow id field value. (required)
			-- 
			-- argument: loc When localized (translated) strings are available, retrieve them by including loc&#x3D;true.  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/{workflow_id}/actions"
			l_path.replace_substring_all ("{"+"workflow_id"+"}", api_client.url_encode (workflow_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_workflow_id_actions_workflow_action_get (workflow_id: STRING_32; workflow_action: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Workflow Action Details
			-- 
			-- 
			-- argument: workflow_id The workflow id field value. (required)
			-- 
			-- argument: workflow_action The workflow action name retrieved from Retrieve Workflow Actions. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/{workflow_id}/actions/{workflow_action}"
			l_path.replace_substring_all ("{"+"workflow_id"+"}", api_client.url_encode (workflow_id.out))
			l_path.replace_substring_all ("{"+"workflow_action"+"}", api_client.url_encode (workflow_action.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_workflow_id_actions_workflow_action_post (workflow_id: STRING_32; workflow_action: STRING_32; documents__sys: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Initiate Workflow Action
			-- 
			-- 
			-- argument: workflow_id The workflow id field value. (required)
			-- 
			-- argument: workflow_action The workflow action name retrieved from Retrieve Workflow Actions. (required)
			-- 
			-- argument: documents__sys Include the id or ids as a comma-separated list of the document(s) to be removed from a document workflow when using the removecontent action. If your workflow_action is remove_content, include the id of the document to remove the workflow. To remove multiple documents, use a comma-separated list of ids. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/{workflow_id}/actions/{workflow_action}"
			l_path.replace_substring_all ("{"+"workflow_id"+"}", api_client.url_encode (workflow_id.out))
			l_path.replace_substring_all ("{"+"workflow_action"+"}", api_client.url_encode (workflow_action.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "documents__sys", documents__sys));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_objectworkflows_workflow_id_get (workflow_id: STRING_32; loc: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Workflow Details
			-- 
			-- 
			-- argument: workflow_id The workflow id field value. (required)
			-- 
			-- argument: loc When localized (translated) strings are available, retrieve them by including loc&#x3D;true. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/objectworkflows/{workflow_id}"
			l_path.replace_substring_all ("{"+"workflow_id"+"}", api_client.url_encode (workflow_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_picklists_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Picklists
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/picklists"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_picklists_picklist_name_get (picklist_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Picklist Values
			-- 
			-- 
			-- argument: picklist_name The picklist name field value (license_type__v, product_family__c, region__c, etc.) (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/picklists/{picklist_name}"
			l_path.replace_substring_all ("{"+"picklist_name"+"}", api_client.url_encode (picklist_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_picklists_picklist_name_picklist_value_name_delete (picklist_name: STRING_32; picklist_value_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Inactivate Picklist Value
			-- 
			-- 
			-- argument: picklist_name The picklist name field value (license_type__v, product_family__c, region__c, etc.) (required)
			-- 
			-- argument: picklist_value_name The picklist value name field value (north_america__c, south_america__c, etc.) (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/picklists/{picklist_name}/{picklist_value_name}"
			l_path.replace_substring_all ("{"+"picklist_name"+"}", api_client.url_encode (picklist_name.out))
			l_path.replace_substring_all ("{"+"picklist_value_name"+"}", api_client.url_encode (picklist_value_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_picklists_picklist_name_picklist_value_name_put (picklist_name: STRING_32; picklist_value_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Picklist Value
			-- 
			-- 
			-- argument: picklist_name The picklist name field value (license_type__v, product_family__c, region__c, etc.) (required)
			-- 
			-- argument: picklist_value_name The picklist value name field value (north_america__c, south_america__c, etc.) (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/picklists/{picklist_name}/{picklist_value_name}"
			l_path.replace_substring_all ("{"+"picklist_name"+"}", api_client.url_encode (picklist_name.out))
			l_path.replace_substring_all ("{"+"picklist_value_name"+"}", api_client.url_encode (picklist_value_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_picklists_picklist_name_post (picklist_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Picklist Values
			-- 
			-- 
			-- argument: picklist_name The picklist name field value (license_type__v, product_family__c, region__c, etc.) (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/picklists/{picklist_name}"
			l_path.replace_substring_all ("{"+"picklist_name"+"}", api_client.url_encode (picklist_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_picklists_picklist_name_put (picklist_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Picklist Value Label
			-- 
			-- 
			-- argument: picklist_name The picklist name field value (license_type__v, product_family__c, region__c, etc.) (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/picklists/{picklist_name}"
			l_path.replace_substring_all ("{"+"picklist_name"+"}", api_client.url_encode (picklist_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_actions_buildproduction_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Build Production Vault
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/actions/buildproduction"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_actions_promoteproduction_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Promote to Production
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/actions/promoteproduction"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_actions_recheckusage_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Recheck Sandbox Usage Limit
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/actions/recheckusage"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_batch_changesize_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Change Sandbox Size
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/batch/changesize"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_entitlements_set_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Set Sandbox Entitlements
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/entitlements/set"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Sandboxes
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_name_delete (name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Sandbox
			-- 
			-- 
			-- argument: name The name of the sandbox vault to delete. This is the name which appears on the My Vaults page. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/{name}"
			l_path.replace_substring_all ("{"+"name"+"}", api_client.url_encode (name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create or Refresh Sandbox
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_snapshot_api_name_actions_update_post (api_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Sandbox Snapshot
			-- 
			-- 
			-- argument: api_name The Vault ID of the sandbox. Obtain this from the Retrieve Sandbox Snapshots request. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/snapshot/{api_name}/actions/update"
			l_path.replace_substring_all ("{"+"api_name"+"}", api_client.url_encode (api_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_snapshot_api_name_actions_upgrade_post (api_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Upgrade Sandbox Snapshot
			-- 
			-- 
			-- argument: api_name The Vault ID of the sandbox. Obtain this from the Retrieve Sandbox Snapshots request. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/snapshot/{api_name}/actions/upgrade"
			l_path.replace_substring_all ("{"+"api_name"+"}", api_client.url_encode (api_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_snapshot_api_name_delete (api_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Sandbox Snapshot
			-- 
			-- 
			-- argument: api_name The Vault ID of the sandbox. Obtain this from the Retrieve Sandbox Snapshots request. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/snapshot/{api_name}"
			l_path.replace_substring_all ("{"+"api_name"+"}", api_client.url_encode (api_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_snapshot_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Sandbox Snapshots
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/snapshot"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_snapshot_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Sandbox Snapshot
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/snapshot"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_vault_id_actions_refresh_post (vault_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Refresh Sandbox from Snapshot
			-- 
			-- 
			-- argument: vault_id The Vault ID of the sandbox to be refreshed. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/{vault_id}/actions/refresh"
			l_path.replace_substring_all ("{"+"vault_id"+"}", api_client.url_encode (vault_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_sandbox_vault_id_get (vault_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Sandbox Details by ID
			-- 
			-- 
			-- argument: vault_id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/sandbox/{vault_id}"
			l_path.replace_substring_all ("{"+"vault_id"+"}", api_client.url_encode (vault_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_securitypolicies_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Security Policies
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/securitypolicies"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_securitypolicies_security_policy_name_get (security_policy_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Security Policy
			-- 
			-- 
			-- argument: security_policy_name Security policy name__v field value (retrieved from previous request). This is typically a numeric value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/securitypolicies/{security_policy_name}"
			l_path.replace_substring_all ("{"+"security_policy_name"+"}", api_client.url_encode (security_policy_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_get (vaults: STRING_32; exclude_vault_membership: STRING_32; exclude_app_licensing: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Users
			-- 
			-- 
			-- argument: vaults Retrieve all users assigned to all Vaults in your domain. (optional, default to null)
			-- 
			-- argument: exclude_vault_membership Optional: Set to false to include vault_membership fields. If true or omitted, vault_membership fields are not included in the response. (optional, default to null)
			-- 
			-- argument: exclude_app_licensing Optional: Set to false to include app_licensing fields. If true or omitted, app_licensing fields are not included in the response. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users/"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "vaults", vaults));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "exclude_vault_membership", exclude_vault_membership));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "exclude_app_licensing", exclude_app_licensing));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_id_get (id: STRING_32; exclude_vault_membership: STRING_32; exclude_app_licensing: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve User
			-- 
			-- 
			-- argument: id The user id field value. Use the value me to get information for the currently authenticated user. (required)
			-- 
			-- argument: exclude_vault_membership Optional: Set to true to omit vault_membership fields. If you don’t need these fields, this may increase performance. If omitted, vault_membership fields are included in the response. (optional, default to null)
			-- 
			-- argument: exclude_app_licensing Optional: Set to true to omit app_licensing fields. If you don’t need these fields, this may increase performance. If omitted, app_licensing fields are included in the response. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users/{id}"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "exclude_vault_membership", exclude_vault_membership));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "exclude_app_licensing", exclude_app_licensing));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_id_permissions_get (id: STRING_32; filter: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve User Permissions
			-- 
			-- 
			-- argument: id The ID of the user. Use the value me to retrieve information for the currently authenticated user. (required)
			-- 
			-- argument: filter Filter the results to show only one specific name__v, which is in the format object.{object name}.{object or field}_actions. Wildcards are not supported. See example below. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users/{id}/permissions"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "filter", filter));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_id_put (id: STRING_32; authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Single User
			-- 
			-- 
			-- argument: id The user id field value. Use the value me to get information for the currently authenticated user. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users/{id}"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_me_get (exclude_vault_membership: STRING_32; exclude_app_licensing: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Validate Session User
			-- 
			-- 
			-- argument: exclude_vault_membership Optional: Set to true to omit vault_membership fields. If you don’t need these fields, this may increase performance. If omitted, vault_membership fields are included in the response. (optional, default to null)
			-- 
			-- argument: exclude_app_licensing Optional: Set to true to omit app_licensing fields. If you don’t need these fields, this may increase performance. If omitted, app_licensing fields are included in the response. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users/me"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "exclude_vault_membership", exclude_vault_membership));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "exclude_app_licensing", exclude_app_licensing));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_me_password_post (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Change My Password
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users/me/password"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_me_permissions_get (filter: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve My User Permissions
			-- 
			-- 
			-- argument: filter Filter the results to show only one specific name__v, which is in the format object.{object name}.{object or field}_actions. Wildcards are not supported. See example below. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users/me/permissions"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "filter", filter));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_me_put (authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update My User
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users/me"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Single User
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_put (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Multiple Users
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_user_id_delete (user_id: STRING_32; domain: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Disable User
			-- 
			-- 
			-- argument: user_id The user id field value.  (required)
			-- 
			-- argument: domain When true, this disables the user account in all vaults in the domain. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users/{user_id}"
			l_path.replace_substring_all ("{"+"user_id"+"}", api_client.url_encode (user_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "domain", domain));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_users_user_id_vault_membership_vault_id_put (user_id: STRING_32; vault_id: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Vault Membership
			-- 
			-- 
			-- argument: user_id The user id field value. (required)
			-- 
			-- argument: vault_id The system-managed id field value assigned to each vault in the domain. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/users/{user_id}/vault_membership/{vault_id}"
			l_path.replace_substring_all ("{"+"user_id"+"}", api_client.url_encode (user_id.out))
			l_path.replace_substring_all ("{"+"vault_id"+"}", api_client.url_encode (vault_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_vault_actions_compare_post (authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Vault Compare
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/vault/actions/compare"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	objects_vault_actions_configreport_post (authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Vault Configuration Report
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/objects/vault/actions/configreport"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	query_components_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Component Definition Query
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/query/components"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	query_next_page_post (next_page: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__describe_query: BOOLEAN; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Next Page URL
			-- 
			-- 
			-- argument: next_page  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__describe_query  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/query/{next_page}"
			l_path.replace_substring_all ("{"+"next_page"+"}", api_client.url_encode (next_page.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__describe_query as l_x__vault_ap_i__describe_query then
				l_request.add_header(l_x__vault_ap_i__describe_query.out,"X-VaultAPI-DescribeQuery");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	query_post (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__describe_query: BOOLEAN; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Submitting a Query
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__describe_query  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/query"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__describe_query as l_x__vault_ap_i__describe_query then
				l_request.add_header(l_x__vault_ap_i__describe_query.out,"X-VaultAPI-DescribeQuery");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	query_previous_page_post (previous_page: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__describe_query: BOOLEAN; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Previous Page URL
			-- 
			-- 
			-- argument: previous_page  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__describe_query  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/query/{previous_page}"
			l_path.replace_substring_all ("{"+"previous_page"+"}", api_client.url_encode (previous_page.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__describe_query as l_x__vault_ap_i__describe_query then
				l_request.add_header(l_x__vault_ap_i__describe_query.out,"X-VaultAPI-DescribeQuery");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_me_get (attributes: STRING_32; excluded_attributes: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Current User with SCIM
			-- 
			-- 
			-- argument: attributes Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to null)
			-- 
			-- argument: excluded_attributes Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/Me"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "attributes", attributes));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "excludedAttributes", excluded_attributes));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_me_put (attributes: STRING_32; excluded_attributes: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Current User with SCIM
			-- 
			-- 
			-- argument: attributes Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to null)
			-- 
			-- argument: excluded_attributes Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/Me"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "attributes", attributes));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "excludedAttributes", excluded_attributes));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_resource_types_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All SCIM Resource Types
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/ResourceTypes"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_resource_types_type_get (type: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Single SCIM Resource Type
			-- 
			-- 
			-- argument: type A specific resource type. You can retrieve all available types from the Retrieve All SCIM Resource Types endpoint, where the value for this parameter is the id value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/ResourceTypes/{type}"
			l_path.replace_substring_all ("{"+"type"+"}", api_client.url_encode (type.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_schemas_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All SCIM Schema Information
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/Schemas"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_schemas_id_get (id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Single SCIM Schema Information
			-- 
			-- 
			-- argument: id The ID of a specific schema. For example, urn:ietf:params:scim:schemas:extension:veevavault:2.0:User. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/Schemas/{id}"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_service_provider_config_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve SCIM Provider
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/ServiceProviderConfig"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_type_get (type: STRING_32; filter: STRING_32; attributes: STRING_32; excluded_attributes: STRING_32; sort_by: STRING_32; sort_order: STRING_32; start_index: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve SCIM Resources
			-- 
			-- 
			-- argument: type The resource type to retrieve. You can retrieve all available types from the Retrieve All SCIM Resource Types endpoint, where the value for this parameter is the endpoint value. (required)
			-- 
			-- argument: filter Optional: Filter for a specific attribute value. Must be in the format {attribute} eq \&quot;{value}\&quot;. For example, to filter for a particular user name, userName eq \&quot;john\&quot;. Complex expressions are not supported, and eq is the only supported operator. (optional, default to null)
			-- 
			-- argument: attributes Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to null)
			-- 
			-- argument: excluded_attributes Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to null)
			-- 
			-- argument: sort_by Optional: Specify an attribute or sub-attribute to order the response. For example, you can sort by the displayName attribute, or the name.familyName sub-attribute. If omitted, the response is sorted by id. Note that the following attributes are not supported: securityPolicy securityProfile locale preferredLanguage (optional, default to null)
			-- 
			-- argument: sort_order Optional: Specify the number of query results per page, for example, 10. Negative values are treated as 0, and 0 returns no results except for totalResults. If omitted, defaults to 1000. (optional, default to null)
			-- 
			-- argument: start_index Optional: Specify the index of the first result. For example, 10 would omit the first 9 results and begin on result 10. Omission, negative values, and 0 is treated as 1. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/{type}"
			l_path.replace_substring_all ("{"+"type"+"}", api_client.url_encode (type.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "filter", filter));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "attributes", attributes));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "excludedAttributes", excluded_attributes));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "sortBy", sort_by));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "sortOrder", sort_order));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "startIndex", start_index));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_type_id_get (type: STRING_32; id: STRING_32; attributes: STRING_32; excluded_attributes: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Single SCIM Resource
			-- 
			-- 
			-- argument: type The resource type to retrieve. You can retrieve all available types from the Retrieve All SCIM Resource Types endpoint, where the value for this parameter is the endpoint value. (required)
			-- 
			-- argument: id The ID of the resource to retrieve. You can retrieve all resource IDs from a particular resource type with the Retrieve SCIM Resources endpoint. For example, business_admin__v. (required)
			-- 
			-- argument: attributes Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to null)
			-- 
			-- argument: excluded_attributes Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/{type}/{id}"
			l_path.replace_substring_all ("{"+"type"+"}", api_client.url_encode (type.out))
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "attributes", attributes));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "excludedAttributes", excluded_attributes));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_users_get (filter: STRING_32; attributes: STRING_32; excluded_attributes: STRING_32; sort_by: STRING_32; sort_order: STRING_32; count: STRING_32; start_index: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Users with SCIM
			-- 
			-- 
			-- argument: filter Optional: Filter for a specific attribute value. Must be in the format {attribute} eq \&quot;{value}\&quot;. For example, to filter for a particular user name, userName eq \&quot;john\&quot;. Complex expressions are not supported, and eq is the only supported operator. (optional, default to null)
			-- 
			-- argument: attributes Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to null)
			-- 
			-- argument: excluded_attributes Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to null)
			-- 
			-- argument: sort_by Optional: Specify an attribute or sub-attribute to order the response. For example, you can sort by the displayName attribute, or the name.familyName sub-attribute. If omitted, the response is sorted by id. Note that the following attributes are not supported: securityPolicy securityProfile locale preferredLanguage (optional, default to null)
			-- 
			-- argument: sort_order Optional: Specify the order in which the sortBy parameter is applied. Allowed values are ascending or descending. If omitted, defaults to ascending. (optional, default to null)
			-- 
			-- argument: count Optional: Specify the number of query results per page, for example, 10. Negative values are treated as 0, and 0 returns no results except for totalResults. If omitted, defaults to 1000. (optional, default to null)
			-- 
			-- argument: start_index Optional: Specify the index of the first result. For example, 10 would omit the first 9 results and begin on result 10. Omission, negative values, and 0 is treated as 1. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/Users"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "filter", filter));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "attributes", attributes));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "excludedAttributes", excluded_attributes));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "sortBy", sort_by));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "sortOrder", sort_order));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "count", count));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "startIndex", start_index));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_users_id_get (id: STRING_32; filter: STRING_32; attributes: STRING_32; excluded_attributes: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Single User with SCIM
			-- 
			-- 
			-- argument: id The id of the user you wish to update. (required)
			-- 
			-- argument: filter Optional: Filter for a specific attribute value. Must be in the format {attribute} eq \&quot;{value}\&quot;. For example, to filter for a particular user name, userName eq \&quot;john\&quot;. Complex expressions are not supported, and eq is the only supported operator. (optional, default to null)
			-- 
			-- argument: attributes Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to null)
			-- 
			-- argument: excluded_attributes Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/Users/{id}"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "filter", filter));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "attributes", attributes));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "excludedAttributes", excluded_attributes));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_users_id_put (id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update User with SCIM
			-- 
			-- 
			-- argument: id The id of the user you wish to update. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/Users/{id}"
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	scim_v2_users_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create User with SCIM
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/scim/v2/Users"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_certificate_cert_id_get (cert_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Signing Certificate
			-- 
			-- 
			-- argument: cert_id The cert_id is provided in each Spark message in the X-VaultAPISignature-CertificateId header. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/certificate/{cert_id}"
			l_path.replace_substring_all ("{"+"cert_id"+"}", api_client.url_encode (cert_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_configuration_mode_actions_disable_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Disable Configuration Mode
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/configuration_mode/actions/disable"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_configuration_mode_actions_enable_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Enable Configuration Mode
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/configuration_mode/actions/enable"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_directdata_files_get (extract_type: STRING_32; start_time: INTEGER_32; stop_time: INTEGER_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Available Direct Data Files
			-- 
			-- 
			-- argument: extract_type The Direct Data file type: incremental_directdata, full_directdata, or log_directdata. If omitted, returns all files. (optional, default to null)
			-- 
			-- argument: start_time Specify a time in YYYY-MM-DDTHH:MM:SSZ format. For example, 7AM on January 15, 2024 would use 2024-01-15T07:00:00Z. If omitted, defaults to the Vault’s creation date and time. (optional, default to null)
			-- 
			-- argument: stop_time Specify a time in YYYY-MM-DDTHH:MM:SSZ format. For example, 9AM on January 15, 2024 would use 2024-01-15T09:00:00Z. If omitted, defaults to today’s date and current time. (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/directdata/files"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "extract_type", extract_type));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "start_time", start_time));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "stop_time", stop_time));

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_directdata_files_name_get (name: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Direct Data File
			-- 
			-- 
			-- argument: name The name of the Direct Data file part. Obtain this from the Retrieve Available Direct Data Files request. For example, 146478-20240213-0000-F.001. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/directdata/files/{name}"
			l_path.replace_substring_all ("{"+"name"+"}", api_client.url_encode (name.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_items_content_item_get (item: STRING_32; authorization: STRING_32; accept: STRING_32; range: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Item Content
			-- 
			-- 
			-- argument: item The absolute path to a file or folder. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: range Optional: Specifies a partial range of bytes to include in the upload. Maximum 50 MB. Must be in the format &#x60;bytes&#x3D;{min}-{max}&#x60;. For example, &#x60;bytes&#x3D;0-1000&#x60;. (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/items/content/{item}"
			l_path.replace_substring_all ("{"+"item"+"}", api_client.url_encode (item.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached range as l_range then
				l_request.add_header(l_range.out,"Range");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_items_item_delete (item: STRING_32; recursive: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete File or Folder
			-- 
			-- 
			-- argument: item The absolute path to the file or folder to delete. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory. (required)
			-- 
			-- argument: recursive Applicable to deleting folders only. If true, the request will delete the contents of a folder and all subfolders. The default is false. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/items/{item}"
			l_path.replace_substring_all ("{"+"item"+"}", api_client.url_encode (item.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "recursive", recursive));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_items_item_get (item: STRING_32; recursive: STRING_32; limit: STRING_32; format_result: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- List Items at a Path
			-- 
			-- 
			-- argument: item The absolute path to the file or folder to delete. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory. (required)
			-- 
			-- argument: recursive If true, the response will contain the contents of all subfolders. If not specified, the default value is false. (optional, default to null)
			-- 
			-- argument: limit Optional: The maximum number of items per page in the response. This can be any value between 1 and 1000. If omitted, the default value is 1000. (optional, default to null)
			-- 
			-- argument: format_result If set to csv, the response includes a job_id. Use the Job ID value to retrieve the status and results of the request. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/items/{item}"
			l_path.replace_substring_all ("{"+"item"+"}", api_client.url_encode (item.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "recursive", recursive));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "format_result", format_result));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_items_item_put (item: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Folder or File
			-- 
			-- 
			-- argument: item The absolute path to the file or folder to delete. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/items/{item}"
			l_path.replace_substring_all ("{"+"item"+"}", api_client.url_encode (item.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_items_post (authorization: STRING_32; accept: STRING_32; content__md5: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Folder or File
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__md5 Optional: The MD5 checksum of the file being uploaded. (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/items"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__md5 as l_content__md5 then
				l_request.add_header(l_content__md5.out,"Content-MD5");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_upload_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- List Upload Sessions
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/upload/"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_upload_post (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Resumable Upload Session
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/upload"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_upload_upload_session_id_delete (upload_session_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Abort Upload Session
			-- 
			-- 
			-- argument: upload_session_id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/upload/{upload_session_id}"
			l_path.replace_substring_all ("{"+"upload_session_id"+"}", api_client.url_encode (upload_session_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_upload_upload_session_id_get (upload_session_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Get Upload Session Details
			-- 
			-- 
			-- argument: upload_session_id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/upload/{upload_session_id}"
			l_path.replace_substring_all ("{"+"upload_session_id"+"}", api_client.url_encode (upload_session_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_upload_upload_session_id_parts_get (upload_session_id: STRING_32; limit: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- List File Parts Uploaded to Session
			-- 
			-- 
			-- argument: upload_session_id  (required)
			-- 
			-- argument: limit Optional: The maximum number of items per page in the response. This can be any value between 1 and 1000. If omitted, the default value is 1000. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/upload/{upload_session_id}/parts"
			l_path.replace_substring_all ("{"+"upload_session_id"+"}", api_client.url_encode (upload_session_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_upload_upload_session_id_post (upload_session_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Commit Upload Session
			-- 
			-- 
			-- argument: upload_session_id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/upload/{upload_session_id}"
			l_path.replace_substring_all ("{"+"upload_session_id"+"}", api_client.url_encode (upload_session_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_file_staging_upload_upload_session_id_put (upload_session_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__file_part_number: STRING_32; content__md5: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Upload to a Session
			-- 
			-- 
			-- argument: upload_session_id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__file_part_number The part number, which uniquely identifies a file part and defines its position within the file as a whole. If a part is uploaded using a part number that has already been used, Vault overwrites the previously uploaded file part. You must upload parts in numerical order. For example, you cannot upload part 3 without first uploading parts 1 and 2. (optional, default to null)
			-- 
			-- argument: content__md5 Optional: The MD5 checksum of the file part being uploaded. (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/file_staging/upload/{upload_session_id}"
			l_path.replace_substring_all ("{"+"upload_session_id"+"}", api_client.url_encode (upload_session_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__file_part_number as l_x__vault_ap_i__file_part_number then
				l_request.add_header(l_x__vault_ap_i__file_part_number.out,"X-VaultAPI-FilePartNumber");
			end
			if attached content__md5 as l_content__md5 then
				l_request.add_header(l_content__md5.out,"Content-MD5");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_jobs_histories_get (start_date: STRING_32; end_date: STRING_32; status: STRING_32; limit: STRING_32; offset: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Job Histories
			-- 
			-- 
			-- argument: start_date Sets the date to start retrieving completed jobs, in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the first completed job. (optional, default to null)
			-- 
			-- argument: end_date Sets the date to end retrieving completed jobs, in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the current date and time. (optional, default to null)
			-- 
			-- argument: status Filter to only retrieve jobs in a certain status. Allowed values are success, errors_encountered, failed_to_run, missed_schedule, cancelled. If omitted, retrieves all statuses. (optional, default to null)
			-- 
			-- argument: limit Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 200. If omitted, defaults to 50. (optional, default to null)
			-- 
			-- argument: offset Paginate the results displayed per page by specifying the amount of offset from the first job history returned. If omitted, defaults to 0. If you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/jobs/histories"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "start_date", start_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "end_date", end_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "status", status));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "offset", offset));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_jobs_job_id_errors_get (job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Import Bulk Translation File Job Errors
			-- 
			-- 
			-- argument: job_id The id value of the requested import job. This was returned from the Import Bulk Translation File request. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/jobs/{job_id}/errors"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_jobs_job_id_get (job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Job Status
			-- 
			-- 
			-- argument: job_id The ID of the job, returned from the original job request. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/jobs/{job_id}"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_jobs_job_id_summary_get (job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Import Bulk Translation File Job Summary
			-- 
			-- 
			-- argument: job_id The id value of the requested import job. This was returned from the Import Bulk Translation File request. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/jobs/{job_id}/summary"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_jobs_job_id_tasks_get (job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve SDK Job Tasks
			-- 
			-- 
			-- argument: job_id The ID of the SDK job, returned from the original job request. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/jobs/{job_id}/tasks"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_jobs_monitors_get (start_date: STRING_32; end_date: STRING_32; status: STRING_32; limit: STRING_32; offset: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Job Monitors
			-- 
			-- 
			-- argument: start_date Sets the date to start retrieving uncompleted jobs, based on the date and time the job instance was created. Value must be in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the first completed job. (optional, default to null)
			-- 
			-- argument: end_date Sets the date to end retrieving uncompleted jobs, based on the date and time the job instance was created. Value must be in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the current date and time. (optional, default to null)
			-- 
			-- argument: status Filter to only retrieve jobs in a certain status. Allowed values are scheduled, queued, running. If omitted, retrieves all statuses. (optional, default to null)
			-- 
			-- argument: limit Paginate the results by specifying the maximum number of jobs per page in the response. This can be any value between 1 and 200. If omitted, defaults to 50. (optional, default to null)
			-- 
			-- argument: offset Paginate the results displayed per page by specifying the amount of offset from the first job instance returned. If omitted, defaults to 0. If you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/jobs/monitors"
			l_request.fill_query_params(api_client.parameter_to_tuple("", "start_date", start_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "end_date", end_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "status", status));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "offset", offset));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_jobs_start_now_job_id_post (job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Start Job
			-- 
			-- 
			-- argument: job_id The ID of the scheduled job instance to start. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/jobs/start_now/{job_id}"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_loader_extract_post (authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Extract Data Files
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/loader/extract"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_loader_job_id_tasks_task_id_failurelog_get (job_id: STRING_32; task_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Load Failure Log Results
			-- 
			-- 
			-- argument: job_id The id value of the requested extract job. (required)
			-- 
			-- argument: task_id The id value of the requested extract task. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/loader/{job_id}/tasks/{task_id}/failurelog"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_loader_job_id_tasks_task_id_results_get (job_id: STRING_32; task_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Loader Extract Results
			-- 
			-- 
			-- argument: job_id The id value of the requested extract job. (required)
			-- 
			-- argument: task_id The id value of the requested extract task. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/loader/{job_id}/tasks/{task_id}/results"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_loader_job_id_tasks_task_id_results_renditions_get (job_id: STRING_32; task_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Loader Extract Renditions Results
			-- 
			-- 
			-- argument: job_id The id value of the requested extract job. (required)
			-- 
			-- argument: task_id The id value of the requested extract task. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/loader/{job_id}/tasks/{task_id}/results/renditions"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_loader_job_id_tasks_task_id_successlog_get (job_id: STRING_32; task_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Load Success Log Results
			-- 
			-- 
			-- argument: job_id The id value of the requested extract job. (required)
			-- 
			-- argument: task_id The id value of the requested extract task. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/loader/{job_id}/tasks/{task_id}/successlog"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))
			l_path.replace_substring_all ("{"+"task_id"+"}", api_client.url_encode (task_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_loader_load_post (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Load Data Objects
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/loader/load"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_package_actions_validate_post (authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Validate Package
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/package/actions/validate"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_package_post (authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Export Package
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/package"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_package_put (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Import Package
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/package"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_queues_get (authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Queues
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/queues"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_queues_queue_name_actions_disable_delivery_put (queue_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Disable Delivery
			-- 
			-- 
			-- argument: queue_name The name of a specific Queue. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/queues/{queue_name}/actions/disable_delivery"
			l_path.replace_substring_all ("{"+"queue_name"+"}", api_client.url_encode (queue_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_queues_queue_name_actions_enable_delivery_put (queue_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Enable Delivery
			-- 
			-- 
			-- argument: queue_name The name of a specific Queue. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/queues/{queue_name}/actions/enable_delivery"
			l_path.replace_substring_all ("{"+"queue_name"+"}", api_client.url_encode (queue_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_queues_queue_name_actions_reset_put (queue_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Reset Queue
			-- 
			-- 
			-- argument: queue_name The name of a specific Queue. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/queues/{queue_name}/actions/reset"
			l_path.replace_substring_all ("{"+"queue_name"+"}", api_client.url_encode (queue_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_queues_queue_name_get (queue_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Queue Status
			-- 
			-- 
			-- argument: queue_name The name of a specific queue. For example, queue__c. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/queues/{queue_name}"
			l_path.replace_substring_all ("{"+"queue_name"+"}", api_client.url_encode (queue_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	services_vobject_vault_package_vpackage_id_actions_validate_post (package_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Validate Imported Package
			-- 
			-- 
			-- argument: package_id The ID of the package to validate. You can find this in the API response of a package import, or in the URL of package in the Vault UI. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/services/vobject/vault_package__v/{package_id}/actions/validate"
			l_path.replace_substring_all ("{"+"package_id"+"}", api_client.url_encode (package_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	session_delete (accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- End Session
			-- 
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization The Vault sessionId to end. (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/session"

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	uicode_distributions_distribution_name_code_get (distribution_name: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Single Client Code Distribution
			-- 
			-- 
			-- argument: distribution_name The name attribute of the client code distribution to download. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/uicode/distributions/{distribution_name}/code"
			l_path.replace_substring_all ("{"+"distribution_name"+"}", api_client.url_encode (distribution_name.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	uicode_distributions_distribution_name_delete (distribution_name: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Single Client Code Distribution
			-- 
			-- 
			-- argument: distribution_name The name attribute of the client code distribution to delete. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/uicode/distributions/{distribution_name}"
			l_path.replace_substring_all ("{"+"distribution_name"+"}", api_client.url_encode (distribution_name.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	uicode_distributions_distribution_name_get (distribution_name: STRING_32; accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Single Client Code Distribution Metadata
			-- 
			-- 
			-- argument: distribution_name The name attribute of the client code distribution to delete. (required)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/uicode/distributions/{distribution_name}"
			l_path.replace_substring_all ("{"+"distribution_name"+"}", api_client.url_encode (distribution_name.out))

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	uicode_distributions_get (accept: STRING_32; authorization: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve All Client Code Distribution Metadata
			-- 
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/uicode/distributions"

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	uicode_distributions_post (accept: STRING_32; authorization: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Add or Replace Single Client Code Distribution
			-- 
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/uicode/distributions"

			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobject_vault_package_vpackage_id_actions_deploy_post (package_id: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Deploy Package
			-- 
			-- 
			-- argument: package_id The id field value of the vault_package__v object record used for deployment. See Import Package. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobject/vault_package__v/{package_id}/actions/deploy"
			l_path.replace_substring_all ("{"+"package_id"+"}", api_client.url_encode (package_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobject_vault_package_vpackage_id_actions_deploy_results_get (package_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Package Deploy Results
			-- 
			-- 
			-- argument: package_id The id field value of the vault_package__v object record used for deployment. See Deploy Package. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobject/vault_package__v/{package_id}/actions/deploy/results"
			l_path.replace_substring_all ("{"+"package_id"+"}", api_client.url_encode (package_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_cascadedelete_results_object_name_job_status_job_id_get (object_name: STRING_32; job_status: STRING_32; job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Results of Cascade Delete Job
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: job_status  (required)
			-- 
			-- argument: job_id  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/cascadedelete/results/{object_name}/{job_status}/{job_id}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"job_status"+"}", api_client.url_encode (job_status.out))
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_deepcopy_results_object_name_job_status_job_id_get (object_name: STRING_32; job_status: STRING_32; job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Results of Deep Copy Job
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: job_status The ID of the job, retrieved from the response of the job request. (required)
			-- 
			-- argument: job_id Possible values are success or failure. Find if your job succeeded or failed by retrieving the job status. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/deepcopy/results/{object_name}/{job_status}/{job_id}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"job_status"+"}", api_client.url_encode (job_status.out))
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_edl_item_vactions_createplaceholder_post (authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create a Placeholder from an EDL Item
			-- 
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/edl_item__v/actions/createplaceholder"

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_merges_job_id_log_get (job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Merge Records Job Log
			-- 
			-- 
			-- argument: job_id The job_id field value returned from the merge operation. You can start merge operations with the Initiate Record Merge API request or with the Vault Java SDK. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/merges/{job_id}/log"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_merges_job_id_results_get (job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Record Merge Results
			-- 
			-- 
			-- argument: job_id The job_id field value returned from the merge operation. You can start merge operations with the Initiate Record Merge API request or with the Vault Java SDK. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/merges/{job_id}/results"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_merges_job_id_status_get (job_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Record Merge Status
			-- 
			-- 
			-- argument: job_id The job_id field value returned from the merge operation. You can start merge operations with the Initiate Record Merge API request or with the Vault Java SDK. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/merges/{job_id}/status"
			l_path.replace_substring_all ("{"+"job_id"+"}", api_client.url_encode (job_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_actions_action_name_post (object_name: STRING_32; action_name: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Initiate Object Action on Multiple Records
			-- 
			-- 
			-- argument: object_name The object name__v field value. (required)
			-- 
			-- argument: action_name Either the name of the Objectaction or Objectlifecyclestateuseraction to initiate. This is obtained from the Retrieve User Actions request. The format for action_name is Objectaction.vobject.action or Objectlifecyclestateuseraction.vobject.state.action. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/actions/{action_name}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"action_name"+"}", api_client.url_encode (action_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_actions_changetype_post (object_name: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Change Object Type
			-- 
			-- 
			-- argument: object_name The name of the object. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/actions/changetype"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_actions_merge_post (object_name: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32; var_vobjects__object_name__actions_merge_post_request_inner: detachable LIST [MODEL_VOBJECTS__OBJECT_NAME__ACTIONS_MERGE_POST_REQUEST_INNER])
			-- Initiate Record Merge
			-- 
			-- 
			-- argument: object_name The object name__v field value. For example, account__v. This object must have Enable Merges configured. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- argument: var_vobjects__object_name__actions_merge_post_request_inner  (optional)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			l_request.set_body(var_vobjects__object_name__actions_merge_post_request_inner)
			l_path := "/vobjects/{object_name}/actions/merge"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<"application/json">>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_actions_recalculaterollups_get (object_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Roll-up Field Recalculation Status
			-- 
			-- 
			-- argument: object_name The name of the object for which to check the status of a Roll-up field recalculation. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/actions/recalculaterollups"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_actions_recalculaterollups_post (object_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Recalculate Roll-up Fields
			-- 
			-- 
			-- argument: object_name The name of the object for which to check the status of a Roll-up field recalculation. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/actions/recalculaterollups"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_actions_updatecorporatecurrency_put (object_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Corporate Currency Fields
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/actions/updatecorporatecurrency"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_attachments_batch_delete (object_name: STRING_32; id_param: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Multiple Object Record Attachments
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: id_param  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/attachments/batch"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "idParam", id_param));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_attachments_batch_post (object_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Multiple Object Record Attachments
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/attachments/batch"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_attachments_batch_put (object_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Multiple Object Record Attachment Descriptions
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/attachments/batch"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_delete (object_name: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Object Records
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type Can be text/csv or application/json (optional, default to null)
			-- 
			-- argument: accept Can be text/csv or application/json (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_id_roles_role_name_get (object_name: STRING_32; id: STRING_32; role_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Object Record Roles
			-- 
			-- 
			-- argument: object_name The object name. (required)
			-- 
			-- argument: id The id of the document, binder, or object record. (required)
			-- 
			-- argument: role_name Optional: Include a role name to filter for a specific role. For example, owner__v. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{id}/roles/{role_name}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"id"+"}", api_client.url_encode (id.out))
			l_path.replace_substring_all ("{"+"role_name"+"}", api_client.url_encode (role_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_actions_action_name_get (object_name: STRING_32; object_record_id: STRING_32; action_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Object User Actions Details
			-- 
			-- 
			-- argument: object_name The object name__v field value. (required)
			-- 
			-- argument: object_record_id The object record id field value from which to retrieve user actions. (required)
			-- 
			-- argument: action_name The name of the Objectaction or Objectlifecyclestateuseraction to initiate. You can retrieve this from the Retrieve User Actions request. The format for action_name is Objectaction.vobject.action or Objectlifecyclestateuseraction.vobject.state.action. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/actions/{action_name}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"action_name"+"}", api_client.url_encode (action_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_actions_action_name_post (object_name: STRING_32; object_record_id: STRING_32; action_name: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Initiate Object Action on a Single Record
			-- 
			-- 
			-- argument: object_name The object name__v field value. (required)
			-- 
			-- argument: object_record_id The object record id field value from which to retrieve user actions. (required)
			-- 
			-- argument: action_name The name of the Objectaction or Objectlifecyclestateuseraction to initiate. You can retrieve this from the Retrieve User Actions request. The format for action_name is Objectaction.vobject.action or Objectlifecyclestateuseraction.vobject.state.action. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/actions/{action_name}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"action_name"+"}", api_client.url_encode (action_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_actions_cascadedelete_post (object_name: STRING_32; object_record_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Cascade Delete Object Record
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/actions/cascadedelete"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_actions_deepcopy_post (object_name: STRING_32; object_record_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Deep Copy Object Record
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/actions/deepcopy"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_actions_get (object_name: STRING_32; object_record_id: STRING_32; loc: BOOLEAN; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Object Record User Actions
			-- 
			-- 
			-- argument: object_name The object name__v field value. (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: loc Optional: When true, retrieves localized (translated) strings for the label.  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/actions"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "loc", loc));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get (object_name: STRING_32; object_record_id: STRING_32; attachment_field_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Attachment Field File
			-- 
			-- 
			-- argument: object_name The object name__v field value. For example, product__v. (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: attachment_field_name The name of the Attachment field to update. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachment_fields/{attachment_field_name}/file"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"attachment_field_name"+"}", api_client.url_encode (attachment_field_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post (object_name: STRING_32; object_record_id: STRING_32; attachment_field_name: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Attachment Field File
			-- 
			-- 
			-- argument: object_name The object name__v field value. For example, product__v. (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: attachment_field_name The name of the Attachment field to update. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachment_fields/{attachment_field_name}/file"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"attachment_field_name"+"}", api_client.url_encode (attachment_field_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachment_fields_file_get (object_name: STRING_32; object_record_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download All Attachment Field Files
			-- 
			-- 
			-- argument: object_name The object name__v field value. For example, product__v. (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachment_fields/file"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachments_attachment_id_delete (object_name: STRING_32; object_record_id: STRING_32; attachment_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Object Record Attachment
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachments_attachment_id_get (object_name: STRING_32; object_record_id: STRING_32; attachment_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Object Record Attachment Metadata
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachments_attachment_id_put (object_name: STRING_32; object_record_id: STRING_32; attachment_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Update Object Record Attachment Description
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete (object_name: STRING_32; object_record_id: STRING_32; attachment_id: STRING_32; attachment_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Delete Object Record Attachment Version
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: attachment_version The attachment version__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))
			l_path.replace_substring_all ("{"+"attachment_version"+"}", api_client.url_encode (attachment_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get (object_name: STRING_32; object_record_id: STRING_32; attachment_id: STRING_32; attachment_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download Object Record Attachment File
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: attachment_version  (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}/file"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))
			l_path.replace_substring_all ("{"+"attachment_version"+"}", api_client.url_encode (attachment_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get (object_name: STRING_32; object_record_id: STRING_32; attachment_id: STRING_32; attachment_version: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Object Record Attachment Version Metadata
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: attachment_version The attachment version__v field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))
			l_path.replace_substring_all ("{"+"attachment_version"+"}", api_client.url_encode (attachment_version.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post (object_name: STRING_32; object_record_id: STRING_32; attachment_id: STRING_32; attachment_version: STRING_32; restore: BOOLEAN; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Restore Object Record Attachment Version
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: attachment_version The attachment version__v field value. (required)
			-- 
			-- argument: restore  (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))
			l_path.replace_substring_all ("{"+"attachment_version"+"}", api_client.url_encode (attachment_version.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "restore", restore));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachments_attachment_id_versions_get (object_name: STRING_32; object_record_id: STRING_32; attachment_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Object Record Attachment Versions
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: attachment_id The attachment id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_path.replace_substring_all ("{"+"attachment_id"+"}", api_client.url_encode (attachment_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachments_file_get (object_name: STRING_32; object_record_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Download All Object Record Attachment Files
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachments/file"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachments_get (object_name: STRING_32; object_record_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Object Record Attachments
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachments"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_attachments_post (object_name: STRING_32; object_record_id: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Create Object Record Attachment
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/attachments"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_audittrail_get (object_name: STRING_32; object_record_id: STRING_32; start_date: STRING_32; end_date: STRING_32; format_result: STRING_32; limit: STRING_32; offset: STRING_32; events: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Complete Audit History for a Single Object Record
			-- 
			-- 
			-- argument: object_name The object name__v field value. (required)
			-- 
			-- argument: object_record_id The object record id field value from which to retrieve user actions. (required)
			-- 
			-- argument: start_date Specify a start date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to the vVault’s creation date.  (optional, default to null)
			-- 
			-- argument: end_date Specify an end date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to today’s date.  (optional, default to null)
			-- 
			-- argument: format_result To request a CSV file of your audit history, use csv.  (optional, default to null)
			-- 
			-- argument: limit Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200. (optional, default to null)
			-- 
			-- argument: offset Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. If omitted, defaults to 0. (optional, default to null)
			-- 
			-- argument: events Provide a comma-separated list of one or more audit events to retrieve their audit history. See Vault Help for a full list of object audit events. The values passed to this parameter are case sensitive. For example, events&#x3D;Copy,Edit,Delete. If omitted, defaults to all audit events. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}/audittrail"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "start_date", start_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "end_date", end_date));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "format_result", format_result));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "limit", limit));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "offset", offset));
			l_request.fill_query_params(api_client.parameter_to_tuple("", "events", events));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_object_record_id_get (object_name: STRING_32; object_record_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Object Record
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: object_record_id The object record id field value. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/{object_record_id}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_path.replace_substring_all ("{"+"object_record_id"+"}", api_client.url_encode (object_record_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_post (object_name: STRING_32; id_param: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__migration_mode: BOOLEAN; x__vault_ap_i__no_triggers: BOOLEAN; x__vault_ap_i__client_id: STRING_32)
			-- Create &amp; Upsert Object Records
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: id_param To upsert object records, add &#x60;idParam&#x3D;{field_name}&#x60; to the request endpoint. You can use any object field which has &#x60;unique&#x60; set to &#x60;true&#x60; in the object metadata. For example, &#x60;idParam&#x3D;external_id__v&#x60;. (optional, default to null)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type Can be text/csv or application/json (optional, default to null)
			-- 
			-- argument: accept Can be text/csv or application/json (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__migration_mode If set to &#x60;true&#x60;, Vault allows you to create or update object records in a noninitial state and with minimal validation, create inactive records, and set standard and system-managed fields such as &#x60;created_by__v&#x60;. Does not bypass record triggers. Use the &#x60;X-VaultAPI-NoTriggers&#x60; header to bypass all standard and custom SDK triggers. You must have the Record Migration permission to use this header. (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__no_triggers If set to &#x60;true&#x60; and Record Migration Mode is enabled, it bypasses all standard and custom SDK triggers. (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))
			l_request.fill_query_params(api_client.parameter_to_tuple("", "idParam", id_param));

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__migration_mode as l_x__vault_ap_i__migration_mode then
				l_request.add_header(l_x__vault_ap_i__migration_mode.out,"X-VaultAPI-MigrationMode");
			end
			if attached x__vault_ap_i__no_triggers as l_x__vault_ap_i__no_triggers then
				l_request.add_header(l_x__vault_ap_i__no_triggers.out,"X-VaultAPI-NoTriggers");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_put (object_name: STRING_32; authorization: STRING_32; content__type: STRING_32; accept: STRING_32; x__vault_ap_i__migration_mode: BOOLEAN; x__vault_ap_i__no_triggers: BOOLEAN; x__vault_ap_i__client_id: STRING_32)
			-- Update Object Records
			-- 
			-- 
			-- argument: object_name The object name__v field value (product__v, country__v, custom_object__c, etc.). (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: content__type Can be text/csv or application/json (optional, default to null)
			-- 
			-- argument: accept Can be text/csv or application/json (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__migration_mode If set to &#x60;true&#x60;, Vault allows you to update object records in a noninitial state and with minimal validation, create inactive records, and set standard and system-managed fields such as &#x60;created_by__v&#x60;. Does not bypass record triggers. Use the &#x60;X-VaultAPI-NoTriggers&#x60; header to bypass all standard and custom SDK triggers. You must have the Record Migration permission to use this header. (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__no_triggers If set to &#x60;true&#x60; and Record Migration Mode is enabled, it bypasses all standard and custom SDK triggers. (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__migration_mode as l_x__vault_ap_i__migration_mode then
				l_request.add_header(l_x__vault_ap_i__migration_mode.out,"X-VaultAPI-MigrationMode");
			end
			if attached x__vault_ap_i__no_triggers as l_x__vault_ap_i__no_triggers then
				l_request.add_header(l_x__vault_ap_i__no_triggers.out,"X-VaultAPI-NoTriggers");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Put", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_roles_delete (object_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Remove Users &amp; Groups from Roles on Object Records
			-- 
			-- 
			-- argument: object_name The name of the object where you want to remove roles. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/roles"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Delete", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_object_name_roles_post (object_name: STRING_32; authorization: STRING_32; accept: STRING_32; content__type: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Assign Users &amp; Groups to Roles on Object Records
			-- 
			-- 
			-- argument: object_name The name of the object where you want to remove roles. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: content__type  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/{object_name}/roles"
			l_path.replace_substring_all ("{"+"object_name"+"}", api_client.url_encode (object_name.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached content__type as l_content__type then
				l_request.add_header(l_content__type.out,"Content-Type");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Post", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end

	vobjects_outbound_package_vpackage_id_dependencies_get (package_id: STRING_32; authorization: STRING_32; accept: STRING_32; x__vault_ap_i__client_id: STRING_32)
			-- Retrieve Outbound Package Dependencies
			-- 
			-- 
			-- argument: package_id The ID of the outbound_package__v record from which to retrieve dependencies. (required)
			-- 
			-- argument: authorization  (optional, default to null)
			-- 
			-- argument: accept  (optional, default to null)
			-- 
			-- argument: x__vault_ap_i__client_id Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to null)
			-- 
			-- 
		require
		local
  			l_path: STRING
  			l_request: API_CLIENT_REQUEST
  			l_response: API_CLIENT_RESPONSE
		do
			reset_error
			create l_request
			
			l_path := "/vobjects/outbound_package__v/{package_id}/dependencies"
			l_path.replace_substring_all ("{"+"package_id"+"}", api_client.url_encode (package_id.out))

			if attached authorization as l_authorization then
				l_request.add_header(l_authorization.out,"Authorization");
			end
			if attached accept as l_accept then
				l_request.add_header(l_accept.out,"Accept");
			end
			if attached x__vault_ap_i__client_id as l_x__vault_ap_i__client_id then
				l_request.add_header(l_x__vault_ap_i__client_id.out,"X-VaultAPI-ClientID");
			end

			if attached {STRING} api_client.select_header_accept ({ARRAY [STRING]}<<>>)  as l_accept then
				l_request.add_header(l_accept,"Accept");
			end
			l_request.add_header(api_client.select_header_content_type ({ARRAY [STRING]}<<>>),"Content-Type")
			l_request.set_auth_names ({ARRAY [STRING]}<<>>)
			l_response := api_client.call_api (l_path, "Get", l_request, agent serializer, Void)
			if l_response.has_error then
				last_error := l_response.error
			end
		end


end
