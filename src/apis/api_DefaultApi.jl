# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct DefaultApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `DefaultApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ DefaultApi }) = "http://}/api/v25.1"

const _returntypes_api_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_api_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_api_get_DefaultApi, "/api/", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve API Versions

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function api_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function api_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_api_mdl_components_component_type_and_record_name_files_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_api_mdl_components_component_type_and_record_name_files_get(_api::DefaultApi, component_type_and_record_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_api_mdl_components_component_type_and_record_name_files_get_DefaultApi, "/api/mdl/components/{component_type_and_record_name}/files", [])
    OpenAPI.Clients.set_param(_ctx.path, "component_type_and_record_name", component_type_and_record_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Content File

Params:
- component_type_and_record_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function api_mdl_components_component_type_and_record_name_files_get(_api::DefaultApi, component_type_and_record_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_components_component_type_and_record_name_files_get(_api, component_type_and_record_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function api_mdl_components_component_type_and_record_name_files_get(_api::DefaultApi, response_stream::Channel, component_type_and_record_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_components_component_type_and_record_name_files_get(_api, component_type_and_record_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_api_mdl_components_component_type_and_record_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_api_mdl_components_component_type_and_record_name_get(_api::DefaultApi, component_type_and_record_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_api_mdl_components_component_type_and_record_name_get_DefaultApi, "/api/mdl/components/{component_type_and_record_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "component_type_and_record_name", component_type_and_record_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Component Record (MDL)

Params:
- component_type_and_record_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function api_mdl_components_component_type_and_record_name_get(_api::DefaultApi, component_type_and_record_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_components_component_type_and_record_name_get(_api, component_type_and_record_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function api_mdl_components_component_type_and_record_name_get(_api::DefaultApi, response_stream::Channel, component_type_and_record_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_components_component_type_and_record_name_get(_api, component_type_and_record_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_api_mdl_execute_async_job_id_results_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_api_mdl_execute_async_job_id_results_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_api_mdl_execute_async_job_id_results_get_DefaultApi, "/api/mdl/execute_async/{job_id}/results", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Asynchronous MDL Script Results

Params:
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function api_mdl_execute_async_job_id_results_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_execute_async_job_id_results_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function api_mdl_execute_async_job_id_results_get(_api::DefaultApi, response_stream::Channel, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_execute_async_job_id_results_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_api_mdl_execute_async_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_api_mdl_execute_async_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_api_mdl_execute_async_post_DefaultApi, "/api/mdl/execute_async", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Execute MDL Script Asynchronously

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function api_mdl_execute_async_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_execute_async_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function api_mdl_execute_async_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_execute_async_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_api_mdl_execute_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_api_mdl_execute_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_api_mdl_execute_post_DefaultApi, "/api/mdl/execute", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Execute MDL Script

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function api_mdl_execute_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_execute_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function api_mdl_execute_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_execute_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_api_mdl_files_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_api_mdl_files_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_api_mdl_files_post_DefaultApi, "/api/mdl/files", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Upload Content File

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function api_mdl_files_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_files_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function api_mdl_files_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_api_mdl_files_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_audittrail_audit_trail_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_audittrail_audit_trail_type_get(_api::DefaultApi, audit_trail_type::String; start_date=nothing, end_date=nothing, all_dates=nothing, format_result=nothing, limit=nothing, offset=nothing, objects=nothing, events=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_audittrail_audit_trail_type_get_DefaultApi, "/audittrail/{audit_trail_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "audit_trail_type", audit_trail_type)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "start_date", start_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "end_date", end_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "all_dates", all_dates; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "format_result", format_result; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "offset", offset; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "objects", objects; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "events", events; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Audit Details

Params:
- audit_trail_type::String (required)
- start_date::String
- end_date::String
- all_dates::String
- format_result::String
- limit::String
- offset::String
- objects::String
- events::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function audittrail_audit_trail_type_get(_api::DefaultApi, audit_trail_type::String; start_date=nothing, end_date=nothing, all_dates=nothing, format_result=nothing, limit=nothing, offset=nothing, objects=nothing, events=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_audittrail_audit_trail_type_get(_api, audit_trail_type; start_date=start_date, end_date=end_date, all_dates=all_dates, format_result=format_result, limit=limit, offset=offset, objects=objects, events=events, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function audittrail_audit_trail_type_get(_api::DefaultApi, response_stream::Channel, audit_trail_type::String; start_date=nothing, end_date=nothing, all_dates=nothing, format_result=nothing, limit=nothing, offset=nothing, objects=nothing, events=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_audittrail_audit_trail_type_get(_api, audit_trail_type; start_date=start_date, end_date=end_date, all_dates=all_dates, format_result=format_result, limit=limit, offset=offset, objects=objects, events=events, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_auth_discovery_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_auth_discovery_post(_api::DefaultApi; accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_auth_discovery_post_DefaultApi, "/auth/discovery", [])
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Authentication Type Discovery

Params:
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function auth_discovery_post(_api::DefaultApi; accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_auth_discovery_post(_api; accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function auth_discovery_post(_api::DefaultApi, response_stream::Channel; accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_auth_discovery_post(_api; accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_auth_oauth_session_oath_oidc_profile_id_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_auth_oauth_session_oath_oidc_profile_id_post(_api::DefaultApi, oath_oidc_profile_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_auth_oauth_session_oath_oidc_profile_id_post_DefaultApi, "/auth/oauth/session/{oath_oidc_profile_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "oath_oidc_profile_id", oath_oidc_profile_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""OAuth 2.0 / OpenID Connect

Params:
- oath_oidc_profile_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function auth_oauth_session_oath_oidc_profile_id_post(_api::DefaultApi, oath_oidc_profile_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_auth_oauth_session_oath_oidc_profile_id_post(_api, oath_oidc_profile_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function auth_oauth_session_oath_oidc_profile_id_post(_api::DefaultApi, response_stream::Channel, oath_oidc_profile_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_auth_oauth_session_oath_oidc_profile_id_post(_api, oath_oidc_profile_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_auth_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_auth_post(_api::DefaultApi; content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_auth_post_DefaultApi, "/auth", [])
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""User Name and Password

Params:
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function auth_post(_api::DefaultApi; content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_auth_post(_api; content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function auth_post(_api::DefaultApi, response_stream::Channel; content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_auth_post(_api; content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_code_class_name_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_code_class_name_delete(_api::DefaultApi, class_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_code_class_name_delete_DefaultApi, "/code/{class_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "class_name", class_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Single Source Code File

Params:
- class_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function code_class_name_delete(_api::DefaultApi, class_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_class_name_delete(_api, class_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function code_class_name_delete(_api::DefaultApi, response_stream::Channel, class_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_class_name_delete(_api, class_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_code_class_name_disable_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_code_class_name_disable_put(_api::DefaultApi, class_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_code_class_name_disable_put_DefaultApi, "/code/{class_name}/disable", [])
    OpenAPI.Clients.set_param(_ctx.path, "class_name", class_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Disable Vault Extension

Params:
- class_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function code_class_name_disable_put(_api::DefaultApi, class_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_class_name_disable_put(_api, class_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function code_class_name_disable_put(_api::DefaultApi, response_stream::Channel, class_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_class_name_disable_put(_api, class_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_code_class_name_enable_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_code_class_name_enable_put(_api::DefaultApi, class_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_code_class_name_enable_put_DefaultApi, "/code/{class_name}/enable", [])
    OpenAPI.Clients.set_param(_ctx.path, "class_name", class_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Enable Vault Extension

Params:
- class_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function code_class_name_enable_put(_api::DefaultApi, class_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_class_name_enable_put(_api, class_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function code_class_name_enable_put(_api::DefaultApi, response_stream::Channel, class_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_class_name_enable_put(_api, class_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_code_class_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_code_class_name_get(_api::DefaultApi, class_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_code_class_name_get_DefaultApi, "/code/{class_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "class_name", class_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Single Source Code File

Params:
- class_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function code_class_name_get(_api::DefaultApi, class_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_class_name_get(_api, class_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function code_class_name_get(_api::DefaultApi, response_stream::Channel, class_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_class_name_get(_api, class_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_code_profiler_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_code_profiler_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_code_profiler_get_DefaultApi, "/code/profiler", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Profiling Sessions

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function code_profiler_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function code_profiler_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_code_profiler_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_code_profiler_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_code_profiler_post_DefaultApi, "/code/profiler", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Profiling Session

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function code_profiler_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function code_profiler_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_code_profiler_session_name_actions_end_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_code_profiler_session_name_actions_end_post(_api::DefaultApi, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_code_profiler_session_name_actions_end_post_DefaultApi, "/code/profiler/{session_name}/actions/end", [])
    OpenAPI.Clients.set_param(_ctx.path, "session_name", session_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""End Profiling Session

Params:
- session_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function code_profiler_session_name_actions_end_post(_api::DefaultApi, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_session_name_actions_end_post(_api, session_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function code_profiler_session_name_actions_end_post(_api::DefaultApi, response_stream::Channel, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_session_name_actions_end_post(_api, session_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_code_profiler_session_name_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_code_profiler_session_name_delete(_api::DefaultApi, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_code_profiler_session_name_delete_DefaultApi, "/code/profiler/{session_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "session_name", session_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Profiling Session

Params:
- session_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function code_profiler_session_name_delete(_api::DefaultApi, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_session_name_delete(_api, session_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function code_profiler_session_name_delete(_api::DefaultApi, response_stream::Channel, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_session_name_delete(_api, session_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_code_profiler_session_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_code_profiler_session_name_get(_api::DefaultApi, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_code_profiler_session_name_get_DefaultApi, "/code/profiler/{session_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "session_name", session_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Profiling Session

Params:
- session_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function code_profiler_session_name_get(_api::DefaultApi, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_session_name_get(_api, session_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function code_profiler_session_name_get(_api::DefaultApi, response_stream::Channel, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_session_name_get(_api, session_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_code_profiler_session_name_results_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_code_profiler_session_name_results_get(_api::DefaultApi, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_code_profiler_session_name_results_get_DefaultApi, "/code/profiler/{session_name}/results", [])
    OpenAPI.Clients.set_param(_ctx.path, "session_name", session_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Profiling Session Results

Params:
- session_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function code_profiler_session_name_results_get(_api::DefaultApi, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_session_name_results_get(_api, session_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function code_profiler_session_name_results_get(_api::DefaultApi, response_stream::Channel, session_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_profiler_session_name_results_get(_api, session_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_code_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_code_put(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_code_put_DefaultApi, "/code", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Add or Replace Single Source Code File

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function code_put(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_put(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function code_put(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_code_put(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_composites_trees_edl_hierarchy_or_template_actions_listnodes_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_composites_trees_edl_hierarchy_or_template_actions_listnodes_post(_api::DefaultApi, edl_hierarchy_or_template::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_composites_trees_edl_hierarchy_or_template_actions_listnodes_post_DefaultApi, "/composites/trees/{edl_hierarchy_or_template}/actions/listnodes", [])
    OpenAPI.Clients.set_param(_ctx.path, "edl_hierarchy_or_template", edl_hierarchy_or_template)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Specific Root Nodes

Params:
- edl_hierarchy_or_template::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function composites_trees_edl_hierarchy_or_template_actions_listnodes_post(_api::DefaultApi, edl_hierarchy_or_template::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_composites_trees_edl_hierarchy_or_template_actions_listnodes_post(_api, edl_hierarchy_or_template; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function composites_trees_edl_hierarchy_or_template_actions_listnodes_post(_api::DefaultApi, response_stream::Channel, edl_hierarchy_or_template::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_composites_trees_edl_hierarchy_or_template_actions_listnodes_post(_api, edl_hierarchy_or_template; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_composites_trees_edl_hierarchy_or_template_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_composites_trees_edl_hierarchy_or_template_get(_api::DefaultApi, edl_hierarchy_or_template::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_composites_trees_edl_hierarchy_or_template_get_DefaultApi, "/composites/trees/{edl_hierarchy_or_template}", [])
    OpenAPI.Clients.set_param(_ctx.path, "edl_hierarchy_or_template", edl_hierarchy_or_template)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Root Nodes

Params:
- edl_hierarchy_or_template::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function composites_trees_edl_hierarchy_or_template_get(_api::DefaultApi, edl_hierarchy_or_template::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_composites_trees_edl_hierarchy_or_template_get(_api, edl_hierarchy_or_template; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function composites_trees_edl_hierarchy_or_template_get(_api::DefaultApi, response_stream::Channel, edl_hierarchy_or_template::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_composites_trees_edl_hierarchy_or_template_get(_api, edl_hierarchy_or_template; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_composites_trees_edl_hierarchy_v_parent_node_id_children_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_composites_trees_edl_hierarchy_v_parent_node_id_children_get(_api::DefaultApi, parent_node_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_composites_trees_edl_hierarchy_v_parent_node_id_children_get_DefaultApi, "/composites/trees/edl_hierarchy__v/{parent_node_id}/children", [])
    OpenAPI.Clients.set_param(_ctx.path, "parent_node_id", parent_node_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve a Node's Children

Params:
- parent_node_id::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function composites_trees_edl_hierarchy_v_parent_node_id_children_get(_api::DefaultApi, parent_node_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_composites_trees_edl_hierarchy_v_parent_node_id_children_get(_api, parent_node_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function composites_trees_edl_hierarchy_v_parent_node_id_children_get(_api::DefaultApi, response_stream::Channel, parent_node_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_composites_trees_edl_hierarchy_v_parent_node_id_children_get(_api, parent_node_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_composites_trees_edl_hierarchy_v_parent_node_id_children_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_composites_trees_edl_hierarchy_v_parent_node_id_children_put(_api::DefaultApi, parent_node_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_composites_trees_edl_hierarchy_v_parent_node_id_children_put_DefaultApi, "/composites/trees/edl_hierarchy__v/{parent_node_id}/children", [])
    OpenAPI.Clients.set_param(_ctx.path, "parent_node_id", parent_node_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Node Order

Params:
- parent_node_id::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function composites_trees_edl_hierarchy_v_parent_node_id_children_put(_api::DefaultApi, parent_node_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_composites_trees_edl_hierarchy_v_parent_node_id_children_put(_api, parent_node_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function composites_trees_edl_hierarchy_v_parent_node_id_children_put(_api::DefaultApi, response_stream::Channel, parent_node_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_composites_trees_edl_hierarchy_v_parent_node_id_children_put(_api, parent_node_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_configuration_component_type_and_record_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_configuration_component_type_and_record_name_get(_api::DefaultApi, component_type_and_record_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_configuration_component_type_and_record_name_get_DefaultApi, "/configuration/{component_type_and_record_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "component_type_and_record_name", component_type_and_record_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Component Record (XML/JSON)

Params:
- component_type_and_record_name::String (required)
- loc::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function configuration_component_type_and_record_name_get(_api::DefaultApi, component_type_and_record_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_component_type_and_record_name_get(_api, component_type_and_record_name; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function configuration_component_type_and_record_name_get(_api::DefaultApi, response_stream::Channel, component_type_and_record_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_component_type_and_record_name_get(_api, component_type_and_record_name; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_configuration_component_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_configuration_component_type_get(_api::DefaultApi, component_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_configuration_component_type_get_DefaultApi, "/configuration/{component_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "component_type", component_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Component Record Collection

Params:
- component_type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function configuration_component_type_get(_api::DefaultApi, component_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_component_type_get(_api, component_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function configuration_component_type_get(_api::DefaultApi, response_stream::Channel, component_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_component_type_get(_api, component_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_configuration_object_name_and_object_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_configuration_object_name_and_object_type_get(_api::DefaultApi, object_name_and_object_type::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_configuration_object_name_and_object_type_get_DefaultApi, "/configuration/{object_name_and_object_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name_and_object_type", object_name_and_object_type)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Details from a Specific Object

Params:
- object_name_and_object_type::String (required)
- loc::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function configuration_object_name_and_object_type_get(_api::DefaultApi, object_name_and_object_type::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_object_name_and_object_type_get(_api, object_name_and_object_type; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function configuration_object_name_and_object_type_get(_api::DefaultApi, response_stream::Channel, object_name_and_object_type::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_object_name_and_object_type_get(_api, object_name_and_object_type; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_configuration_objecttype_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_configuration_objecttype_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_configuration_objecttype_get_DefaultApi, "/configuration/Objecttype", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Details from All Object Types

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function configuration_objecttype_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_objecttype_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function configuration_objecttype_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_objecttype_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_configuration_role_assignment_rule_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_configuration_role_assignment_rule_delete(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_configuration_role_assignment_rule_delete_DefaultApi, "/configuration/role_assignment_rule", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Lifecycle Role Assignment Override Rules

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function configuration_role_assignment_rule_delete(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_role_assignment_rule_delete(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function configuration_role_assignment_rule_delete(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_role_assignment_rule_delete(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_configuration_role_assignment_rule_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_configuration_role_assignment_rule_get(_api::DefaultApi; lifecycle_v=nothing, role_v=nothing, product_v=nothing, country_v=nothing, study_v=nothing, study_country_v=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_configuration_role_assignment_rule_get_DefaultApi, "/configuration/role_assignment_rule", [])
    OpenAPI.Clients.set_param(_ctx.query, "lifecycle__v", lifecycle_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "role__v", role_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product__v", product_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "country__v", country_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "study__v", study_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "study_country__v", study_country_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Lifecycle Role Assignment Rules (Default & Override)

Params:
- lifecycle_v::String
- role_v::String
- product_v::String
- country_v::String
- study_v::String
- study_country_v::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function configuration_role_assignment_rule_get(_api::DefaultApi; lifecycle_v=nothing, role_v=nothing, product_v=nothing, country_v=nothing, study_v=nothing, study_country_v=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_role_assignment_rule_get(_api; lifecycle_v=lifecycle_v, role_v=role_v, product_v=product_v, country_v=country_v, study_v=study_v, study_country_v=study_country_v, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function configuration_role_assignment_rule_get(_api::DefaultApi, response_stream::Channel; lifecycle_v=nothing, role_v=nothing, product_v=nothing, country_v=nothing, study_v=nothing, study_country_v=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_role_assignment_rule_get(_api; lifecycle_v=lifecycle_v, role_v=role_v, product_v=product_v, country_v=country_v, study_v=study_v, study_country_v=study_country_v, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_configuration_role_assignment_rule_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_configuration_role_assignment_rule_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_configuration_role_assignment_rule_post_DefaultApi, "/configuration/role_assignment_rule", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Lifecycle Role Assignment Override Rules

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function configuration_role_assignment_rule_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_role_assignment_rule_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function configuration_role_assignment_rule_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_role_assignment_rule_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_configuration_role_assignment_rule_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_configuration_role_assignment_rule_put(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_configuration_role_assignment_rule_put_DefaultApi, "/configuration/role_assignment_rule", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Lifecycle Role Assignment Rules (Default & Override)

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function configuration_role_assignment_rule_put(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_role_assignment_rule_put(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function configuration_role_assignment_rule_put(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_configuration_role_assignment_rule_put(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delegation_login_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delegation_login_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_delegation_login_post_DefaultApi, "/delegation/login", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Delegated Session

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function delegation_login_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delegation_login_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delegation_login_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delegation_login_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delegation_vaults_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_delegation_vaults_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_delegation_vaults_get_DefaultApi, "/delegation/vaults", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Delegations

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function delegation_vaults_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delegation_vaults_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delegation_vaults_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_delegation_vaults_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_keep_alive_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_keep_alive_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_keep_alive_post_DefaultApi, "/keep-alive", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Session Keep Alive

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function keep_alive_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_keep_alive_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function keep_alive_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_keep_alive_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_limits_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_limits_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_limits_get_DefaultApi, "/limits", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Limits on Objects

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function limits_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_limits_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function limits_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_limits_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_logs_api_usage_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_logs_api_usage_get(_api::DefaultApi; date=nothing, log_format=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_logs_api_usage_get_DefaultApi, "/logs/api_usage", [])
    OpenAPI.Clients.set_param(_ctx.query, "date", date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "log_format", log_format; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Daily API Usage

Params:
- date::String
- log_format::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function logs_api_usage_get(_api::DefaultApi; date=nothing, log_format=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_api_usage_get(_api; date=date, log_format=log_format, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function logs_api_usage_get(_api::DefaultApi, response_stream::Channel; date=nothing, log_format=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_api_usage_get(_api; date=date, log_format=log_format, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_logs_code_debug_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_logs_code_debug_get(_api::DefaultApi; user_id=nothing, include_inactive=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_logs_code_debug_get_DefaultApi, "/logs/code/debug", [])
    OpenAPI.Clients.set_param(_ctx.query, "user_id", user_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "include_inactive", include_inactive; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Debug Logs

Params:
- user_id::String
- include_inactive::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function logs_code_debug_get(_api::DefaultApi; user_id=nothing, include_inactive=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_get(_api; user_id=user_id, include_inactive=include_inactive, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function logs_code_debug_get(_api::DefaultApi, response_stream::Channel; user_id=nothing, include_inactive=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_get(_api; user_id=user_id, include_inactive=include_inactive, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_logs_code_debug_id_actions_reset_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_logs_code_debug_id_actions_reset_delete(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_logs_code_debug_id_actions_reset_delete_DefaultApi, "/logs/code/debug/{id}/actions/reset", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Debug Log

Params:
- id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function logs_code_debug_id_actions_reset_delete(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_id_actions_reset_delete(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function logs_code_debug_id_actions_reset_delete(_api::DefaultApi, response_stream::Channel, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_id_actions_reset_delete(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_logs_code_debug_id_actions_reset_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_logs_code_debug_id_actions_reset_post(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_logs_code_debug_id_actions_reset_post_DefaultApi, "/logs/code/debug/{id}/actions/reset", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Reset Debug Log

Params:
- id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function logs_code_debug_id_actions_reset_post(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_id_actions_reset_post(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function logs_code_debug_id_actions_reset_post(_api::DefaultApi, response_stream::Channel, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_id_actions_reset_post(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_logs_code_debug_id_files_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_logs_code_debug_id_files_get(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_logs_code_debug_id_files_get_DefaultApi, "/logs/code/debug/{id}/files", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Debug Log Files

Params:
- id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function logs_code_debug_id_files_get(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_id_files_get(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function logs_code_debug_id_files_get(_api::DefaultApi, response_stream::Channel, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_id_files_get(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_logs_code_debug_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_logs_code_debug_id_get(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_logs_code_debug_id_get_DefaultApi, "/logs/code/debug/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Single Debug Log

Params:
- id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function logs_code_debug_id_get(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_id_get(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function logs_code_debug_id_get(_api::DefaultApi, response_stream::Channel, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_id_get(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_logs_code_debug_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_logs_code_debug_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_logs_code_debug_post_DefaultApi, "/logs/code/debug", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Debug Log

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function logs_code_debug_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function logs_code_debug_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_debug_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_logs_code_runtime_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_logs_code_runtime_get(_api::DefaultApi; date=nothing, log_format=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_logs_code_runtime_get_DefaultApi, "/logs/code/runtime", [])
    OpenAPI.Clients.set_param(_ctx.query, "date", date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "log_format", log_format; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download SDK Runtime Log

Params:
- date::String
- log_format::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function logs_code_runtime_get(_api::DefaultApi; date=nothing, log_format=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_runtime_get(_api; date=date, log_format=log_format, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function logs_code_runtime_get(_api::DefaultApi, response_stream::Channel; date=nothing, log_format=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_logs_code_runtime_get(_api; date=date, log_format=log_format, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_messages_message_type_actions_import_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_messages_message_type_actions_import_post(_api::DefaultApi, message_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_messages_message_type_actions_import_post_DefaultApi, "/messages/{message_type}/actions/import", [])
    OpenAPI.Clients.set_param(_ctx.path, "message_type", message_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Import Bulk Translation File

Params:
- message_type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function messages_message_type_actions_import_post(_api::DefaultApi, message_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_messages_message_type_actions_import_post(_api, message_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function messages_message_type_actions_import_post(_api::DefaultApi, response_stream::Channel, message_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_messages_message_type_actions_import_post(_api, message_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_messages_message_type_language_lang_actions_export_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_messages_message_type_language_lang_actions_export_post(_api::DefaultApi, message_type::String, lang::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_messages_message_type_language_lang_actions_export_post_DefaultApi, "/messages/{message_type}/language/{lang}/actions/export", [])
    OpenAPI.Clients.set_param(_ctx.path, "message_type", message_type)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "lang", lang)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Export Bulk Translation File

Params:
- message_type::String (required)
- lang::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function messages_message_type_language_lang_actions_export_post(_api::DefaultApi, message_type::String, lang::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_messages_message_type_language_lang_actions_export_post(_api, message_type, lang; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function messages_message_type_language_lang_actions_export_post(_api::DefaultApi, response_stream::Channel, message_type::String, lang::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_messages_message_type_language_lang_actions_export_post(_api, message_type, lang; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_audittrail_audit_trail_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_audittrail_audit_trail_type_get(_api::DefaultApi, audit_trail_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_audittrail_audit_trail_type_get_DefaultApi, "/metadata/audittrail/{audit_trail_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "audit_trail_type", audit_trail_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Audit Metadata

Params:
- audit_trail_type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_audittrail_audit_trail_type_get(_api::DefaultApi, audit_trail_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_audittrail_audit_trail_type_get(_api, audit_trail_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_audittrail_audit_trail_type_get(_api::DefaultApi, response_stream::Channel, audit_trail_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_audittrail_audit_trail_type_get(_api, audit_trail_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_audittrail_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_audittrail_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_audittrail_get_DefaultApi, "/metadata/audittrail", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Audit Types

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_audittrail_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_audittrail_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_audittrail_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_audittrail_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_components_component_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_components_component_type_get(_api::DefaultApi, component_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_components_component_type_get_DefaultApi, "/metadata/components/{component_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "component_type", component_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Component Type Metadata

Params:
- component_type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_components_component_type_get(_api::DefaultApi, component_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_components_component_type_get(_api, component_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_components_component_type_get(_api::DefaultApi, response_stream::Channel, component_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_components_component_type_get(_api, component_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_components_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_components_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_components_get_DefaultApi, "/metadata/components", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Component Metadata

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_components_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_components_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_components_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_components_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_binders_templates_bindernodes_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_binders_templates_bindernodes_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_binders_templates_bindernodes_get_DefaultApi, "/metadata/objects/binders/templates/bindernodes", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder Template Node Metadata

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_binders_templates_bindernodes_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_binders_templates_bindernodes_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_binders_templates_bindernodes_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_binders_templates_bindernodes_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_binders_templates_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_binders_templates_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_binders_templates_get_DefaultApi, "/metadata/objects/binders/templates", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder Template Metadata

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_binders_templates_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_binders_templates_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_binders_templates_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_binders_templates_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_annotations_placemarks_types_placemark_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_annotations_placemarks_types_placemark_type_get(_api::DefaultApi, placemark_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_annotations_placemarks_types_placemark_type_get_DefaultApi, "/metadata/objects/documents/annotations/placemarks/types/{placemark_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "placemark_type", placemark_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Annotation Placemark Type Metadata

Params:
- placemark_type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_annotations_placemarks_types_placemark_type_get(_api::DefaultApi, placemark_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_annotations_placemarks_types_placemark_type_get(_api, placemark_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_annotations_placemarks_types_placemark_type_get(_api::DefaultApi, response_stream::Channel, placemark_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_annotations_placemarks_types_placemark_type_get(_api, placemark_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_annotations_references_types_reference_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_annotations_references_types_reference_type_get(_api::DefaultApi, reference_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_annotations_references_types_reference_type_get_DefaultApi, "/metadata/objects/documents/annotations/references/types/{reference_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "reference_type", reference_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Annotation Reference Type Metadata

Params:
- reference_type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_annotations_references_types_reference_type_get(_api::DefaultApi, reference_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_annotations_references_types_reference_type_get(_api, reference_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_annotations_references_types_reference_type_get(_api::DefaultApi, response_stream::Channel, reference_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_annotations_references_types_reference_type_get(_api, reference_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_annotations_types_annotation_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_annotations_types_annotation_type_get(_api::DefaultApi, annotation_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_annotations_types_annotation_type_get_DefaultApi, "/metadata/objects/documents/annotations/types/{annotation_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "annotation_type", annotation_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Annotation Type Metadata

Params:
- annotation_type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_annotations_types_annotation_type_get(_api::DefaultApi, annotation_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_annotations_types_annotation_type_get(_api, annotation_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_annotations_types_annotation_type_get(_api::DefaultApi, response_stream::Channel, annotation_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_annotations_types_annotation_type_get(_api, annotation_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_events_event_type_types_event_subtype_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_events_event_type_types_event_subtype_get(_api::DefaultApi, event_type::String, event_subtype::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_events_event_type_types_event_subtype_get_DefaultApi, "/metadata/objects/documents/events/{event_type}/types/{event_subtype}", [])
    OpenAPI.Clients.set_param(_ctx.path, "event_type", event_type)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "event_subtype", event_subtype)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Event SubType Metadata

Params:
- event_type::String (required)
- event_subtype::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_events_event_type_types_event_subtype_get(_api::DefaultApi, event_type::String, event_subtype::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_events_event_type_types_event_subtype_get(_api, event_type, event_subtype; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_events_event_type_types_event_subtype_get(_api::DefaultApi, response_stream::Channel, event_type::String, event_subtype::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_events_event_type_types_event_subtype_get(_api, event_type, event_subtype; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_events_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_events_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_events_get_DefaultApi, "/metadata/objects/documents/events", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Event Types and Subtypes

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_events_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_events_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_events_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_events_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_lock_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_lock_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_lock_get_DefaultApi, "/metadata/objects/documents/lock", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Lock Metadata

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_lock_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_lock_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_lock_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_lock_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_properties_find_common_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_properties_find_common_post(_api::DefaultApi; content_type=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_metadata_objects_documents_properties_find_common_post_DefaultApi, "/metadata/objects/documents/properties/find_common", [])
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Common Document Fields

Params:
- content_type::String
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_properties_find_common_post(_api::DefaultApi; content_type=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_properties_find_common_post(_api; content_type=content_type, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_properties_find_common_post(_api::DefaultApi, response_stream::Channel; content_type=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_properties_find_common_post(_api; content_type=content_type, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_properties_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_properties_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_properties_get_DefaultApi, "/metadata/objects/documents/properties", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Document Fields

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_properties_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_properties_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_properties_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_properties_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_templates_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_templates_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_templates_get_DefaultApi, "/metadata/objects/documents/templates", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Template Metadata

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_templates_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_templates_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_templates_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_templates_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_types_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_types_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_types_get_DefaultApi, "/metadata/objects/documents/types", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Document Types

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_types_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_types_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_types_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_types_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_types_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_types_type_get(_api::DefaultApi, type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_types_type_get_DefaultApi, "/metadata/objects/documents/types/{type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "type", type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Type

Params:
- type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_types_type_get(_api::DefaultApi, type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_types_type_get(_api, type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_types_type_get(_api::DefaultApi, response_stream::Channel, type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_types_type_get(_api, type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_types_type_relationships_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_types_type_relationships_get(_api::DefaultApi, type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_types_type_relationships_get_DefaultApi, "/metadata/objects/documents/types/{type}/relationships", [])
    OpenAPI.Clients.set_param(_ctx.path, "type", type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Type Relationships

Params:
- type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_types_type_relationships_get(_api::DefaultApi, type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_types_type_relationships_get(_api, type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_types_type_relationships_get(_api::DefaultApi, response_stream::Channel, type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_types_type_relationships_get(_api, type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get(_api::DefaultApi, type::String, subtype::String, classification::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get_DefaultApi, "/metadata/objects/documents/types/{type}/subtypes/{subtype}/classifications/{classification}", [])
    OpenAPI.Clients.set_param(_ctx.path, "type", type)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subtype", subtype)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "classification", classification)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Classification

Params:
- type::String (required)
- subtype::String (required)
- classification::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get(_api::DefaultApi, type::String, subtype::String, classification::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get(_api, type, subtype, classification; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get(_api::DefaultApi, response_stream::Channel, type::String, subtype::String, classification::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get(_api, type, subtype, classification; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_documents_types_type_subtypes_subtype_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_documents_types_type_subtypes_subtype_get(_api::DefaultApi, type::String, subtype::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_documents_types_type_subtypes_subtype_get_DefaultApi, "/metadata/objects/documents/types/{type}/subtypes/{subtype}", [])
    OpenAPI.Clients.set_param(_ctx.path, "type", type)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subtype", subtype)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Subtype

Params:
- type::String (required)
- subtype::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_documents_types_type_subtypes_subtype_get(_api::DefaultApi, type::String, subtype::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_types_type_subtypes_subtype_get(_api, type, subtype; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_documents_types_type_subtypes_subtype_get(_api::DefaultApi, response_stream::Channel, type::String, subtype::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_documents_types_type_subtypes_subtype_get(_api, type, subtype; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_groups_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_groups_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_groups_get_DefaultApi, "/metadata/objects/groups", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Group Metadata

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_groups_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_groups_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_groups_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_groups_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_securitypolicies_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_securitypolicies_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_securitypolicies_get_DefaultApi, "/metadata/objects/securitypolicies", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Security Policy Metadata

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_securitypolicies_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_securitypolicies_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_securitypolicies_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_securitypolicies_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_objects_users_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_objects_users_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_objects_users_get_DefaultApi, "/metadata/objects/users", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve User Metadata

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_objects_users_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_users_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_objects_users_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_objects_users_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_query_archived_documents_relationships_document_signature_sysr_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_query_archived_documents_relationships_document_signature_sysr_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_query_archived_documents_relationships_document_signature_sysr_get_DefaultApi, "/metadata/query/archived_documents/relationships/document_signature__sysr", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Archived Document Signature Metadata

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_query_archived_documents_relationships_document_signature_sysr_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_query_archived_documents_relationships_document_signature_sysr_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_query_archived_documents_relationships_document_signature_sysr_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_query_archived_documents_relationships_document_signature_sysr_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_query_documents_relationships_document_signature_sysr_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_query_documents_relationships_document_signature_sysr_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_query_documents_relationships_document_signature_sysr_get_DefaultApi, "/metadata/query/documents/relationships/document_signature__sysr", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Signature Metadata

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_query_documents_relationships_document_signature_sysr_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_query_documents_relationships_document_signature_sysr_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_query_documents_relationships_document_signature_sysr_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_query_documents_relationships_document_signature_sysr_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_vobjects_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_vobjects_get(_api::DefaultApi; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_vobjects_get_DefaultApi, "/metadata/vobjects", [])
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Object Collection

Params:
- loc::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_vobjects_get(_api::DefaultApi; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_get(_api; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_vobjects_get(_api::DefaultApi, response_stream::Channel; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_get(_api; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_vobjects_object_name_actions_canceldeployment_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_vobjects_object_name_actions_canceldeployment_post(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_metadata_vobjects_object_name_actions_canceldeployment_post_DefaultApi, "/metadata/vobjects/{object_name}/actions/canceldeployment", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Cancel Raw Object Deployment

Params:
- object_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_vobjects_object_name_actions_canceldeployment_post(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_object_name_actions_canceldeployment_post(_api, object_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_vobjects_object_name_actions_canceldeployment_post(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_object_name_actions_canceldeployment_post(_api, object_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_vobjects_object_name_fields_object_field_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_vobjects_object_name_fields_object_field_name_get(_api::DefaultApi, object_name::String, object_field_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_vobjects_object_name_fields_object_field_name_get_DefaultApi, "/metadata/vobjects/{object_name}/fields/{object_field_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_field_name", object_field_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Object Field Metadata

Params:
- object_name::String (required)
- object_field_name::String (required)
- loc::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_vobjects_object_name_fields_object_field_name_get(_api::DefaultApi, object_name::String, object_field_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_object_name_fields_object_field_name_get(_api, object_name, object_field_name; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_vobjects_object_name_fields_object_field_name_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_field_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_object_name_fields_object_field_name_get(_api, object_name, object_field_name; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_vobjects_object_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_vobjects_object_name_get(_api::DefaultApi, object_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_vobjects_object_name_get_DefaultApi, "/metadata/vobjects/{object_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Object Metadata

Params:
- object_name::String (required)
- loc::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_vobjects_object_name_get(_api::DefaultApi, object_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_object_name_get(_api, object_name; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_vobjects_object_name_get(_api::DefaultApi, response_stream::Channel, object_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_object_name_get(_api, object_name; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_vobjects_object_name_page_layouts_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_vobjects_object_name_page_layouts_get(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_vobjects_object_name_page_layouts_get_DefaultApi, "/metadata/vobjects/{object_name}/page_layouts", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Page Layouts

Params:
- object_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_vobjects_object_name_page_layouts_get(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_object_name_page_layouts_get(_api, object_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_vobjects_object_name_page_layouts_get(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_object_name_page_layouts_get(_api, object_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_metadata_vobjects_object_name_page_layouts_layout_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_metadata_vobjects_object_name_page_layouts_layout_name_get(_api::DefaultApi, object_name::String, layout_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_metadata_vobjects_object_name_page_layouts_layout_name_get_DefaultApi, "/metadata/vobjects/{object_name}/page_layouts/{layout_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "layout_name", layout_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Page Layout Metadata

Params:
- object_name::String (required)
- layout_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function metadata_vobjects_object_name_page_layouts_layout_name_get(_api::DefaultApi, object_name::String, layout_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_object_name_page_layouts_layout_name_get(_api, object_name, layout_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function metadata_vobjects_object_name_page_layouts_layout_name_get(_api::DefaultApi, response_stream::Channel, object_name::String, layout_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_metadata_vobjects_object_name_page_layouts_layout_name_get(_api, object_name, layout_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_notifications_histories_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_notifications_histories_get(_api::DefaultApi; start_date=nothing, end_date=nothing, all_dates=nothing, format_result=nothing, limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_notifications_histories_get_DefaultApi, "/notifications/histories", [])
    OpenAPI.Clients.set_param(_ctx.query, "start_date", start_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "end_date", end_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "all_dates", all_dates; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "format_result", format_result; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "offset", offset; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Email Notification Histories

Params:
- start_date::String
- end_date::String
- all_dates::Bool
- format_result::String
- limit::String
- offset::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function notifications_histories_get(_api::DefaultApi; start_date=nothing, end_date=nothing, all_dates=nothing, format_result=nothing, limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_notifications_histories_get(_api; start_date=start_date, end_date=end_date, all_dates=all_dates, format_result=format_result, limit=limit, offset=offset, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function notifications_histories_get(_api::DefaultApi, response_stream::Channel; start_date=nothing, end_date=nothing, all_dates=nothing, format_result=nothing, limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_notifications_histories_get(_api; start_date=start_date, end_date=end_date, all_dates=all_dates, format_result=format_result, limit=limit, offset=offset, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_object_workflow_actions_action_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_object_workflow_actions_action_get(_api::DefaultApi, action::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_object_workflow_actions_action_get_DefaultApi, "/object/workflow/actions/{action}", [])
    OpenAPI.Clients.set_param(_ctx.path, "action", action)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Bulk Workflow Action Details

Params:
- action::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function object_workflow_actions_action_get(_api::DefaultApi, action::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_action_get(_api, action; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function object_workflow_actions_action_get(_api::DefaultApi, response_stream::Channel, action::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_action_get(_api, action; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_object_workflow_actions_action_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_object_workflow_actions_action_post(_api::DefaultApi, action::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_object_workflow_actions_action_post_DefaultApi, "/object/workflow/actions/{action}", [])
    OpenAPI.Clients.set_param(_ctx.path, "action", action)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Workflow Actions on Multiple Workflows

Params:
- action::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function object_workflow_actions_action_post(_api::DefaultApi, action::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_action_post(_api, action; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function object_workflow_actions_action_post(_api::DefaultApi, response_stream::Channel, action::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_action_post(_api, action; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_object_workflow_actions_canceltasks_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_object_workflow_actions_canceltasks_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_object_workflow_actions_canceltasks_post_DefaultApi, "/object/workflow/actions/canceltasks", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Cancel Workflow Tasks

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function object_workflow_actions_canceltasks_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_canceltasks_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function object_workflow_actions_canceltasks_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_canceltasks_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_object_workflow_actions_cancelworkflows_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_object_workflow_actions_cancelworkflows_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_object_workflow_actions_cancelworkflows_post_DefaultApi, "/object/workflow/actions/cancelworkflows", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Cancel Workflows

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function object_workflow_actions_cancelworkflows_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_cancelworkflows_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function object_workflow_actions_cancelworkflows_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_cancelworkflows_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_object_workflow_actions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_object_workflow_actions_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_object_workflow_actions_get_DefaultApi, "/object/workflow/actions", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Bulk Workflow Actions

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function object_workflow_actions_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function object_workflow_actions_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_object_workflow_actions_reassigntasks_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_object_workflow_actions_reassigntasks_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_object_workflow_actions_reassigntasks_post_DefaultApi, "/object/workflow/actions/reassigntasks", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Reassign Workflow Tasks

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function object_workflow_actions_reassigntasks_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_reassigntasks_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function object_workflow_actions_reassigntasks_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_reassigntasks_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_object_workflow_actions_replaceworkflowowner_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_object_workflow_actions_replaceworkflowowner_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_object_workflow_actions_replaceworkflowowner_post_DefaultApi, "/object/workflow/actions/replaceworkflowowner", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Replace Workflow Owner

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function object_workflow_actions_replaceworkflowowner_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_replaceworkflowowner_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function object_workflow_actions_replaceworkflowowner_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_object_workflow_actions_replaceworkflowowner_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_actions_export_job_id_results_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_actions_export_job_id_results_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_actions_export_job_id_results_get_DefaultApi, "/objects/binders/actions/export/{job_id}/results", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder Export Results

Params:
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_actions_export_job_id_results_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_actions_export_job_id_results_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_actions_export_job_id_results_get(_api::DefaultApi, response_stream::Channel, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_actions_export_job_id_results_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_actions_export_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_actions_export_post(_api::DefaultApi, binder_id::String; source=nothing, renditiontype=nothing, docversion=nothing, attachments=nothing, __export__=nothing, docfield=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_binder_id_actions_export_post_DefaultApi, "/objects/binders/{binder_id}/actions/export", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "source", source; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "renditiontype", renditiontype; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "docversion", docversion; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "attachments", attachments; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "export", __export__; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "docfield", docfield; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Export Binder (Latest Version)

Params:
- binder_id::String (required)
- source::Bool
- renditiontype::String
- docversion::String
- attachments::String
- __export__::String
- docfield::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_actions_export_post(_api::DefaultApi, binder_id::String; source=nothing, renditiontype=nothing, docversion=nothing, attachments=nothing, __export__=nothing, docfield=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_actions_export_post(_api, binder_id; source=source, renditiontype=renditiontype, docversion=docversion, attachments=attachments, __export__=__export__, docfield=docfield, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_actions_export_post(_api::DefaultApi, response_stream::Channel, binder_id::String; source=nothing, renditiontype=nothing, docversion=nothing, attachments=nothing, __export__=nothing, docfield=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_actions_export_post(_api, binder_id; source=source, renditiontype=renditiontype, docversion=docversion, attachments=attachments, __export__=__export__, docfield=docfield, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_actions_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_actions_post(_api::DefaultApi, binder_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_binder_id_actions_post_DefaultApi, "/objects/binders/{binder_id}/actions", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Refresh Binder Auto-Filing

Params:
- binder_id::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_actions_post(_api::DefaultApi, binder_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_actions_post(_api, binder_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_actions_post(_api::DefaultApi, response_stream::Channel, binder_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_actions_post(_api, binder_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_binding_rule_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_binding_rule_put(_api::DefaultApi, binder_id::String; content_type=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_binders_binder_id_binding_rule_put_DefaultApi, "/objects/binders/{binder_id}/binding_rule", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Binding Rule

Params:
- binder_id::String (required)
- content_type::String
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_binding_rule_put(_api::DefaultApi, binder_id::String; content_type=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_binding_rule_put(_api, binder_id; content_type=content_type, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_binding_rule_put(_api::DefaultApi, response_stream::Channel, binder_id::String; content_type=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_binding_rule_put(_api, binder_id; content_type=content_type, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_delete(_api::DefaultApi, binder_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_binders_binder_id_delete_DefaultApi, "/objects/binders/{binder_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Binder

Params:
- binder_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_delete(_api::DefaultApi, binder_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_delete(_api, binder_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_delete(_api::DefaultApi, response_stream::Channel, binder_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_delete(_api, binder_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_documents_node_id_binding_rule_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_documents_node_id_binding_rule_put(_api::DefaultApi, binder_id::String, node_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_binders_binder_id_documents_node_id_binding_rule_put_DefaultApi, "/objects/binders/{binder_id}/documents/{node_id}/binding_rule", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "node_id", node_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Binder Document Binding Rule

Params:
- binder_id::String (required)
- node_id::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_documents_node_id_binding_rule_put(_api::DefaultApi, binder_id::String, node_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_documents_node_id_binding_rule_put(_api, binder_id, node_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_documents_node_id_binding_rule_put(_api::DefaultApi, response_stream::Channel, binder_id::String, node_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_documents_node_id_binding_rule_put(_api, binder_id, node_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_documents_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_documents_post(_api::DefaultApi, binder_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_binder_id_documents_post_DefaultApi, "/objects/binders/{binder_id}/documents", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Add Document to Binder

Params:
- binder_id::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_documents_post(_api::DefaultApi, binder_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_documents_post(_api, binder_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_documents_post(_api::DefaultApi, response_stream::Channel, binder_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_documents_post(_api, binder_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_documents_section_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_documents_section_id_delete(_api::DefaultApi, binder_id::String, section_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_binders_binder_id_documents_section_id_delete_DefaultApi, "/objects/binders/{binder_id}/documents/{section_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "section_id", section_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Remove Document from Binder

Params:
- binder_id::String (required)
- section_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_documents_section_id_delete(_api::DefaultApi, binder_id::String, section_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_documents_section_id_delete(_api, binder_id, section_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_documents_section_id_delete(_api::DefaultApi, response_stream::Channel, binder_id::String, section_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_documents_section_id_delete(_api, binder_id, section_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_documents_section_id_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_documents_section_id_put(_api::DefaultApi, binder_id::String, section_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_binders_binder_id_documents_section_id_put_DefaultApi, "/objects/binders/{binder_id}/documents/{section_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "section_id", section_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Move Document in Binder

Params:
- binder_id::String (required)
- section_id::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_documents_section_id_put(_api::DefaultApi, binder_id::String, section_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_documents_section_id_put(_api, binder_id, section_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_documents_section_id_put(_api::DefaultApi, response_stream::Channel, binder_id::String, section_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_documents_section_id_put(_api, binder_id, section_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_get(_api::DefaultApi, binder_id::String; depth=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_binder_id_get_DefaultApi, "/objects/binders/{binder_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "depth", depth; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder

Params:
- binder_id::String (required)
- depth::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_get(_api::DefaultApi, binder_id::String; depth=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_get(_api, binder_id; depth=depth, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_get(_api::DefaultApi, response_stream::Channel, binder_id::String; depth=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_get(_api, binder_id; depth=depth, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_post(_api::DefaultApi, binder_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_binder_id_post_DefaultApi, "/objects/binders/{binder_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Binder Version

Params:
- binder_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_post(_api::DefaultApi, binder_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_post(_api, binder_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_post(_api::DefaultApi, response_stream::Channel, binder_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_post(_api, binder_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_put(_api::DefaultApi, binder_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_binders_binder_id_put_DefaultApi, "/objects/binders/{binder_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Binder

Params:
- binder_id::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_put(_api::DefaultApi, binder_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_put(_api, binder_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_put(_api::DefaultApi, response_stream::Channel, binder_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_put(_api, binder_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete(_api::DefaultApi, binder_id::String, role_name_and_user_or_group::String, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete_DefaultApi, "/objects/binders/{binder_id}/roles/{role_name_and_user_or_group}/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "role_name_and_user_or_group", role_name_and_user_or_group)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Remove Users & Groups from Roles on a Single Binder

Params:
- binder_id::String (required)
- role_name_and_user_or_group::String (required)
- id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete(_api::DefaultApi, binder_id::String, role_name_and_user_or_group::String, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete(_api, binder_id, role_name_and_user_or_group, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete(_api::DefaultApi, response_stream::Channel, binder_id::String, role_name_and_user_or_group::String, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete(_api, binder_id, role_name_and_user_or_group, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_sections_node_id_binding_rule_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_sections_node_id_binding_rule_put(_api::DefaultApi, binder_id::String, node_id::String; content_type=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_binders_binder_id_sections_node_id_binding_rule_put_DefaultApi, "/objects/binders/{binder_id}/sections/{node_id}/binding_rule", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "node_id", node_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Binder Section Binding Rule

Params:
- binder_id::String (required)
- node_id::String (required)
- content_type::String
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_sections_node_id_binding_rule_put(_api::DefaultApi, binder_id::String, node_id::String; content_type=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_sections_node_id_binding_rule_put(_api, binder_id, node_id; content_type=content_type, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_sections_node_id_binding_rule_put(_api::DefaultApi, response_stream::Channel, binder_id::String, node_id::String; content_type=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_sections_node_id_binding_rule_put(_api, binder_id, node_id; content_type=content_type, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_sections_node_id_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_sections_node_id_put(_api::DefaultApi, binder_id::String, node_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_binders_binder_id_sections_node_id_put_DefaultApi, "/objects/binders/{binder_id}/sections/{node_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "node_id", node_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Binder Section

Params:
- binder_id::String (required)
- node_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_sections_node_id_put(_api::DefaultApi, binder_id::String, node_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_sections_node_id_put(_api, binder_id, node_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_sections_node_id_put(_api::DefaultApi, response_stream::Channel, binder_id::String, node_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_sections_node_id_put(_api, binder_id, node_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_sections_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_sections_post(_api::DefaultApi, binder_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_binder_id_sections_post_DefaultApi, "/objects/binders/{binder_id}/sections", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Binder Section

Params:
- binder_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_sections_post(_api::DefaultApi, binder_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_sections_post(_api, binder_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_sections_post(_api::DefaultApi, response_stream::Channel, binder_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_sections_post(_api, binder_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_sections_section_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_sections_section_id_delete(_api::DefaultApi, binder_id::String, section_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_binders_binder_id_sections_section_id_delete_DefaultApi, "/objects/binders/{binder_id}/sections/{section_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "section_id", section_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Binder Section

Params:
- binder_id::String (required)
- section_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_sections_section_id_delete(_api::DefaultApi, binder_id::String, section_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_sections_section_id_delete(_api, binder_id, section_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_sections_section_id_delete(_api::DefaultApi, response_stream::Channel, binder_id::String, section_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_sections_section_id_delete(_api, binder_id, section_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_sections_section_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_sections_section_id_get(_api::DefaultApi, binder_id::String, section_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_binder_id_sections_section_id_get_DefaultApi, "/objects/binders/{binder_id}/sections/{section_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "section_id", section_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder Sections

Params:
- binder_id::String (required)
- section_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_sections_section_id_get(_api::DefaultApi, binder_id::String, section_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_sections_section_id_get(_api, binder_id, section_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_sections_section_id_get(_api::DefaultApi, response_stream::Channel, binder_id::String, section_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_sections_section_id_get(_api, binder_id, section_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_versions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_versions_get(_api::DefaultApi, binder_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_binder_id_versions_get_DefaultApi, "/objects/binders/{binder_id}/versions", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Binder Versions

Params:
- binder_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_versions_get(_api::DefaultApi, binder_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_get(_api, binder_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_versions_get(_api::DefaultApi, response_stream::Channel, binder_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_get(_api, binder_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_versions_major_version_minor_version_actions_export_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_actions_export_post(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String; source=nothing, renditiontype=nothing, docversion=nothing, attachments=nothing, __export__=nothing, docfield=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_binder_id_versions_major_version_minor_version_actions_export_post_DefaultApi, "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/actions/export", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "source", source; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "renditiontype", renditiontype; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "docversion", docversion; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "attachments", attachments; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "export", __export__; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "docfield", docfield; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Export Binder (Specific Version)

Params:
- binder_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- source::Bool
- renditiontype::String
- docversion::String
- attachments::String
- __export__::String
- docfield::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_versions_major_version_minor_version_actions_export_post(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String; source=nothing, renditiontype=nothing, docversion=nothing, attachments=nothing, __export__=nothing, docfield=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_actions_export_post(_api, binder_id, major_version, minor_version; source=source, renditiontype=renditiontype, docversion=docversion, attachments=attachments, __export__=__export__, docfield=docfield, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_versions_major_version_minor_version_actions_export_post(_api::DefaultApi, response_stream::Channel, binder_id::String, major_version::String, minor_version::String; source=nothing, renditiontype=nothing, docversion=nothing, attachments=nothing, __export__=nothing, docfield=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_actions_export_post(_api, binder_id, major_version, minor_version; source=source, renditiontype=renditiontype, docversion=docversion, attachments=attachments, __export__=__export__, docfield=docfield, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_versions_major_version_minor_version_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_delete(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_binders_binder_id_versions_major_version_minor_version_delete_DefaultApi, "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Binder Version

Params:
- binder_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_versions_major_version_minor_version_delete(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_delete(_api, binder_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_versions_major_version_minor_version_delete(_api::DefaultApi, response_stream::Channel, binder_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_delete(_api, binder_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_versions_major_version_minor_version_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_get(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_binder_id_versions_major_version_minor_version_get_DefaultApi, "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder Version

Params:
- binder_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_versions_major_version_minor_version_get(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_get(_api, binder_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_versions_major_version_minor_version_get(_api::DefaultApi, response_stream::Channel, binder_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_get(_api, binder_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_versions_major_version_minor_version_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_put(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_binders_binder_id_versions_major_version_minor_version_put_DefaultApi, "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Binder Version

Params:
- binder_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_versions_major_version_minor_version_put(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_put(_api, binder_id, major_version, minor_version; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_versions_major_version_minor_version_put(_api::DefaultApi, response_stream::Channel, binder_id::String, major_version::String, minor_version::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_put(_api, binder_id, major_version, minor_version; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_versions_major_version_minor_version_relationships_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_relationships_post(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_binder_id_versions_major_version_minor_version_relationships_post_DefaultApi, "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Binder Relationship

Params:
- binder_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_versions_major_version_minor_version_relationships_post(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_relationships_post(_api, binder_id, major_version, minor_version; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_versions_major_version_minor_version_relationships_post(_api::DefaultApi, response_stream::Channel, binder_id::String, major_version::String, minor_version::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_relationships_post(_api, binder_id, major_version, minor_version; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete_DefaultApi, "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "relationship_id", relationship_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Binder Relationship

Params:
- binder_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- relationship_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete(_api, binder_id, major_version, minor_version, relationship_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete(_api::DefaultApi, response_stream::Channel, binder_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete(_api, binder_id, major_version, minor_version, relationship_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get_DefaultApi, "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "relationship_id", relationship_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder Relationship

Params:
- binder_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- relationship_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get(_api, binder_id, major_version, minor_version, relationship_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get(_api::DefaultApi, response_stream::Channel, binder_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get(_api, binder_id, major_version, minor_version, relationship_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String, section_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get_DefaultApi, "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/sections/{section_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "binder_id", binder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "section_id", section_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder Version Section

Params:
- binder_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- section_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get(_api::DefaultApi, binder_id::String, major_version::String, minor_version::String, section_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get(_api, binder_id, major_version, minor_version, section_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get(_api::DefaultApi, response_stream::Channel, binder_id::String, major_version::String, minor_version::String, section_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get(_api, binder_id, major_version, minor_version, section_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_id_roles_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_id_roles_get(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_id_roles_get_DefaultApi, "/objects/binders/{id}/roles", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Binder Roles

Params:
- id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_id_roles_get(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_roles_get(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_id_roles_get(_api::DefaultApi, response_stream::Channel, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_roles_get(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_id_roles_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_id_roles_post(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_id_roles_post_DefaultApi, "/objects/binders/{id}/roles", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Assign Users & Groups to Roles on a Single Binder

Params:
- id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_id_roles_post(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_roles_post(_api, id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_id_roles_post(_api::DefaultApi, response_stream::Channel, id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_roles_post(_api, id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_id_roles_role_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_id_roles_role_name_get(_api::DefaultApi, id::String, role_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_id_roles_role_name_get_DefaultApi, "/objects/binders/{id}/roles/{role_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "role_name", role_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Role

Params:
- id::String (required)
- role_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_id_roles_role_name_get(_api::DefaultApi, id::String, role_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_roles_role_name_get(_api, id, role_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_id_roles_role_name_get(_api::DefaultApi, response_stream::Channel, id::String, role_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_roles_role_name_get(_api, id, role_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get(_api::DefaultApi, id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get_DefaultApi, "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder User Actions

Params:
- id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get(_api::DefaultApi, id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get(_api, id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get(_api::DefaultApi, response_stream::Channel, id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get(_api, id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(_api::DefaultApi, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get_DefaultApi, "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}/entry_requirements", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "name__v", name_v)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder Entry Criteria

Params:
- id::String (required)
- major_version::String (required)
- minor_version::String (required)
- name_v::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(_api::DefaultApi, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(_api, id, major_version, minor_version, name_v; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(_api::DefaultApi, response_stream::Channel, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(_api, id, major_version, minor_version, name_v; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(_api::DefaultApi, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_put_DefaultApi, "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "name__v", name_v)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Binder User Action

Params:
- id::String (required)
- major_version::String (required)
- minor_version::String (required)
- name_v::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(_api::DefaultApi, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(_api, id, major_version, minor_version, name_v; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(_api::DefaultApi, response_stream::Channel, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(_api, id, major_version, minor_version, name_v; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_lifecycle_actions_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_lifecycle_actions_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_lifecycle_actions_post_DefaultApi, "/objects/binders/lifecycle_actions", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve User Actions on Multiple Binders

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_lifecycle_actions_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_lifecycle_actions_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_lifecycle_actions_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_lifecycle_actions_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_lifecycle_actions_user_action_name_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_lifecycle_actions_user_action_name_put(_api::DefaultApi, user_action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_binders_lifecycle_actions_user_action_name_put_DefaultApi, "/objects/binders/lifecycle_actions/{user_action_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "user_action_name", user_action_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Bulk Binder User Actions

Params:
- user_action_name::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_lifecycle_actions_user_action_name_put(_api::DefaultApi, user_action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_lifecycle_actions_user_action_name_put(_api, user_action_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_lifecycle_actions_user_action_name_put(_api::DefaultApi, response_stream::Channel, user_action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_lifecycle_actions_user_action_name_put(_api, user_action_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_post(_api::DefaultApi; async=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_post_DefaultApi, "/objects/binders", [])
    OpenAPI.Clients.set_param(_ctx.query, "async", async; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Binder

Params:
- async::Bool
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_post(_api::DefaultApi; async=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_post(_api; async=async, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_post(_api::DefaultApi, response_stream::Channel; async=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_post(_api; async=async, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_templates_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_templates_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_templates_get_DefaultApi, "/objects/binders/templates", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder Template Collection

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_templates_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_templates_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_templates_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_templates_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_templates_post_DefaultApi, "/objects/binders/templates", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Binder Template

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_templates_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_templates_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_templates_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_templates_put(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_binders_templates_put_DefaultApi, "/objects/binders/templates", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Binder Template

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_templates_put(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_put(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_templates_put(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_put(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_templates_template_name_bindernodes_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_templates_template_name_bindernodes_get(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_templates_template_name_bindernodes_get_DefaultApi, "/objects/binders/templates/{template_name}/bindernodes", [])
    OpenAPI.Clients.set_param(_ctx.path, "template_name", template_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder Template Node Attributes

Params:
- template_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_templates_template_name_bindernodes_get(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_template_name_bindernodes_get(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_templates_template_name_bindernodes_get(_api::DefaultApi, response_stream::Channel, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_template_name_bindernodes_get(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_templates_template_name_bindernodes_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_templates_template_name_bindernodes_post(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_binders_templates_template_name_bindernodes_post_DefaultApi, "/objects/binders/templates/{template_name}/bindernodes", [])
    OpenAPI.Clients.set_param(_ctx.path, "template_name", template_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Binder Template Node

Params:
- template_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_templates_template_name_bindernodes_post(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_template_name_bindernodes_post(_api, template_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_templates_template_name_bindernodes_post(_api::DefaultApi, response_stream::Channel, template_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_template_name_bindernodes_post(_api, template_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_templates_template_name_bindernodes_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_templates_template_name_bindernodes_put(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_binders_templates_template_name_bindernodes_put_DefaultApi, "/objects/binders/templates/{template_name}/bindernodes", [])
    OpenAPI.Clients.set_param(_ctx.path, "template_name", template_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Replace Binder Template Nodes

Params:
- template_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_templates_template_name_bindernodes_put(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_template_name_bindernodes_put(_api, template_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_templates_template_name_bindernodes_put(_api::DefaultApi, response_stream::Channel, template_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_template_name_bindernodes_put(_api, template_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_templates_template_name_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_templates_template_name_delete(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_binders_templates_template_name_delete_DefaultApi, "/objects/binders/templates/{template_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "template_name", template_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Binder Template

Params:
- template_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_templates_template_name_delete(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_template_name_delete(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_templates_template_name_delete(_api::DefaultApi, response_stream::Channel, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_template_name_delete(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_binders_templates_template_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_binders_templates_template_name_get(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_binders_templates_template_name_get_DefaultApi, "/objects/binders/templates/{template_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "template_name", template_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Binder Template Attributes

Params:
- template_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_binders_templates_template_name_get(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_template_name_get(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_binders_templates_template_name_get(_api::DefaultApi, response_stream::Channel, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_binders_templates_template_name_get(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_deletions_documents_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_deletions_documents_get(_api::DefaultApi; start_date=nothing, end_date=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_deletions_documents_get_DefaultApi, "/objects/deletions/documents", [])
    OpenAPI.Clients.set_param(_ctx.query, "start_date", start_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "end_date", end_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Deleted Document IDs

Params:
- start_date::String
- end_date::String
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_deletions_documents_get(_api::DefaultApi; start_date=nothing, end_date=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_deletions_documents_get(_api; start_date=start_date, end_date=end_date, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_deletions_documents_get(_api::DefaultApi, response_stream::Channel; start_date=nothing, end_date=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_deletions_documents_get(_api; start_date=start_date, end_date=end_date, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_deletions_vobjects_object_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_deletions_vobjects_object_name_get(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_deletions_vobjects_object_name_get_DefaultApi, "/objects/deletions/vobjects/{object_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Deleted Object Record ID

Params:
- object_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_deletions_vobjects_object_name_get(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_deletions_vobjects_object_name_get(_api, object_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_deletions_vobjects_object_name_get(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_deletions_vobjects_object_name_get(_api, object_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_actions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_actions_get(_api::DefaultApi; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_actions_get_DefaultApi, "/objects/documents/actions", [])
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Document Workflows

Params:
- loc::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_actions_get(_api::DefaultApi; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_actions_get(_api; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_actions_get(_api::DefaultApi, response_stream::Channel; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_actions_get(_api; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get(_api::DefaultApi, lifecycle_and_state_and_action::String, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get_DefaultApi, "/objects/documents/actions/{lifecycle_and_state_and_action}/{job_id}/results", [])
    OpenAPI.Clients.set_param(_ctx.path, "lifecycle_and_state_and_action", lifecycle_and_state_and_action)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Controlled Copy Job Results

Params:
- lifecycle_and_state_and_action::String (required)
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get(_api::DefaultApi, lifecycle_and_state_and_action::String, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get(_api, lifecycle_and_state_and_action, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get(_api::DefaultApi, response_stream::Channel, lifecycle_and_state_and_action::String, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get(_api, lifecycle_and_state_and_action, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_actions_workflow_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_actions_workflow_name_get(_api::DefaultApi, workflow_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_actions_workflow_name_get_DefaultApi, "/objects/documents/actions/{workflow_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "workflow_name", workflow_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Workflow Details

Params:
- workflow_name::String (required)
- loc::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_actions_workflow_name_get(_api::DefaultApi, workflow_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_actions_workflow_name_get(_api, workflow_name; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_actions_workflow_name_get(_api::DefaultApi, response_stream::Channel, workflow_name::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_actions_workflow_name_get(_api, workflow_name; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_actions_workflow_name_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_actions_workflow_name_post(_api::DefaultApi, workflow_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_actions_workflow_name_post_DefaultApi, "/objects/documents/actions/{workflow_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "workflow_name", workflow_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Document Workflow

Params:
- workflow_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_actions_workflow_name_post(_api::DefaultApi, workflow_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_actions_workflow_name_post(_api, workflow_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_actions_workflow_name_post(_api::DefaultApi, response_stream::Channel, workflow_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_actions_workflow_name_post(_api, workflow_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_annotations_batch_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_annotations_batch_delete(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_annotations_batch_delete_DefaultApi, "/objects/documents/annotations/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Annotations

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_annotations_batch_delete(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_annotations_batch_delete(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_annotations_batch_delete(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_annotations_batch_delete(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_annotations_batch_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_annotations_batch_post(_api::DefaultApi, authorization::String, content_type::String, accept::String, x_vault_a_p_i_client_i_d::String; _mediaType=nothing)
    OpenAPI.validate_param("authorization", "objects_documents_annotations_batch_post", :maxLength, authorization, 0)
    OpenAPI.validate_param("authorization", "objects_documents_annotations_batch_post", :minLength, authorization, 0)

    OpenAPI.validate_param("content_type", "objects_documents_annotations_batch_post", :maxLength, content_type, 0)
    OpenAPI.validate_param("content_type", "objects_documents_annotations_batch_post", :minLength, content_type, 0)

    OpenAPI.validate_param("accept", "objects_documents_annotations_batch_post", :maxLength, accept, 0)
    OpenAPI.validate_param("accept", "objects_documents_annotations_batch_post", :minLength, accept, 0)

    OpenAPI.validate_param("x_vault_a_p_i_client_i_d", "objects_documents_annotations_batch_post", :maxLength, x_vault_a_p_i_client_i_d, 0)
    OpenAPI.validate_param("x_vault_a_p_i_client_i_d", "objects_documents_annotations_batch_post", :minLength, x_vault_a_p_i_client_i_d, 0)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_annotations_batch_post_DefaultApi, "/objects/documents/annotations/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Multiple Annotations

Params:
- authorization::String (required)
- content_type::String (required)
- accept::String (required)
- x_vault_a_p_i_client_i_d::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_annotations_batch_post(_api::DefaultApi, authorization::String, content_type::String, accept::String, x_vault_a_p_i_client_i_d::String; _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_annotations_batch_post(_api, authorization, content_type, accept, x_vault_a_p_i_client_i_d; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_annotations_batch_post(_api::DefaultApi, response_stream::Channel, authorization::String, content_type::String, accept::String, x_vault_a_p_i_client_i_d::String; _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_annotations_batch_post(_api, authorization, content_type, accept, x_vault_a_p_i_client_i_d; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_annotations_batch_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_annotations_batch_put(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_annotations_batch_put_DefaultApi, "/objects/documents/annotations/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Annotations

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_annotations_batch_put(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_annotations_batch_put(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_annotations_batch_put(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_annotations_batch_put(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_annotations_replies_batch_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_annotations_replies_batch_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_annotations_replies_batch_post_DefaultApi, "/objects/documents/annotations/replies/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Add Annotation Replies

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_annotations_replies_batch_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_annotations_replies_batch_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_annotations_replies_batch_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_annotations_replies_batch_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_attachments_batch_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_attachments_batch_delete(_api::DefaultApi; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_attachments_batch_delete_DefaultApi, "/objects/documents/attachments/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Multiple Document Attachments

Params:
- accept::String
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_attachments_batch_delete(_api::DefaultApi; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_attachments_batch_delete(_api; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_attachments_batch_delete(_api::DefaultApi, response_stream::Channel; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_attachments_batch_delete(_api; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_attachments_batch_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_attachments_batch_post(_api::DefaultApi; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_attachments_batch_post_DefaultApi, "/objects/documents/attachments/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Multiple Document Attachments

Params:
- accept::String
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_attachments_batch_post(_api::DefaultApi; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_attachments_batch_post(_api; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_attachments_batch_post(_api::DefaultApi, response_stream::Channel; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_attachments_batch_post(_api; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_attachments_batch_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_attachments_batch_put(_api::DefaultApi; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_attachments_batch_put_DefaultApi, "/objects/documents/attachments/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Multiple Document Attachment Descriptions

Params:
- accept::String
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_attachments_batch_put(_api::DefaultApi; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_attachments_batch_put(_api; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_attachments_batch_put(_api::DefaultApi, response_stream::Channel; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_attachments_batch_put(_api; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_batch_actions_fileextract_job_id_results_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_batch_actions_fileextract_job_id_results_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_batch_actions_fileextract_job_id_results_get_DefaultApi, "/objects/documents/batch/actions/fileextract/{job_id}/results", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Export Results

Params:
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_batch_actions_fileextract_job_id_results_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_actions_fileextract_job_id_results_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_batch_actions_fileextract_job_id_results_get(_api::DefaultApi, response_stream::Channel, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_actions_fileextract_job_id_results_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_batch_actions_fileextract_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_batch_actions_fileextract_post(_api::DefaultApi; source=nothing, renditions=nothing, allversions=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_batch_actions_fileextract_post_DefaultApi, "/objects/documents/batch/actions/fileextract", [])
    OpenAPI.Clients.set_param(_ctx.query, "source", source; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "renditions", renditions; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "allversions", allversions; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Export Documents

Params:
- source::Bool
- renditions::Bool
- allversions::Bool
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_batch_actions_fileextract_post(_api::DefaultApi; source=nothing, renditions=nothing, allversions=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_actions_fileextract_post(_api; source=source, renditions=renditions, allversions=allversions, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_batch_actions_fileextract_post(_api::DefaultApi, response_stream::Channel; source=nothing, renditions=nothing, allversions=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_actions_fileextract_post(_api; source=source, renditions=renditions, allversions=allversions, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_batch_actions_reclassify_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_batch_actions_reclassify_put(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_batch_actions_reclassify_put_DefaultApi, "/objects/documents/batch/actions/reclassify", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-MigrationMode", x_vault_a_p_i_migration_mode)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Reclassify Multiple Documents

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_migration_mode::Bool
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_batch_actions_reclassify_put(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_actions_reclassify_put(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_batch_actions_reclassify_put(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_actions_reclassify_put(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_batch_actions_rerender_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_batch_actions_rerender_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_batch_actions_rerender_post_DefaultApi, "/objects/documents/batch/actions/rerender", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Multiple Document Renditions

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_batch_actions_rerender_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_actions_rerender_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_batch_actions_rerender_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_actions_rerender_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_batch_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_batch_delete(_api::DefaultApi; id_param=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_batch_delete_DefaultApi, "/objects/documents/batch", [])
    OpenAPI.Clients.set_param(_ctx.query, "idParam", id_param; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Multiple Documents

Params:
- id_param::String
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_batch_delete(_api::DefaultApi; id_param=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_delete(_api; id_param=id_param, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_batch_delete(_api::DefaultApi, response_stream::Channel; id_param=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_delete(_api; id_param=id_param, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_batch_lock_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_batch_lock_delete(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_batch_lock_delete_DefaultApi, "/objects/documents/batch/lock", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Undo Collaborative Authoring Checkout

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_batch_lock_delete(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_lock_delete(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_batch_lock_delete(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_lock_delete(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_batch_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_batch_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_batch_post_DefaultApi, "/objects/documents/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-MigrationMode", x_vault_a_p_i_migration_mode)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Multiple Documents

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_migration_mode::Bool
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_batch_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_batch_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_batch_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_batch_put(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_batch_put_DefaultApi, "/objects/documents/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-MigrationMode", x_vault_a_p_i_migration_mode)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Multiple Documents

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_migration_mode::Bool
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_batch_put(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_put(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_batch_put(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_batch_put(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_anchors_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_anchors_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_anchors_get_DefaultApi, "/objects/documents/{doc_id}/anchors", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Anchor IDs

Params:
- doc_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_anchors_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_anchors_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_anchors_get(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_anchors_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_annotations_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_annotations_file_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_annotations_file_get_DefaultApi, "/objects/documents/{doc_id}/annotations/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Export Document Annotations to PDF

Params:
- doc_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_annotations_file_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_annotations_file_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_annotations_file_get(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_annotations_file_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_annotations_file_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_annotations_file_post(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_doc_id_annotations_file_post_DefaultApi, "/objects/documents/{doc_id}/annotations/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Import Document Annotations from PDF

Params:
- doc_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_annotations_file_post(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_annotations_file_post(_api, doc_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_annotations_file_post(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_annotations_file_post(_api, doc_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_attachment_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_attachment_id_delete(_api::DefaultApi, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_doc_id_attachments_attachment_id_delete_DefaultApi, "/objects/documents/{doc_id}/attachments/{attachment_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Single Document Attachment

Params:
- doc_id::String (required)
- attachment_id::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_attachment_id_delete(_api::DefaultApi, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_delete(_api, doc_id, attachment_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_attachment_id_delete(_api::DefaultApi, response_stream::Channel, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_delete(_api, doc_id, attachment_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_attachment_id_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_attachment_id_file_get(_api::DefaultApi, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_attachments_attachment_id_file_get_DefaultApi, "/objects/documents/{doc_id}/attachments/{attachment_id}/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Document Attachment

Params:
- doc_id::String (required)
- attachment_id::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_attachment_id_file_get(_api::DefaultApi, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_file_get(_api, doc_id, attachment_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_attachment_id_file_get(_api::DefaultApi, response_stream::Channel, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_file_get(_api, doc_id, attachment_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_attachment_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_attachment_id_get(_api::DefaultApi, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_attachments_attachment_id_get_DefaultApi, "/objects/documents/{doc_id}/attachments/{attachment_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Attachment Metadata

Params:
- doc_id::String (required)
- attachment_id::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_attachment_id_get(_api::DefaultApi, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_get(_api, doc_id, attachment_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_attachment_id_get(_api::DefaultApi, response_stream::Channel, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_get(_api, doc_id, attachment_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_attachment_id_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_attachment_id_put(_api::DefaultApi, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_doc_id_attachments_attachment_id_put_DefaultApi, "/objects/documents/{doc_id}/attachments/{attachment_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Document Attachment Description

Params:
- doc_id::String (required)
- attachment_id::String (required)
- accept::String
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_attachment_id_put(_api::DefaultApi, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_put(_api, doc_id, attachment_id; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_attachment_id_put(_api::DefaultApi, response_stream::Channel, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_put(_api, doc_id, attachment_id; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete(_api::DefaultApi, doc_id::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete_DefaultApi, "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_version", attachment_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Single Document Attachment Version

Params:
- doc_id::String (required)
- attachment_id::String (required)
- attachment_version::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete(_api::DefaultApi, doc_id::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete(_api, doc_id, attachment_id, attachment_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete(_api::DefaultApi, response_stream::Channel, doc_id::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete(_api, doc_id, attachment_id, attachment_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get(_api::DefaultApi, doc_id::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get_DefaultApi, "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_version", attachment_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Document Attachment Version

Params:
- doc_id::String (required)
- attachment_id::String (required)
- attachment_version::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get(_api::DefaultApi, doc_id::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get(_api, doc_id, attachment_id, attachment_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get(_api::DefaultApi, response_stream::Channel, doc_id::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get(_api, doc_id, attachment_id, attachment_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get(_api::DefaultApi, doc_id::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get_DefaultApi, "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_version", attachment_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Attachment Version Metadata

Params:
- doc_id::String (required)
- attachment_id::String (required)
- attachment_version::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get(_api::DefaultApi, doc_id::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get(_api, doc_id, attachment_id, attachment_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get(_api::DefaultApi, response_stream::Channel, doc_id::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get(_api, doc_id, attachment_id, attachment_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post(_api::DefaultApi, doc_id::String, attachment_id::String, attachment_version::String; restore=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post_DefaultApi, "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_version", attachment_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "restore", restore; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Restore Document Attachment Version

Params:
- doc_id::String (required)
- attachment_id::String (required)
- attachment_version::String (required)
- restore::Bool
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post(_api::DefaultApi, doc_id::String, attachment_id::String, attachment_version::String; restore=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post(_api, doc_id, attachment_id, attachment_version; restore=restore, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post(_api::DefaultApi, response_stream::Channel, doc_id::String, attachment_id::String, attachment_version::String; restore=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post(_api, doc_id, attachment_id, attachment_version; restore=restore, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_attachment_id_versions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_get(_api::DefaultApi, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_attachments_attachment_id_versions_get_DefaultApi, "/objects/documents/{doc_id}/attachments/{attachment_id}/versions", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Attachment Versions

Params:
- doc_id::String (required)
- attachment_id::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_attachment_id_versions_get(_api::DefaultApi, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_get(_api, doc_id, attachment_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_attachment_id_versions_get(_api::DefaultApi, response_stream::Channel, doc_id::String, attachment_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_attachment_id_versions_get(_api, doc_id, attachment_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_file_get(_api::DefaultApi, doc_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_attachments_file_get_DefaultApi, "/objects/documents/{doc_id}/attachments/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download All Document Attachments

Params:
- doc_id::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_file_get(_api::DefaultApi, doc_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_file_get(_api, doc_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_file_get(_api::DefaultApi, response_stream::Channel, doc_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_file_get(_api, doc_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_get(_api::DefaultApi, doc_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_attachments_get_DefaultApi, "/objects/documents/{doc_id}/attachments", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Attachments

Params:
- doc_id::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_get(_api::DefaultApi, doc_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_get(_api, doc_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_get(_api::DefaultApi, response_stream::Channel, doc_id::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_get(_api, doc_id; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_attachments_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_attachments_post(_api::DefaultApi, doc_id::String; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_doc_id_attachments_post_DefaultApi, "/objects/documents/{doc_id}/attachments", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Document Attachment

Params:
- doc_id::String (required)
- accept::String
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_attachments_post(_api::DefaultApi, doc_id::String; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_post(_api, doc_id; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_attachments_post(_api::DefaultApi, response_stream::Channel, doc_id::String; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_attachments_post(_api, doc_id; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_audittrail_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_audittrail_get(_api::DefaultApi, doc_id::String; start_date=nothing, end_date=nothing, format_result=nothing, limit=nothing, offset=nothing, events=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_audittrail_get_DefaultApi, "/objects/documents/{doc_id}/audittrail", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "start_date", start_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "end_date", end_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "format_result", format_result; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "offset", offset; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "events", events; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Complete Audit History for a Single Document

Params:
- doc_id::String (required)
- start_date::String
- end_date::String
- format_result::String
- limit::String
- offset::String
- events::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_audittrail_get(_api::DefaultApi, doc_id::String; start_date=nothing, end_date=nothing, format_result=nothing, limit=nothing, offset=nothing, events=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_audittrail_get(_api, doc_id; start_date=start_date, end_date=end_date, format_result=format_result, limit=limit, offset=offset, events=events, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_audittrail_get(_api::DefaultApi, response_stream::Channel, doc_id::String; start_date=nothing, end_date=nothing, format_result=nothing, limit=nothing, offset=nothing, events=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_audittrail_get(_api, doc_id; start_date=start_date, end_date=end_date, format_result=format_result, limit=limit, offset=offset, events=events, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_delete(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_doc_id_delete_DefaultApi, "/objects/documents/{doc_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Single Document

Params:
- doc_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_delete(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_delete(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_delete(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_delete(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_events_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_events_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_events_get_DefaultApi, "/objects/documents/{doc_id}/events", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Events

Params:
- doc_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_events_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_events_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_events_get(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_events_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_file_get(_api::DefaultApi, doc_id::String; lock_document=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_file_get_DefaultApi, "/objects/documents/{doc_id}/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "lockDocument", lock_document; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Document File

Params:
- doc_id::String (required)
- lock_document::Bool
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_file_get(_api::DefaultApi, doc_id::String; lock_document=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_file_get(_api, doc_id; lock_document=lock_document, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_file_get(_api::DefaultApi, response_stream::Channel, doc_id::String; lock_document=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_file_get(_api, doc_id; lock_document=lock_document, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_get_DefaultApi, "/objects/documents/{doc_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document

Params:
- doc_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_get(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_lock_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_lock_delete(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_doc_id_lock_delete_DefaultApi, "/objects/documents/{doc_id}/lock", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Document Lock

Params:
- doc_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_lock_delete(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_lock_delete(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_lock_delete(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_lock_delete(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_lock_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_lock_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_lock_get_DefaultApi, "/objects/documents/{doc_id}/lock", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Lock

Params:
- doc_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_lock_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_lock_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_lock_get(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_lock_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_lock_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_lock_post(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_doc_id_lock_post_DefaultApi, "/objects/documents/{doc_id}/lock", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Document Lock

Params:
- doc_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_lock_post(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_lock_post(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_lock_post(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_lock_post(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_major_version_minor_version_attachments_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_major_version_minor_version_attachments_file_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_major_version_minor_version_attachments_file_get_DefaultApi, "/objects/documents/{doc_id}/{major_version}/{minor_version}/attachments/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download All Document Version Attachments

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_major_version_minor_version_attachments_file_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_major_version_minor_version_attachments_file_get(_api, doc_id, major_version, minor_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_major_version_minor_version_attachments_file_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_major_version_minor_version_attachments_file_get(_api, doc_id, major_version, minor_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_post(_api::DefaultApi, doc_id::String; suppress_rendition=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_doc_id_post_DefaultApi, "/objects/documents/{doc_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "suppressRendition", suppress_rendition; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Single Document Version

Params:
- doc_id::String (required)
- suppress_rendition::String
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_post(_api::DefaultApi, doc_id::String; suppress_rendition=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_post(_api, doc_id; suppress_rendition=suppress_rendition, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_post(_api::DefaultApi, response_stream::Channel, doc_id::String; suppress_rendition=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_post(_api, doc_id; suppress_rendition=suppress_rendition, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_put(_api::DefaultApi, doc_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_doc_id_put_DefaultApi, "/objects/documents/{doc_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-MigrationMode", x_vault_a_p_i_migration_mode)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Single Document

Params:
- doc_id::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_migration_mode::Bool
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_put(_api::DefaultApi, doc_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_put(_api, doc_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_put(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_put(_api, doc_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_renditions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_renditions_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_renditions_get_DefaultApi, "/objects/documents/{doc_id}/renditions", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Renditions

Params:
- doc_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_renditions_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_renditions_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_renditions_get(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_renditions_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_renditions_rendition_type_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_renditions_rendition_type_delete(_api::DefaultApi, doc_id::String, rendition_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_doc_id_renditions_rendition_type_delete_DefaultApi, "/objects/documents/{doc_id}/renditions/{rendition_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "rendition_type", rendition_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Single Document Rendition

Params:
- doc_id::String (required)
- rendition_type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_renditions_rendition_type_delete(_api::DefaultApi, doc_id::String, rendition_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_renditions_rendition_type_delete(_api, doc_id, rendition_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_renditions_rendition_type_delete(_api::DefaultApi, response_stream::Channel, doc_id::String, rendition_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_renditions_rendition_type_delete(_api, doc_id, rendition_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_renditions_rendition_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_renditions_rendition_type_get(_api::DefaultApi, doc_id::String, rendition_type::String; steady_state=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_renditions_rendition_type_get_DefaultApi, "/objects/documents/{doc_id}/renditions/{rendition_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "rendition_type", rendition_type)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "steadyState", steady_state; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Document Rendition File

Params:
- doc_id::String (required)
- rendition_type::String (required)
- steady_state::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_renditions_rendition_type_get(_api::DefaultApi, doc_id::String, rendition_type::String; steady_state=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_renditions_rendition_type_get(_api, doc_id, rendition_type; steady_state=steady_state, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_renditions_rendition_type_get(_api::DefaultApi, response_stream::Channel, doc_id::String, rendition_type::String; steady_state=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_renditions_rendition_type_get(_api, doc_id, rendition_type; steady_state=steady_state, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_renditions_rendition_type_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_renditions_rendition_type_post(_api::DefaultApi, doc_id::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_doc_id_renditions_rendition_type_post_DefaultApi, "/objects/documents/{doc_id}/renditions/{rendition_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "rendition_type", rendition_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Add Single Document Rendition

Params:
- doc_id::String (required)
- rendition_type::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_renditions_rendition_type_post(_api::DefaultApi, doc_id::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_renditions_rendition_type_post(_api, doc_id, rendition_type; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_renditions_rendition_type_post(_api::DefaultApi, response_stream::Channel, doc_id::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_renditions_rendition_type_post(_api, doc_id, rendition_type; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_renditions_rendition_type_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_renditions_rendition_type_put(_api::DefaultApi, doc_id::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_doc_id_renditions_rendition_type_put_DefaultApi, "/objects/documents/{doc_id}/renditions/{rendition_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "rendition_type", rendition_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Replace Document Rendition

Params:
- doc_id::String (required)
- rendition_type::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_renditions_rendition_type_put(_api::DefaultApi, doc_id::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_renditions_rendition_type_put(_api, doc_id, rendition_type; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_renditions_rendition_type_put(_api::DefaultApi, response_stream::Channel, doc_id::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_renditions_rendition_type_put(_api, doc_id, rendition_type; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete(_api::DefaultApi, doc_id::String, role_name_and_user_or_group::String, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete_DefaultApi, "/objects/documents/{doc_id}/roles/{role_name_and_user_or_group}/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "role_name_and_user_or_group", role_name_and_user_or_group)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Remove Users & Groups from Roles on a Single Document

Params:
- doc_id::String (required)
- role_name_and_user_or_group::String (required)
- id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete(_api::DefaultApi, doc_id::String, role_name_and_user_or_group::String, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete(_api, doc_id, role_name_and_user_or_group, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete(_api::DefaultApi, response_stream::Channel, doc_id::String, role_name_and_user_or_group::String, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete(_api, doc_id, role_name_and_user_or_group, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_version_major_version_minor_version_attachments_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_version_major_version_minor_version_attachments_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_version_major_version_minor_version_attachments_get_DefaultApi, "/objects/documents/{doc_id}/version/{major_version}/{minor_version}/attachments", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Version Attachments

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_version_major_version_minor_version_attachments_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_version_major_version_minor_version_attachments_get(_api, doc_id, major_version, minor_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_version_major_version_minor_version_attachments_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_version_major_version_minor_version_attachments_get(_api, doc_id, major_version, minor_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_get_DefaultApi, "/objects/documents/{doc_id}/versions", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Versions

Params:
- doc_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_get(_api::DefaultApi, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_get(_api::DefaultApi, response_stream::Channel, doc_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_get(_api, doc_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, annotation_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/{annotation_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "annotation_id", annotation_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Read Annotations by ID

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- annotation_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, annotation_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get(_api, doc_id, major_version, minor_version, annotation_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String, annotation_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get(_api, doc_id, major_version, minor_version, annotation_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, annotation_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/{annotation_id}/replies", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "annotation_id", annotation_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Read Replies of Parent Annotation

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- annotation_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, annotation_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get(_api, doc_id, major_version, minor_version, annotation_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String, annotation_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get(_api, doc_id, major_version, minor_version, annotation_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Export Document Version Annotations to PDF

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Import Document Version Annotations from PDF

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_annotations_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; limit=nothing, offset=nothing, annotation_types=nothing, pagination_id=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_annotations_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "offset", offset; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "annotation_types", annotation_types; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pagination_id", pagination_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Read Annotations by Document Version and Type

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- limit::String
- offset::String
- annotation_types::String
- pagination_id::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_annotations_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; limit=nothing, offset=nothing, annotation_types=nothing, pagination_id=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_get(_api, doc_id, major_version, minor_version; limit=limit, offset=offset, annotation_types=annotation_types, pagination_id=pagination_id, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_annotations_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; limit=nothing, offset=nothing, annotation_types=nothing, pagination_id=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_annotations_get(_api, doc_id, major_version, minor_version; limit=limit, offset=offset, annotation_types=annotation_types, pagination_id=pagination_id, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/attachments/{attachment_id}/versions/{attachment_version}/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_version", attachment_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Document Version Attachment Version

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- attachment_id::String (required)
- attachment_version::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get(_api, doc_id, major_version, minor_version, attachment_id, attachment_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get(_api, doc_id, major_version, minor_version, attachment_id, attachment_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/attachments/{attachment_id}/versions/{attachment_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_version", attachment_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Version Attachment Versions

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- attachment_id::String (required)
- attachment_version::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get(_api, doc_id, major_version, minor_version, attachment_id, attachment_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String, attachment_id::String, attachment_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get(_api, doc_id, major_version, minor_version, attachment_id, attachment_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_delete(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_delete_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Single Document Version

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_delete(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_delete(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_delete(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_delete(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/doc-export-annotations-to-csv", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Version Notes as CSV

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_events_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_events_post(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_events_post_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/events", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Document Event

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_events_post(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_events_post(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_events_post(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_events_post(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/export-video-annotations", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Video Annotations

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_file_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_file_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Document Version File

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_file_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_file_get(_api, doc_id, major_version, minor_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_file_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_file_get(_api, doc_id, major_version, minor_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Version

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_put(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_put_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-MigrationMode", x_vault_a_p_i_migration_mode)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Document Version

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_migration_mode::Bool
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_put(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_put(_api, doc_id, major_version, minor_version; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_put(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_put(_api, doc_id, major_version, minor_version; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_relationships_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_relationships_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Relationships

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_relationships_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_relationships_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_relationships_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_post(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_relationships_post_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Single Document Relationship

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_relationships_post(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_post(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_relationships_post(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_post(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "relationship_id", relationship_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Single Document Relationship

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- relationship_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete(_api, doc_id, major_version, minor_version, relationship_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete(_api, doc_id, major_version, minor_version, relationship_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "relationship_id", relationship_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Relationship

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- relationship_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get(_api, doc_id, major_version, minor_version, relationship_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String, relationship_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get(_api, doc_id, major_version, minor_version, relationship_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_renditions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_renditions_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Version Renditions

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_renditions_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_renditions_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_get(_api, doc_id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "rendition_type", rendition_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Document Version Rendition

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- rendition_type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete(_api, doc_id, major_version, minor_version, rendition_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete(_api, doc_id, major_version, minor_version, rendition_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "rendition_type", rendition_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Document Version Rendition File

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- rendition_type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get(_api, doc_id, major_version, minor_version, rendition_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get(_api, doc_id, major_version, minor_version, rendition_type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "rendition_type", rendition_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Upload Document Version Rendition

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- rendition_type::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post(_api, doc_id, major_version, minor_version, rendition_type; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post(_api, doc_id, major_version, minor_version, rendition_type; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "rendition_type", rendition_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Replace Document Version Rendition

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- rendition_type::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put(_api, doc_id, major_version, minor_version, rendition_type; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String, rendition_type::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put(_api, doc_id, major_version, minor_version, rendition_type; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get_DefaultApi, "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/thumbnail", [])
    OpenAPI.Clients.set_param(_ctx.path, "doc_id", doc_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Document Version Thumbnail File

Params:
- doc_id::String (required)
- major_version::String (required)
- minor_version::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get(_api::DefaultApi, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get(_api, doc_id, major_version, minor_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get(_api::DefaultApi, response_stream::Channel, doc_id::String, major_version::String, minor_version::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get(_api, doc_id, major_version, minor_version; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_get(_api::DefaultApi; named_filter=nothing, scope=nothing, versionscope=nothing, search=nothing, limit=nothing, sort=nothing, start=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_get_DefaultApi, "/objects/documents", [])
    OpenAPI.Clients.set_param(_ctx.query, "named_filter", named_filter; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "scope", scope; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "versionscope", versionscope; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "search", search; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sort", sort; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Documents

Params:
- named_filter::String
- scope::String
- versionscope::String
- search::String
- limit::String
- sort::String
- start::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_get(_api::DefaultApi; named_filter=nothing, scope=nothing, versionscope=nothing, search=nothing, limit=nothing, sort=nothing, start=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_get(_api; named_filter=named_filter, scope=scope, versionscope=versionscope, search=search, limit=limit, sort=sort, start=start, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_get(_api::DefaultApi, response_stream::Channel; named_filter=nothing, scope=nothing, versionscope=nothing, search=nothing, limit=nothing, sort=nothing, start=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_get(_api; named_filter=named_filter, scope=scope, versionscope=versionscope, search=search, limit=limit, sort=sort, start=start, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_id_roles_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_id_roles_get(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_id_roles_get_DefaultApi, "/objects/documents/{id}/roles", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Document Roles

Params:
- id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_id_roles_get(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_roles_get(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_id_roles_get(_api::DefaultApi, response_stream::Channel, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_roles_get(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_id_roles_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_id_roles_post(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_id_roles_post_DefaultApi, "/objects/documents/{id}/roles", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Assign Users & Groups to Roles on a Single Document

Params:
- id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_id_roles_post(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_roles_post(_api, id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_id_roles_post(_api::DefaultApi, response_stream::Channel, id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_roles_post(_api, id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_id_roles_role_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_id_roles_role_name_get(_api::DefaultApi, id::String, role_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_id_roles_role_name_get_DefaultApi, "/objects/documents/{id}/roles/{role_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "role_name", role_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Role

Params:
- id::String (required)
- role_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_id_roles_role_name_get(_api::DefaultApi, id::String, role_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_roles_role_name_get(_api, id, role_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_id_roles_role_name_get(_api::DefaultApi, response_stream::Channel, id::String, role_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_roles_role_name_get(_api, id, role_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get(_api::DefaultApi, id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get_DefaultApi, "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document User Actions

Params:
- id::String (required)
- major_version::String (required)
- minor_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get(_api::DefaultApi, id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get(_api, id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get(_api::DefaultApi, response_stream::Channel, id::String, major_version::String, minor_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get(_api, id, major_version, minor_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(_api::DefaultApi, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get_DefaultApi, "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}/entry_requirements", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "name__v", name_v)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Entry Criteria

Params:
- id::String (required)
- major_version::String (required)
- minor_version::String (required)
- name_v::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(_api::DefaultApi, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(_api, id, major_version, minor_version, name_v; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(_api::DefaultApi, response_stream::Channel, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(_api, id, major_version, minor_version, name_v; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(_api::DefaultApi, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_put_DefaultApi, "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "major_version", major_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "minor_version", minor_version)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "name__v", name_v)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Document User Action

Params:
- id::String (required)
- major_version::String (required)
- minor_version::String (required)
- name_v::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(_api::DefaultApi, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(_api, id, major_version, minor_version, name_v; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(_api::DefaultApi, response_stream::Channel, id::String, major_version::String, minor_version::String, name_v::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(_api, id, major_version, minor_version, name_v; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_lifecycle_actions_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_lifecycle_actions_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_lifecycle_actions_post_DefaultApi, "/objects/documents/lifecycle_actions", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve User Actions on Multiple Documents

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_lifecycle_actions_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_lifecycle_actions_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_lifecycle_actions_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_lifecycle_actions_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_lifecycle_actions_user_action_name_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_lifecycle_actions_user_action_name_put(_api::DefaultApi, user_action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_lifecycle_actions_user_action_name_put_DefaultApi, "/objects/documents/lifecycle_actions/{user_action_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "user_action_name", user_action_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Bulk Document User Actions

Params:
- user_action_name::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_lifecycle_actions_user_action_name_put(_api::DefaultApi, user_action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_lifecycle_actions_user_action_name_put(_api, user_action_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_lifecycle_actions_user_action_name_put(_api::DefaultApi, response_stream::Channel, user_action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_lifecycle_actions_user_action_name_put(_api, user_action_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_post_DefaultApi, "/objects/documents", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-MigrationMode", x_vault_a_p_i_migration_mode)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Single Document

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_migration_mode::Bool
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_relationships_batch_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_relationships_batch_delete(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_relationships_batch_delete_DefaultApi, "/objects/documents/relationships/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Multiple Document Relationships

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_relationships_batch_delete(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_relationships_batch_delete(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_relationships_batch_delete(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_relationships_batch_delete(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_relationships_batch_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_relationships_batch_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_relationships_batch_post_DefaultApi, "/objects/documents/relationships/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Multiple Document Relationships

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_relationships_batch_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_relationships_batch_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_relationships_batch_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_relationships_batch_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_renditions_batch_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_renditions_batch_delete(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_renditions_batch_delete_DefaultApi, "/objects/documents/renditions/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Multiple Document Renditions

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_renditions_batch_delete(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_renditions_batch_delete(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_renditions_batch_delete(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_renditions_batch_delete(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_renditions_batch_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_renditions_batch_post(_api::DefaultApi; id_param=nothing, large_size_asset=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_renditions_batch_post_DefaultApi, "/objects/documents/renditions/batch", [])
    OpenAPI.Clients.set_param(_ctx.query, "idParam", id_param; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "largeSizeAsset", large_size_asset; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-MigrationMode", x_vault_a_p_i_migration_mode)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Add Multiple Document Renditions

Params:
- id_param::String
- large_size_asset::String
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_migration_mode::Bool
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_renditions_batch_post(_api::DefaultApi; id_param=nothing, large_size_asset=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_renditions_batch_post(_api; id_param=id_param, large_size_asset=large_size_asset, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_renditions_batch_post(_api::DefaultApi, response_stream::Channel; id_param=nothing, large_size_asset=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_renditions_batch_post(_api; id_param=id_param, large_size_asset=large_size_asset, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_roles_batch_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_roles_batch_delete(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_roles_batch_delete_DefaultApi, "/objects/documents/roles/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Remove Users and Groups from Roles on Multiple Documents & Binders

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_roles_batch_delete(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_roles_batch_delete(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_roles_batch_delete(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_roles_batch_delete(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_roles_batch_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_roles_batch_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_roles_batch_post_DefaultApi, "/objects/documents/roles/batch", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Assign Users & Groups to Roles on Multiple Documents & Binders

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_roles_batch_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_roles_batch_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_roles_batch_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_roles_batch_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_templates_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_templates_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_templates_get_DefaultApi, "/objects/documents/templates", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Template Collection

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_templates_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_templates_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_templates_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_templates_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_templates_post_DefaultApi, "/objects/documents/templates", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Single Document Template

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_templates_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_templates_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_templates_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_templates_put(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_templates_put_DefaultApi, "/objects/documents/templates", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Multiple Document Templates

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_templates_put(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_put(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_templates_put(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_put(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_templates_template_name_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_templates_template_name_delete(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_templates_template_name_delete_DefaultApi, "/objects/documents/templates/{template_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "template_name", template_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Basic Document Template

Params:
- template_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_templates_template_name_delete(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_template_name_delete(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_templates_template_name_delete(_api::DefaultApi, response_stream::Channel, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_template_name_delete(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_templates_template_name_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_templates_template_name_file_get(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_templates_template_name_file_get_DefaultApi, "/objects/documents/templates/{template_name}/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "template_name", template_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Document Template File

Params:
- template_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_templates_template_name_file_get(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_template_name_file_get(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_templates_template_name_file_get(_api::DefaultApi, response_stream::Channel, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_template_name_file_get(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_templates_template_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_templates_template_name_get(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_documents_templates_template_name_get_DefaultApi, "/objects/documents/templates/{template_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "template_name", template_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Document Template Attributes

Params:
- template_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_templates_template_name_get(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_template_name_get(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_templates_template_name_get(_api::DefaultApi, response_stream::Channel, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_template_name_get(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_templates_template_name_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_templates_template_name_put(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_documents_templates_template_name_put_DefaultApi, "/objects/documents/templates/{template_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "template_name", template_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Single Document Template

Params:
- template_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_templates_template_name_put(_api::DefaultApi, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_template_name_put(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_templates_template_name_put(_api::DefaultApi, response_stream::Channel, template_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_templates_template_name_put(_api, template_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_tokens_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_tokens_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_tokens_post_DefaultApi, "/objects/documents/tokens", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Document Tokens

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_tokens_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_tokens_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_tokens_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_tokens_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_versions_batch_actions_fileextract_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_versions_batch_actions_fileextract_post(_api::DefaultApi; source=nothing, renditions=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_versions_batch_actions_fileextract_post_DefaultApi, "/objects/documents/versions/batch/actions/fileextract", [])
    OpenAPI.Clients.set_param(_ctx.query, "source", source; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "renditions", renditions; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Export Document Versions

Params:
- source::Bool
- renditions::Bool
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_versions_batch_actions_fileextract_post(_api::DefaultApi; source=nothing, renditions=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_versions_batch_actions_fileextract_post(_api; source=source, renditions=renditions, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_versions_batch_actions_fileextract_post(_api::DefaultApi, response_stream::Channel; source=nothing, renditions=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_versions_batch_actions_fileextract_post(_api; source=source, renditions=renditions, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_versions_batch_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_versions_batch_delete(_api::DefaultApi; id_param=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_documents_versions_batch_delete_DefaultApi, "/objects/documents/versions/batch", [])
    OpenAPI.Clients.set_param(_ctx.query, "idParam", id_param; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Multiple Document Versions

Params:
- id_param::String
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_versions_batch_delete(_api::DefaultApi; id_param=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_versions_batch_delete(_api; id_param=id_param, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_versions_batch_delete(_api::DefaultApi, response_stream::Channel; id_param=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_versions_batch_delete(_api; id_param=id_param, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_documents_versions_batch_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_documents_versions_batch_post(_api::DefaultApi; id_param=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_documents_versions_batch_post_DefaultApi, "/objects/documents/versions/batch", [])
    OpenAPI.Clients.set_param(_ctx.query, "idParam", id_param; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-MigrationMode", x_vault_a_p_i_migration_mode)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Multiple Document Versions

Params:
- id_param::String
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_migration_mode::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_documents_versions_batch_post(_api::DefaultApi; id_param=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_versions_batch_post(_api; id_param=id_param, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_documents_versions_batch_post(_api::DefaultApi, response_stream::Channel; id_param=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_documents_versions_batch_post(_api; id_param=id_param, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_domain_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_domain_get(_api::DefaultApi; include_application=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_domain_get_DefaultApi, "/objects/domain", [])
    OpenAPI.Clients.set_param(_ctx.query, "include_application", include_application; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Domain Information

Params:
- include_application::Bool
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_domain_get(_api::DefaultApi; include_application=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_domain_get(_api; include_application=include_application, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_domain_get(_api::DefaultApi, response_stream::Channel; include_application=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_domain_get(_api; include_application=include_application, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_domains_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_domains_get(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_domains_get_DefaultApi, "/objects/domains", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Domains

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_domains_get(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_domains_get(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_domains_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_domains_get(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_edl_matched_documents_batch_actions_add_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_edl_matched_documents_batch_actions_add_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_edl_matched_documents_batch_actions_add_post_DefaultApi, "/objects/edl_matched_documents/batch/actions/add", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Add EDL Matched Documents

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_edl_matched_documents_batch_actions_add_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_edl_matched_documents_batch_actions_add_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_edl_matched_documents_batch_actions_add_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_edl_matched_documents_batch_actions_add_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_edl_matched_documents_batch_actions_remove_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_edl_matched_documents_batch_actions_remove_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_edl_matched_documents_batch_actions_remove_post_DefaultApi, "/objects/edl_matched_documents/batch/actions/remove", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Remove EDL Matched Documents

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_edl_matched_documents_batch_actions_remove_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_edl_matched_documents_batch_actions_remove_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_edl_matched_documents_batch_actions_remove_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_edl_matched_documents_batch_actions_remove_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_groups_auto_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_groups_auto_get(_api::DefaultApi; limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_groups_auto_get_DefaultApi, "/objects/groups/auto", [])
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "offset", offset; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Auto Managed Groups

Params:
- limit::String
- offset::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_groups_auto_get(_api::DefaultApi; limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_auto_get(_api; limit=limit, offset=offset, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_groups_auto_get(_api::DefaultApi, response_stream::Channel; limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_auto_get(_api; limit=limit, offset=offset, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_groups_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_groups_get(_api::DefaultApi; include_implied=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_groups_get_DefaultApi, "/objects/groups", [])
    OpenAPI.Clients.set_param(_ctx.query, "includeImplied", include_implied; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Groups

Params:
- include_implied::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_groups_get(_api::DefaultApi; include_implied=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_get(_api; include_implied=include_implied, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_groups_get(_api::DefaultApi, response_stream::Channel; include_implied=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_get(_api; include_implied=include_implied, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_groups_group_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_groups_group_id_delete(_api::DefaultApi, group_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_groups_group_id_delete_DefaultApi, "/objects/groups/{group_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "group_id", group_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Group

Params:
- group_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_groups_group_id_delete(_api::DefaultApi, group_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_group_id_delete(_api, group_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_groups_group_id_delete(_api::DefaultApi, response_stream::Channel, group_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_group_id_delete(_api, group_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_groups_group_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_groups_group_id_get(_api::DefaultApi, group_id::String; include_implied=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_groups_group_id_get_DefaultApi, "/objects/groups/{group_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "group_id", group_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "includeImplied", include_implied; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Group

Params:
- group_id::String (required)
- include_implied::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_groups_group_id_get(_api::DefaultApi, group_id::String; include_implied=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_group_id_get(_api, group_id; include_implied=include_implied, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_groups_group_id_get(_api::DefaultApi, response_stream::Channel, group_id::String; include_implied=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_group_id_get(_api, group_id; include_implied=include_implied, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_groups_group_id_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_groups_group_id_put(_api::DefaultApi, group_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_groups_group_id_put_DefaultApi, "/objects/groups/{group_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "group_id", group_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Group

Params:
- group_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_groups_group_id_put(_api::DefaultApi, group_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_group_id_put(_api, group_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_groups_group_id_put(_api::DefaultApi, response_stream::Channel, group_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_group_id_put(_api, group_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_groups_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_groups_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_groups_post_DefaultApi, "/objects/groups", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Group 

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_groups_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_groups_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_groups_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_licenses_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_licenses_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_licenses_get_DefaultApi, "/objects/licenses", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Application License Usage

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_licenses_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_licenses_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_licenses_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_licenses_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_actions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_actions_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_objectworkflows_actions_get_DefaultApi, "/objects/objectworkflows/actions", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Multi-Record Workflows

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_actions_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_actions_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_actions_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_actions_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_actions_workflow_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_actions_workflow_name_get(_api::DefaultApi, workflow_name::String; authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_objectworkflows_actions_workflow_name_get_DefaultApi, "/objects/objectworkflows/actions/{workflow_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "workflow_name", workflow_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Multi-Record Workflow Details

Params:
- workflow_name::String (required)
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_actions_workflow_name_get(_api::DefaultApi, workflow_name::String; authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_actions_workflow_name_get(_api, workflow_name; authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_actions_workflow_name_get(_api::DefaultApi, response_stream::Channel, workflow_name::String; authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_actions_workflow_name_get(_api, workflow_name; authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_actions_workflow_name_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_actions_workflow_name_post(_api::DefaultApi, workflow_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_actions_workflow_name_post_DefaultApi, "/objects/objectworkflows/actions/{workflow_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "workflow_name", workflow_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Multi-Record Workflow

Params:
- workflow_name::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_actions_workflow_name_post(_api::DefaultApi, workflow_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_actions_workflow_name_post(_api, workflow_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_actions_workflow_name_post(_api::DefaultApi, response_stream::Channel, workflow_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_actions_workflow_name_post(_api, workflow_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_get(_api::DefaultApi; object_v=nothing, record_id_v=nothing, participant=nothing, status_v=nothing, offset=nothing, page_size=nothing, loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_objectworkflows_get_DefaultApi, "/objects/objectworkflows", [])
    OpenAPI.Clients.set_param(_ctx.query, "object__v", object_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "record_id__v", record_id_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "participant", participant; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "status__v", status_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "offset", offset; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "page_size", page_size; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Workflows

Params:
- object_v::String
- record_id_v::String
- participant::String
- status_v::String
- offset::String
- page_size::String
- loc::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_get(_api::DefaultApi; object_v=nothing, record_id_v=nothing, participant=nothing, status_v=nothing, offset=nothing, page_size=nothing, loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_get(_api; object_v=object_v, record_id_v=record_id_v, participant=participant, status_v=status_v, offset=offset, page_size=page_size, loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_get(_api::DefaultApi, response_stream::Channel; object_v=nothing, record_id_v=nothing, participant=nothing, status_v=nothing, offset=nothing, page_size=nothing, loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_get(_api; object_v=object_v, record_id_v=record_id_v, participant=participant, status_v=status_v, offset=offset, page_size=page_size, loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_get(_api::DefaultApi; object_v=nothing, record_id_v=nothing, assignee_v=nothing, status_v=nothing, offset=nothing, page_size=nothing, loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_objectworkflows_tasks_get_DefaultApi, "/objects/objectworkflows/tasks", [])
    OpenAPI.Clients.set_param(_ctx.query, "object__v", object_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "record_id__v", record_id_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "assignee__v", assignee_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "status__v", status_v; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "offset", offset; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "page_size", page_size; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Workflow Tasks

Params:
- object_v::String
- record_id_v::String
- assignee_v::String
- status_v::String
- offset::String
- page_size::String
- loc::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_get(_api::DefaultApi; object_v=nothing, record_id_v=nothing, assignee_v=nothing, status_v=nothing, offset=nothing, page_size=nothing, loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_get(_api; object_v=object_v, record_id_v=record_id_v, assignee_v=assignee_v, status_v=status_v, offset=offset, page_size=page_size, loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_get(_api::DefaultApi, response_stream::Channel; object_v=nothing, record_id_v=nothing, assignee_v=nothing, status_v=nothing, offset=nothing, page_size=nothing, loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_get(_api; object_v=object_v, record_id_v=record_id_v, assignee_v=assignee_v, status_v=status_v, offset=offset, page_size=page_size, loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_accept_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_accept_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_tasks_task_id_actions_accept_post_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions/accept", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Accept Single Record Workflow Task

Params:
- task_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_accept_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_accept_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_accept_post(_api::DefaultApi, response_stream::Channel, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_accept_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_cancel_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_cancel_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_tasks_task_id_actions_cancel_post_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions/cancel", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Cancel Workflow Task

Params:
- task_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_cancel_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_cancel_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_cancel_post(_api::DefaultApi, response_stream::Channel, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_cancel_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_complete_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_complete_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_tasks_task_id_actions_complete_post_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions/complete", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Complete Single Record Workflow Task

Params:
- task_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_complete_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_complete_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_complete_post(_api::DefaultApi, response_stream::Channel, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_complete_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_get(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_objectworkflows_tasks_task_id_actions_get_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Workflow Task Actions

Params:
- task_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_get(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_get(_api, task_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_get(_api::DefaultApi, response_stream::Channel, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_get(_api, task_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_mdwaccept_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwaccept_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_tasks_task_id_actions_mdwaccept_post_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions/mdwaccept", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Accept Multi-item Workflow Task

Params:
- task_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_mdwaccept_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwaccept_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_mdwaccept_post(_api::DefaultApi, response_stream::Channel, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwaccept_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions/mdwcomplete", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Complete Multi-item Workflow Task

Params:
- task_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post(_api::DefaultApi, response_stream::Channel, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions/mdwmanagecontent", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Manage Multi-Item Workflow Content

Params:
- task_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post(_api::DefaultApi, response_stream::Channel, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_mdwreassign_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwreassign_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_tasks_task_id_actions_mdwreassign_post_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions/mdwreassign", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Reassign Multi-item Workflow Task

Params:
- task_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_mdwreassign_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwreassign_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_mdwreassign_post(_api::DefaultApi, response_stream::Channel, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_mdwreassign_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_reassign_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_reassign_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_tasks_task_id_actions_reassign_post_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions/reassign", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Reassign Single Record Workflow Task

Params:
- task_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_reassign_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_reassign_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_reassign_post(_api::DefaultApi, response_stream::Channel, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_reassign_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_task_action_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_task_action_get(_api::DefaultApi, task_id::String, task_action::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_objectworkflows_tasks_task_id_actions_task_action_get_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions/{task_action}", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "task_action", task_action)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Workflow Task Action Details

Params:
- task_id::String (required)
- task_action::String (required)
- loc::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_task_action_get(_api::DefaultApi, task_id::String, task_action::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_task_action_get(_api, task_id, task_action; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_task_action_get(_api::DefaultApi, response_stream::Channel, task_id::String, task_action::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_task_action_get(_api, task_id, task_action; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_undoaccept_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_undoaccept_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_tasks_task_id_actions_undoaccept_post_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions/undoaccept", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Undo Workflow Task Acceptance

Params:
- task_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_undoaccept_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_undoaccept_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_undoaccept_post(_api::DefaultApi, response_stream::Channel, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_undoaccept_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_actions_updateduedate_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_actions_updateduedate_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_tasks_task_id_actions_updateduedate_post_DefaultApi, "/objects/objectworkflows/tasks/{task_id}/actions/updateduedate", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Workflow Task Due Date

Params:
- task_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_actions_updateduedate_post(_api::DefaultApi, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_updateduedate_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_actions_updateduedate_post(_api::DefaultApi, response_stream::Channel, task_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_actions_updateduedate_post(_api, task_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_tasks_task_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_tasks_task_id_get(_api::DefaultApi, task_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_objectworkflows_tasks_task_id_get_DefaultApi, "/objects/objectworkflows/tasks/{task_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Workflow Task Details

Params:
- task_id::String (required)
- loc::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_tasks_task_id_get(_api::DefaultApi, task_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_get(_api, task_id; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_tasks_task_id_get(_api::DefaultApi, response_stream::Channel, task_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_tasks_task_id_get(_api, task_id; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_workflow_id_actions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_workflow_id_actions_get(_api::DefaultApi, workflow_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_objectworkflows_workflow_id_actions_get_DefaultApi, "/objects/objectworkflows/{workflow_id}/actions", [])
    OpenAPI.Clients.set_param(_ctx.path, "workflow_id", workflow_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Workflow Actions

Params:
- workflow_id::String (required)
- loc::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_workflow_id_actions_get(_api::DefaultApi, workflow_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_workflow_id_actions_get(_api, workflow_id; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_workflow_id_actions_get(_api::DefaultApi, response_stream::Channel, workflow_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_workflow_id_actions_get(_api, workflow_id; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_workflow_id_actions_workflow_action_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_workflow_id_actions_workflow_action_get(_api::DefaultApi, workflow_id::String, workflow_action::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_objectworkflows_workflow_id_actions_workflow_action_get_DefaultApi, "/objects/objectworkflows/{workflow_id}/actions/{workflow_action}", [])
    OpenAPI.Clients.set_param(_ctx.path, "workflow_id", workflow_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "workflow_action", workflow_action)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Workflow Action Details

Params:
- workflow_id::String (required)
- workflow_action::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_workflow_id_actions_workflow_action_get(_api::DefaultApi, workflow_id::String, workflow_action::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_workflow_id_actions_workflow_action_get(_api, workflow_id, workflow_action; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_workflow_id_actions_workflow_action_get(_api::DefaultApi, response_stream::Channel, workflow_id::String, workflow_action::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_workflow_id_actions_workflow_action_get(_api, workflow_id, workflow_action; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_workflow_id_actions_workflow_action_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_workflow_id_actions_workflow_action_post(_api::DefaultApi, workflow_id::String, workflow_action::String; documents_sys=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_objectworkflows_workflow_id_actions_workflow_action_post_DefaultApi, "/objects/objectworkflows/{workflow_id}/actions/{workflow_action}", [])
    OpenAPI.Clients.set_param(_ctx.path, "workflow_id", workflow_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "workflow_action", workflow_action)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "documents__sys", documents_sys; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Workflow Action

Params:
- workflow_id::String (required)
- workflow_action::String (required)
- documents_sys::String
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_workflow_id_actions_workflow_action_post(_api::DefaultApi, workflow_id::String, workflow_action::String; documents_sys=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_workflow_id_actions_workflow_action_post(_api, workflow_id, workflow_action; documents_sys=documents_sys, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_workflow_id_actions_workflow_action_post(_api::DefaultApi, response_stream::Channel, workflow_id::String, workflow_action::String; documents_sys=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_workflow_id_actions_workflow_action_post(_api, workflow_id, workflow_action; documents_sys=documents_sys, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_objectworkflows_workflow_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_objectworkflows_workflow_id_get(_api::DefaultApi, workflow_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_objectworkflows_workflow_id_get_DefaultApi, "/objects/objectworkflows/{workflow_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "workflow_id", workflow_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Workflow Details

Params:
- workflow_id::String (required)
- loc::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_objectworkflows_workflow_id_get(_api::DefaultApi, workflow_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_workflow_id_get(_api, workflow_id; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_objectworkflows_workflow_id_get(_api::DefaultApi, response_stream::Channel, workflow_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_objectworkflows_workflow_id_get(_api, workflow_id; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_picklists_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_picklists_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_picklists_get_DefaultApi, "/objects/picklists", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Picklists

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_picklists_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_picklists_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_picklists_picklist_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_picklists_picklist_name_get(_api::DefaultApi, picklist_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_picklists_picklist_name_get_DefaultApi, "/objects/picklists/{picklist_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "picklist_name", picklist_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Picklist Values

Params:
- picklist_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_picklists_picklist_name_get(_api::DefaultApi, picklist_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_picklist_name_get(_api, picklist_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_picklists_picklist_name_get(_api::DefaultApi, response_stream::Channel, picklist_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_picklist_name_get(_api, picklist_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_picklists_picklist_name_picklist_value_name_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_picklists_picklist_name_picklist_value_name_delete(_api::DefaultApi, picklist_name::String, picklist_value_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_picklists_picklist_name_picklist_value_name_delete_DefaultApi, "/objects/picklists/{picklist_name}/{picklist_value_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "picklist_name", picklist_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "picklist_value_name", picklist_value_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Inactivate Picklist Value

Params:
- picklist_name::String (required)
- picklist_value_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_picklists_picklist_name_picklist_value_name_delete(_api::DefaultApi, picklist_name::String, picklist_value_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_picklist_name_picklist_value_name_delete(_api, picklist_name, picklist_value_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_picklists_picklist_name_picklist_value_name_delete(_api::DefaultApi, response_stream::Channel, picklist_name::String, picklist_value_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_picklist_name_picklist_value_name_delete(_api, picklist_name, picklist_value_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_picklists_picklist_name_picklist_value_name_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_picklists_picklist_name_picklist_value_name_put(_api::DefaultApi, picklist_name::String, picklist_value_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_picklists_picklist_name_picklist_value_name_put_DefaultApi, "/objects/picklists/{picklist_name}/{picklist_value_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "picklist_name", picklist_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "picklist_value_name", picklist_value_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Picklist Value

Params:
- picklist_name::String (required)
- picklist_value_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_picklists_picklist_name_picklist_value_name_put(_api::DefaultApi, picklist_name::String, picklist_value_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_picklist_name_picklist_value_name_put(_api, picklist_name, picklist_value_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_picklists_picklist_name_picklist_value_name_put(_api::DefaultApi, response_stream::Channel, picklist_name::String, picklist_value_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_picklist_name_picklist_value_name_put(_api, picklist_name, picklist_value_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_picklists_picklist_name_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_picklists_picklist_name_post(_api::DefaultApi, picklist_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_picklists_picklist_name_post_DefaultApi, "/objects/picklists/{picklist_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "picklist_name", picklist_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Picklist Values

Params:
- picklist_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_picklists_picklist_name_post(_api::DefaultApi, picklist_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_picklist_name_post(_api, picklist_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_picklists_picklist_name_post(_api::DefaultApi, response_stream::Channel, picklist_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_picklist_name_post(_api, picklist_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_picklists_picklist_name_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_picklists_picklist_name_put(_api::DefaultApi, picklist_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_picklists_picklist_name_put_DefaultApi, "/objects/picklists/{picklist_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "picklist_name", picklist_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Picklist Value Label

Params:
- picklist_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_picklists_picklist_name_put(_api::DefaultApi, picklist_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_picklist_name_put(_api, picklist_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_picklists_picklist_name_put(_api::DefaultApi, response_stream::Channel, picklist_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_picklists_picklist_name_put(_api, picklist_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_actions_buildproduction_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_actions_buildproduction_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_sandbox_actions_buildproduction_post_DefaultApi, "/objects/sandbox/actions/buildproduction", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Build Production Vault

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_actions_buildproduction_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_actions_buildproduction_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_actions_buildproduction_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_actions_buildproduction_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_actions_promoteproduction_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_actions_promoteproduction_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_sandbox_actions_promoteproduction_post_DefaultApi, "/objects/sandbox/actions/promoteproduction", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Promote to Production

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_actions_promoteproduction_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_actions_promoteproduction_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_actions_promoteproduction_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_actions_promoteproduction_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_actions_recheckusage_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_actions_recheckusage_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_sandbox_actions_recheckusage_post_DefaultApi, "/objects/sandbox/actions/recheckusage", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Recheck Sandbox Usage Limit

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_actions_recheckusage_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_actions_recheckusage_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_actions_recheckusage_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_actions_recheckusage_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_batch_changesize_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_batch_changesize_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_sandbox_batch_changesize_post_DefaultApi, "/objects/sandbox/batch/changesize", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Change Sandbox Size

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_batch_changesize_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_batch_changesize_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_batch_changesize_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_batch_changesize_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_entitlements_set_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_entitlements_set_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_sandbox_entitlements_set_post_DefaultApi, "/objects/sandbox/entitlements/set", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Set Sandbox Entitlements

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_entitlements_set_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_entitlements_set_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_entitlements_set_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_entitlements_set_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_sandbox_get_DefaultApi, "/objects/sandbox", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Sandboxes

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_name_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_name_delete(_api::DefaultApi, name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_sandbox_name_delete_DefaultApi, "/objects/sandbox/{name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Sandbox

Params:
- name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_name_delete(_api::DefaultApi, name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_name_delete(_api, name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_name_delete(_api::DefaultApi, response_stream::Channel, name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_name_delete(_api, name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_sandbox_post_DefaultApi, "/objects/sandbox", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create or Refresh Sandbox

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_snapshot_api_name_actions_update_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_snapshot_api_name_actions_update_post(_api::DefaultApi, api_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_sandbox_snapshot_api_name_actions_update_post_DefaultApi, "/objects/sandbox/snapshot/{api_name}/actions/update", [])
    OpenAPI.Clients.set_param(_ctx.path, "api_name", api_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Sandbox Snapshot

Params:
- api_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_snapshot_api_name_actions_update_post(_api::DefaultApi, api_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_snapshot_api_name_actions_update_post(_api, api_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_snapshot_api_name_actions_update_post(_api::DefaultApi, response_stream::Channel, api_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_snapshot_api_name_actions_update_post(_api, api_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_snapshot_api_name_actions_upgrade_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_snapshot_api_name_actions_upgrade_post(_api::DefaultApi, api_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_sandbox_snapshot_api_name_actions_upgrade_post_DefaultApi, "/objects/sandbox/snapshot/{api_name}/actions/upgrade", [])
    OpenAPI.Clients.set_param(_ctx.path, "api_name", api_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Upgrade Sandbox Snapshot

Params:
- api_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_snapshot_api_name_actions_upgrade_post(_api::DefaultApi, api_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_snapshot_api_name_actions_upgrade_post(_api, api_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_snapshot_api_name_actions_upgrade_post(_api::DefaultApi, response_stream::Channel, api_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_snapshot_api_name_actions_upgrade_post(_api, api_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_snapshot_api_name_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_snapshot_api_name_delete(_api::DefaultApi, api_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_sandbox_snapshot_api_name_delete_DefaultApi, "/objects/sandbox/snapshot/{api_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "api_name", api_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Sandbox Snapshot

Params:
- api_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_snapshot_api_name_delete(_api::DefaultApi, api_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_snapshot_api_name_delete(_api, api_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_snapshot_api_name_delete(_api::DefaultApi, response_stream::Channel, api_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_snapshot_api_name_delete(_api, api_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_snapshot_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_snapshot_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_sandbox_snapshot_get_DefaultApi, "/objects/sandbox/snapshot", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Sandbox Snapshots

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_snapshot_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_snapshot_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_snapshot_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_snapshot_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_snapshot_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_snapshot_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_sandbox_snapshot_post_DefaultApi, "/objects/sandbox/snapshot", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Sandbox Snapshot

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_snapshot_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_snapshot_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_snapshot_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_snapshot_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_vault_id_actions_refresh_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_vault_id_actions_refresh_post(_api::DefaultApi, vault_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_sandbox_vault_id_actions_refresh_post_DefaultApi, "/objects/sandbox/{vault_id}/actions/refresh", [])
    OpenAPI.Clients.set_param(_ctx.path, "vault_id", vault_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Refresh Sandbox from Snapshot

Params:
- vault_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_vault_id_actions_refresh_post(_api::DefaultApi, vault_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_vault_id_actions_refresh_post(_api, vault_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_vault_id_actions_refresh_post(_api::DefaultApi, response_stream::Channel, vault_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_vault_id_actions_refresh_post(_api, vault_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_sandbox_vault_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_sandbox_vault_id_get(_api::DefaultApi, vault_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_sandbox_vault_id_get_DefaultApi, "/objects/sandbox/{vault_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "vault_id", vault_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Sandbox Details by ID

Params:
- vault_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_sandbox_vault_id_get(_api::DefaultApi, vault_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_vault_id_get(_api, vault_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_sandbox_vault_id_get(_api::DefaultApi, response_stream::Channel, vault_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_sandbox_vault_id_get(_api, vault_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_securitypolicies_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_securitypolicies_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_securitypolicies_get_DefaultApi, "/objects/securitypolicies", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Security Policies

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_securitypolicies_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_securitypolicies_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_securitypolicies_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_securitypolicies_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_securitypolicies_security_policy_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_securitypolicies_security_policy_name_get(_api::DefaultApi, security_policy_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_securitypolicies_security_policy_name_get_DefaultApi, "/objects/securitypolicies/{security_policy_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "security_policy_name", security_policy_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Security Policy

Params:
- security_policy_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_securitypolicies_security_policy_name_get(_api::DefaultApi, security_policy_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_securitypolicies_security_policy_name_get(_api, security_policy_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_securitypolicies_security_policy_name_get(_api::DefaultApi, response_stream::Channel, security_policy_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_securitypolicies_security_policy_name_get(_api, security_policy_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_get(_api::DefaultApi; vaults=nothing, exclude_vault_membership=nothing, exclude_app_licensing=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_users_get_DefaultApi, "/objects/users/", [])
    OpenAPI.Clients.set_param(_ctx.query, "vaults", vaults; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude_vault_membership", exclude_vault_membership; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude_app_licensing", exclude_app_licensing; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Users

Params:
- vaults::String
- exclude_vault_membership::String
- exclude_app_licensing::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_get(_api::DefaultApi; vaults=nothing, exclude_vault_membership=nothing, exclude_app_licensing=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_get(_api; vaults=vaults, exclude_vault_membership=exclude_vault_membership, exclude_app_licensing=exclude_app_licensing, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_get(_api::DefaultApi, response_stream::Channel; vaults=nothing, exclude_vault_membership=nothing, exclude_app_licensing=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_get(_api; vaults=vaults, exclude_vault_membership=exclude_vault_membership, exclude_app_licensing=exclude_app_licensing, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_id_get(_api::DefaultApi, id::String; exclude_vault_membership=nothing, exclude_app_licensing=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_users_id_get_DefaultApi, "/objects/users/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude_vault_membership", exclude_vault_membership; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude_app_licensing", exclude_app_licensing; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve User

Params:
- id::String (required)
- exclude_vault_membership::String
- exclude_app_licensing::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_id_get(_api::DefaultApi, id::String; exclude_vault_membership=nothing, exclude_app_licensing=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_id_get(_api, id; exclude_vault_membership=exclude_vault_membership, exclude_app_licensing=exclude_app_licensing, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_id_get(_api::DefaultApi, response_stream::Channel, id::String; exclude_vault_membership=nothing, exclude_app_licensing=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_id_get(_api, id; exclude_vault_membership=exclude_vault_membership, exclude_app_licensing=exclude_app_licensing, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_id_permissions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_id_permissions_get(_api::DefaultApi, id::String; filter=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_users_id_permissions_get_DefaultApi, "/objects/users/{id}/permissions", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "filter", filter; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve User Permissions

Params:
- id::String (required)
- filter::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_id_permissions_get(_api::DefaultApi, id::String; filter=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_id_permissions_get(_api, id; filter=filter, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_id_permissions_get(_api::DefaultApi, response_stream::Channel, id::String; filter=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_id_permissions_get(_api, id; filter=filter, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_id_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_id_put(_api::DefaultApi, id::String; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_users_id_put_DefaultApi, "/objects/users/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Single User

Params:
- id::String (required)
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_id_put(_api::DefaultApi, id::String; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_id_put(_api, id; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_id_put(_api::DefaultApi, response_stream::Channel, id::String; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_id_put(_api, id; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_me_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_me_get(_api::DefaultApi; exclude_vault_membership=nothing, exclude_app_licensing=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_users_me_get_DefaultApi, "/objects/users/me", [])
    OpenAPI.Clients.set_param(_ctx.query, "exclude_vault_membership", exclude_vault_membership; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude_app_licensing", exclude_app_licensing; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Validate Session User

Params:
- exclude_vault_membership::String
- exclude_app_licensing::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_me_get(_api::DefaultApi; exclude_vault_membership=nothing, exclude_app_licensing=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_me_get(_api; exclude_vault_membership=exclude_vault_membership, exclude_app_licensing=exclude_app_licensing, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_me_get(_api::DefaultApi, response_stream::Channel; exclude_vault_membership=nothing, exclude_app_licensing=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_me_get(_api; exclude_vault_membership=exclude_vault_membership, exclude_app_licensing=exclude_app_licensing, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_me_password_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_me_password_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_users_me_password_post_DefaultApi, "/objects/users/me/password", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Change My Password

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_me_password_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_me_password_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_me_password_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_me_password_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_me_permissions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_me_permissions_get(_api::DefaultApi; filter=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_objects_users_me_permissions_get_DefaultApi, "/objects/users/me/permissions", [])
    OpenAPI.Clients.set_param(_ctx.query, "filter", filter; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve My User Permissions

Params:
- filter::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_me_permissions_get(_api::DefaultApi; filter=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_me_permissions_get(_api; filter=filter, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_me_permissions_get(_api::DefaultApi, response_stream::Channel; filter=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_me_permissions_get(_api; filter=filter, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_me_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_me_put(_api::DefaultApi; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_users_me_put_DefaultApi, "/objects/users/me", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update My User

Params:
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_me_put(_api::DefaultApi; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_me_put(_api; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_me_put(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_me_put(_api; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_users_post_DefaultApi, "/objects/users", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Single User

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_put(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_users_put_DefaultApi, "/objects/users", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Multiple Users

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_put(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_put(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_put(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_put(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_user_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_user_id_delete(_api::DefaultApi, user_id::String; domain=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_objects_users_user_id_delete_DefaultApi, "/objects/users/{user_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "user_id", user_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "domain", domain; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Disable User

Params:
- user_id::String (required)
- domain::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_user_id_delete(_api::DefaultApi, user_id::String; domain=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_user_id_delete(_api, user_id; domain=domain, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_user_id_delete(_api::DefaultApi, response_stream::Channel, user_id::String; domain=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_user_id_delete(_api, user_id; domain=domain, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_users_user_id_vault_membership_vault_id_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_users_user_id_vault_membership_vault_id_put(_api::DefaultApi, user_id::String, vault_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_objects_users_user_id_vault_membership_vault_id_put_DefaultApi, "/objects/users/{user_id}/vault_membership/{vault_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "user_id", user_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "vault_id", vault_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Vault Membership

Params:
- user_id::String (required)
- vault_id::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_users_user_id_vault_membership_vault_id_put(_api::DefaultApi, user_id::String, vault_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_user_id_vault_membership_vault_id_put(_api, user_id, vault_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_users_user_id_vault_membership_vault_id_put(_api::DefaultApi, response_stream::Channel, user_id::String, vault_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_users_user_id_vault_membership_vault_id_put(_api, user_id, vault_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_vault_actions_compare_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_vault_actions_compare_post(_api::DefaultApi; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_vault_actions_compare_post_DefaultApi, "/objects/vault/actions/compare", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Vault Compare

Params:
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_vault_actions_compare_post(_api::DefaultApi; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_vault_actions_compare_post(_api; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_vault_actions_compare_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_vault_actions_compare_post(_api; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_objects_vault_actions_configreport_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_objects_vault_actions_configreport_post(_api::DefaultApi; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_objects_vault_actions_configreport_post_DefaultApi, "/objects/vault/actions/configreport", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Vault Configuration Report

Params:
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function objects_vault_actions_configreport_post(_api::DefaultApi; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_vault_actions_configreport_post(_api; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function objects_vault_actions_configreport_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_objects_vault_actions_configreport_post(_api; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_query_components_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_query_components_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_query_components_post_DefaultApi, "/query/components", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Component Definition Query

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function query_components_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_query_components_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function query_components_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_query_components_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_query_next_page_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_query_next_page_post(_api::DefaultApi, next_page::String; authorization=nothing, accept=nothing, x_vault_a_p_i_describe_query=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_query_next_page_post_DefaultApi, "/query/{next_page}", [])
    OpenAPI.Clients.set_param(_ctx.path, "next_page", next_page)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-DescribeQuery", x_vault_a_p_i_describe_query)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Next Page URL

Params:
- next_page::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_describe_query::Bool
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function query_next_page_post(_api::DefaultApi, next_page::String; authorization=nothing, accept=nothing, x_vault_a_p_i_describe_query=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_query_next_page_post(_api, next_page; authorization=authorization, accept=accept, x_vault_a_p_i_describe_query=x_vault_a_p_i_describe_query, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function query_next_page_post(_api::DefaultApi, response_stream::Channel, next_page::String; authorization=nothing, accept=nothing, x_vault_a_p_i_describe_query=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_query_next_page_post(_api, next_page; authorization=authorization, accept=accept, x_vault_a_p_i_describe_query=x_vault_a_p_i_describe_query, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_query_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_query_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_describe_query=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_query_post_DefaultApi, "/query", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-DescribeQuery", x_vault_a_p_i_describe_query)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Submitting a Query

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_describe_query::Bool
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function query_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_describe_query=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_query_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_describe_query=x_vault_a_p_i_describe_query, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function query_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_describe_query=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_query_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_describe_query=x_vault_a_p_i_describe_query, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_query_previous_page_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_query_previous_page_post(_api::DefaultApi, previous_page::String; authorization=nothing, accept=nothing, x_vault_a_p_i_describe_query=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_query_previous_page_post_DefaultApi, "/query/{previous_page}", [])
    OpenAPI.Clients.set_param(_ctx.path, "previous_page", previous_page)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-DescribeQuery", x_vault_a_p_i_describe_query)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Previous Page URL

Params:
- previous_page::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_describe_query::Bool
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function query_previous_page_post(_api::DefaultApi, previous_page::String; authorization=nothing, accept=nothing, x_vault_a_p_i_describe_query=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_query_previous_page_post(_api, previous_page; authorization=authorization, accept=accept, x_vault_a_p_i_describe_query=x_vault_a_p_i_describe_query, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function query_previous_page_post(_api::DefaultApi, response_stream::Channel, previous_page::String; authorization=nothing, accept=nothing, x_vault_a_p_i_describe_query=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_query_previous_page_post(_api, previous_page; authorization=authorization, accept=accept, x_vault_a_p_i_describe_query=x_vault_a_p_i_describe_query, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_me_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_me_get(_api::DefaultApi; attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_scim_v2_me_get_DefaultApi, "/scim/v2/Me", [])
    OpenAPI.Clients.set_param(_ctx.query, "attributes", attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "excludedAttributes", excluded_attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Current User with SCIM

Params:
- attributes::String
- excluded_attributes::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_me_get(_api::DefaultApi; attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_me_get(_api; attributes=attributes, excluded_attributes=excluded_attributes, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_me_get(_api::DefaultApi, response_stream::Channel; attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_me_get(_api; attributes=attributes, excluded_attributes=excluded_attributes, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_me_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_me_put(_api::DefaultApi; attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_scim_v2_me_put_DefaultApi, "/scim/v2/Me", [])
    OpenAPI.Clients.set_param(_ctx.query, "attributes", attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "excludedAttributes", excluded_attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Current User with SCIM

Params:
- attributes::String
- excluded_attributes::String
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_me_put(_api::DefaultApi; attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_me_put(_api; attributes=attributes, excluded_attributes=excluded_attributes, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_me_put(_api::DefaultApi, response_stream::Channel; attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_me_put(_api; attributes=attributes, excluded_attributes=excluded_attributes, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_resource_types_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_resource_types_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_scim_v2_resource_types_get_DefaultApi, "/scim/v2/ResourceTypes", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All SCIM Resource Types

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_resource_types_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_resource_types_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_resource_types_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_resource_types_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_resource_types_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_resource_types_type_get(_api::DefaultApi, type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_scim_v2_resource_types_type_get_DefaultApi, "/scim/v2/ResourceTypes/{type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "type", type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Single SCIM Resource Type

Params:
- type::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_resource_types_type_get(_api::DefaultApi, type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_resource_types_type_get(_api, type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_resource_types_type_get(_api::DefaultApi, response_stream::Channel, type::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_resource_types_type_get(_api, type; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_schemas_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_schemas_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_scim_v2_schemas_get_DefaultApi, "/scim/v2/Schemas", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All SCIM Schema Information

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_schemas_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_schemas_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_schemas_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_schemas_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_schemas_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_schemas_id_get(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_scim_v2_schemas_id_get_DefaultApi, "/scim/v2/Schemas/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Single SCIM Schema Information

Params:
- id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_schemas_id_get(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_schemas_id_get(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_schemas_id_get(_api::DefaultApi, response_stream::Channel, id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_schemas_id_get(_api, id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_service_provider_config_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_service_provider_config_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_scim_v2_service_provider_config_get_DefaultApi, "/scim/v2/ServiceProviderConfig", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve SCIM Provider

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_service_provider_config_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_service_provider_config_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_service_provider_config_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_service_provider_config_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_type_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_type_get(_api::DefaultApi, type::String; filter=nothing, attributes=nothing, excluded_attributes=nothing, sort_by=nothing, sort_order=nothing, start_index=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_scim_v2_type_get_DefaultApi, "/scim/v2/{type}", [])
    OpenAPI.Clients.set_param(_ctx.path, "type", type)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "filter", filter; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "attributes", attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "excludedAttributes", excluded_attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sortBy", sort_by; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sortOrder", sort_order; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "startIndex", start_index; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve SCIM Resources

Params:
- type::String (required)
- filter::String
- attributes::String
- excluded_attributes::String
- sort_by::String
- sort_order::String
- start_index::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_type_get(_api::DefaultApi, type::String; filter=nothing, attributes=nothing, excluded_attributes=nothing, sort_by=nothing, sort_order=nothing, start_index=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_type_get(_api, type; filter=filter, attributes=attributes, excluded_attributes=excluded_attributes, sort_by=sort_by, sort_order=sort_order, start_index=start_index, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_type_get(_api::DefaultApi, response_stream::Channel, type::String; filter=nothing, attributes=nothing, excluded_attributes=nothing, sort_by=nothing, sort_order=nothing, start_index=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_type_get(_api, type; filter=filter, attributes=attributes, excluded_attributes=excluded_attributes, sort_by=sort_by, sort_order=sort_order, start_index=start_index, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_type_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_type_id_get(_api::DefaultApi, type::String, id::String; attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_scim_v2_type_id_get_DefaultApi, "/scim/v2/{type}/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "type", type)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "attributes", attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "excludedAttributes", excluded_attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Single SCIM Resource

Params:
- type::String (required)
- id::String (required)
- attributes::String
- excluded_attributes::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_type_id_get(_api::DefaultApi, type::String, id::String; attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_type_id_get(_api, type, id; attributes=attributes, excluded_attributes=excluded_attributes, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_type_id_get(_api::DefaultApi, response_stream::Channel, type::String, id::String; attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_type_id_get(_api, type, id; attributes=attributes, excluded_attributes=excluded_attributes, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_users_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_users_get(_api::DefaultApi; filter=nothing, attributes=nothing, excluded_attributes=nothing, sort_by=nothing, sort_order=nothing, count=nothing, start_index=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_scim_v2_users_get_DefaultApi, "/scim/v2/Users", [])
    OpenAPI.Clients.set_param(_ctx.query, "filter", filter; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "attributes", attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "excludedAttributes", excluded_attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sortBy", sort_by; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sortOrder", sort_order; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "startIndex", start_index; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Users with SCIM

Params:
- filter::String
- attributes::String
- excluded_attributes::String
- sort_by::String
- sort_order::String
- count::String
- start_index::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_users_get(_api::DefaultApi; filter=nothing, attributes=nothing, excluded_attributes=nothing, sort_by=nothing, sort_order=nothing, count=nothing, start_index=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_users_get(_api; filter=filter, attributes=attributes, excluded_attributes=excluded_attributes, sort_by=sort_by, sort_order=sort_order, count=count, start_index=start_index, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_users_get(_api::DefaultApi, response_stream::Channel; filter=nothing, attributes=nothing, excluded_attributes=nothing, sort_by=nothing, sort_order=nothing, count=nothing, start_index=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_users_get(_api; filter=filter, attributes=attributes, excluded_attributes=excluded_attributes, sort_by=sort_by, sort_order=sort_order, count=count, start_index=start_index, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_users_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_users_id_get(_api::DefaultApi, id::String; filter=nothing, attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_scim_v2_users_id_get_DefaultApi, "/scim/v2/Users/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "filter", filter; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "attributes", attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "excludedAttributes", excluded_attributes; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Single User with SCIM

Params:
- id::String (required)
- filter::String
- attributes::String
- excluded_attributes::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_users_id_get(_api::DefaultApi, id::String; filter=nothing, attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_users_id_get(_api, id; filter=filter, attributes=attributes, excluded_attributes=excluded_attributes, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_users_id_get(_api::DefaultApi, response_stream::Channel, id::String; filter=nothing, attributes=nothing, excluded_attributes=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_users_id_get(_api, id; filter=filter, attributes=attributes, excluded_attributes=excluded_attributes, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_users_id_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_users_id_put(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_scim_v2_users_id_put_DefaultApi, "/scim/v2/Users/{id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update User with SCIM

Params:
- id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_users_id_put(_api::DefaultApi, id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_users_id_put(_api, id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_users_id_put(_api::DefaultApi, response_stream::Channel, id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_users_id_put(_api, id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_scim_v2_users_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_scim_v2_users_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_scim_v2_users_post_DefaultApi, "/scim/v2/Users", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create User with SCIM

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function scim_v2_users_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_users_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function scim_v2_users_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_scim_v2_users_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_certificate_cert_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_certificate_cert_id_get(_api::DefaultApi, cert_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_certificate_cert_id_get_DefaultApi, "/services/certificate/{cert_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "cert_id", cert_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Signing Certificate

Params:
- cert_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_certificate_cert_id_get(_api::DefaultApi, cert_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_certificate_cert_id_get(_api, cert_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_certificate_cert_id_get(_api::DefaultApi, response_stream::Channel, cert_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_certificate_cert_id_get(_api, cert_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_configuration_mode_actions_disable_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_configuration_mode_actions_disable_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_services_configuration_mode_actions_disable_post_DefaultApi, "/services/configuration_mode/actions/disable", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Disable Configuration Mode

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_configuration_mode_actions_disable_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_configuration_mode_actions_disable_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_configuration_mode_actions_disable_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_configuration_mode_actions_disable_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_configuration_mode_actions_enable_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_configuration_mode_actions_enable_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_services_configuration_mode_actions_enable_post_DefaultApi, "/services/configuration_mode/actions/enable", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Enable Configuration Mode

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_configuration_mode_actions_enable_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_configuration_mode_actions_enable_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_configuration_mode_actions_enable_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_configuration_mode_actions_enable_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_directdata_files_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_directdata_files_get(_api::DefaultApi; extract_type=nothing, start_time=nothing, stop_time=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_directdata_files_get_DefaultApi, "/services/directdata/files", [])
    OpenAPI.Clients.set_param(_ctx.query, "extract_type", extract_type; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "start_time", start_time; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "stop_time", stop_time; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Available Direct Data Files

Params:
- extract_type::String
- start_time::Int64
- stop_time::Int64
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_directdata_files_get(_api::DefaultApi; extract_type=nothing, start_time=nothing, stop_time=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_directdata_files_get(_api; extract_type=extract_type, start_time=start_time, stop_time=stop_time, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_directdata_files_get(_api::DefaultApi, response_stream::Channel; extract_type=nothing, start_time=nothing, stop_time=nothing, accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_directdata_files_get(_api; extract_type=extract_type, start_time=start_time, stop_time=stop_time, accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_directdata_files_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_directdata_files_name_get(_api::DefaultApi, name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_directdata_files_name_get_DefaultApi, "/services/directdata/files/{name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Direct Data File

Params:
- name::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_directdata_files_name_get(_api::DefaultApi, name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_directdata_files_name_get(_api, name; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_directdata_files_name_get(_api::DefaultApi, response_stream::Channel, name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_directdata_files_name_get(_api, name; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_items_content_item_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_items_content_item_get(_api::DefaultApi, item::String; authorization=nothing, accept=nothing, range=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_file_staging_items_content_item_get_DefaultApi, "/services/file_staging/items/content/{item}", [])
    OpenAPI.Clients.set_param(_ctx.path, "item", item)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Range", range)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Item Content

Params:
- item::String (required)
- authorization::String
- accept::String
- range::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_items_content_item_get(_api::DefaultApi, item::String; authorization=nothing, accept=nothing, range=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_items_content_item_get(_api, item; authorization=authorization, accept=accept, range=range, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_items_content_item_get(_api::DefaultApi, response_stream::Channel, item::String; authorization=nothing, accept=nothing, range=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_items_content_item_get(_api, item; authorization=authorization, accept=accept, range=range, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_items_item_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_items_item_delete(_api::DefaultApi, item::String; recursive=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_services_file_staging_items_item_delete_DefaultApi, "/services/file_staging/items/{item}", [])
    OpenAPI.Clients.set_param(_ctx.path, "item", item)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "recursive", recursive; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete File or Folder

Params:
- item::String (required)
- recursive::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_items_item_delete(_api::DefaultApi, item::String; recursive=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_items_item_delete(_api, item; recursive=recursive, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_items_item_delete(_api::DefaultApi, response_stream::Channel, item::String; recursive=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_items_item_delete(_api, item; recursive=recursive, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_items_item_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_items_item_get(_api::DefaultApi, item::String; recursive=nothing, limit=nothing, format_result=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_file_staging_items_item_get_DefaultApi, "/services/file_staging/items/{item}", [])
    OpenAPI.Clients.set_param(_ctx.path, "item", item)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "recursive", recursive; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "format_result", format_result; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List Items at a Path

Params:
- item::String (required)
- recursive::String
- limit::String
- format_result::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_items_item_get(_api::DefaultApi, item::String; recursive=nothing, limit=nothing, format_result=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_items_item_get(_api, item; recursive=recursive, limit=limit, format_result=format_result, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_items_item_get(_api::DefaultApi, response_stream::Channel, item::String; recursive=nothing, limit=nothing, format_result=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_items_item_get(_api, item; recursive=recursive, limit=limit, format_result=format_result, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_items_item_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_items_item_put(_api::DefaultApi, item::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_services_file_staging_items_item_put_DefaultApi, "/services/file_staging/items/{item}", [])
    OpenAPI.Clients.set_param(_ctx.path, "item", item)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Folder or File

Params:
- item::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_items_item_put(_api::DefaultApi, item::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_items_item_put(_api, item; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_items_item_put(_api::DefaultApi, response_stream::Channel, item::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_items_item_put(_api, item; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_items_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_items_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_m_d5=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_services_file_staging_items_post_DefaultApi, "/services/file_staging/items", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-MD5", content_m_d5)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Folder or File

Params:
- authorization::String
- accept::String
- content_m_d5::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_items_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_m_d5=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_items_post(_api; authorization=authorization, accept=accept, content_m_d5=content_m_d5, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_items_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_m_d5=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_items_post(_api; authorization=authorization, accept=accept, content_m_d5=content_m_d5, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_upload_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_upload_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_file_staging_upload_get_DefaultApi, "/services/file_staging/upload/", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List Upload Sessions

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_upload_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_upload_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_upload_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_upload_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_services_file_staging_upload_post_DefaultApi, "/services/file_staging/upload", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Resumable Upload Session

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_upload_post(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_upload_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_post(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_upload_upload_session_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_upload_upload_session_id_delete(_api::DefaultApi, upload_session_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_services_file_staging_upload_upload_session_id_delete_DefaultApi, "/services/file_staging/upload/{upload_session_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "upload_session_id", upload_session_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Abort Upload Session

Params:
- upload_session_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_upload_upload_session_id_delete(_api::DefaultApi, upload_session_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_upload_session_id_delete(_api, upload_session_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_upload_upload_session_id_delete(_api::DefaultApi, response_stream::Channel, upload_session_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_upload_session_id_delete(_api, upload_session_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_upload_upload_session_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_upload_upload_session_id_get(_api::DefaultApi, upload_session_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_file_staging_upload_upload_session_id_get_DefaultApi, "/services/file_staging/upload/{upload_session_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "upload_session_id", upload_session_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get Upload Session Details

Params:
- upload_session_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_upload_upload_session_id_get(_api::DefaultApi, upload_session_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_upload_session_id_get(_api, upload_session_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_upload_upload_session_id_get(_api::DefaultApi, response_stream::Channel, upload_session_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_upload_session_id_get(_api, upload_session_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_upload_upload_session_id_parts_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_upload_upload_session_id_parts_get(_api::DefaultApi, upload_session_id::String; limit=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_file_staging_upload_upload_session_id_parts_get_DefaultApi, "/services/file_staging/upload/{upload_session_id}/parts", [])
    OpenAPI.Clients.set_param(_ctx.path, "upload_session_id", upload_session_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List File Parts Uploaded to Session

Params:
- upload_session_id::String (required)
- limit::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_upload_upload_session_id_parts_get(_api::DefaultApi, upload_session_id::String; limit=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_upload_session_id_parts_get(_api, upload_session_id; limit=limit, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_upload_upload_session_id_parts_get(_api::DefaultApi, response_stream::Channel, upload_session_id::String; limit=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_upload_session_id_parts_get(_api, upload_session_id; limit=limit, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_upload_upload_session_id_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_upload_upload_session_id_post(_api::DefaultApi, upload_session_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_services_file_staging_upload_upload_session_id_post_DefaultApi, "/services/file_staging/upload/{upload_session_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "upload_session_id", upload_session_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Commit Upload Session

Params:
- upload_session_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_upload_upload_session_id_post(_api::DefaultApi, upload_session_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_upload_session_id_post(_api, upload_session_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_upload_upload_session_id_post(_api::DefaultApi, response_stream::Channel, upload_session_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_upload_session_id_post(_api, upload_session_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_file_staging_upload_upload_session_id_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_file_staging_upload_upload_session_id_put(_api::DefaultApi, upload_session_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_file_part_number=nothing, content_m_d5=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_services_file_staging_upload_upload_session_id_put_DefaultApi, "/services/file_staging/upload/{upload_session_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "upload_session_id", upload_session_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-FilePartNumber", x_vault_a_p_i_file_part_number)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-MD5", content_m_d5)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Upload to a Session

Params:
- upload_session_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_file_part_number::String
- content_m_d5::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_file_staging_upload_upload_session_id_put(_api::DefaultApi, upload_session_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_file_part_number=nothing, content_m_d5=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_upload_session_id_put(_api, upload_session_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_file_part_number=x_vault_a_p_i_file_part_number, content_m_d5=content_m_d5, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_file_staging_upload_upload_session_id_put(_api::DefaultApi, response_stream::Channel, upload_session_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_file_part_number=nothing, content_m_d5=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_file_staging_upload_upload_session_id_put(_api, upload_session_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_file_part_number=x_vault_a_p_i_file_part_number, content_m_d5=content_m_d5, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_jobs_histories_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_jobs_histories_get(_api::DefaultApi; start_date=nothing, end_date=nothing, status=nothing, limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_jobs_histories_get_DefaultApi, "/services/jobs/histories", [])
    OpenAPI.Clients.set_param(_ctx.query, "start_date", start_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "end_date", end_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "status", status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "offset", offset; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Job Histories

Params:
- start_date::String
- end_date::String
- status::String
- limit::String
- offset::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_jobs_histories_get(_api::DefaultApi; start_date=nothing, end_date=nothing, status=nothing, limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_histories_get(_api; start_date=start_date, end_date=end_date, status=status, limit=limit, offset=offset, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_jobs_histories_get(_api::DefaultApi, response_stream::Channel; start_date=nothing, end_date=nothing, status=nothing, limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_histories_get(_api; start_date=start_date, end_date=end_date, status=status, limit=limit, offset=offset, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_jobs_job_id_errors_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_jobs_job_id_errors_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_jobs_job_id_errors_get_DefaultApi, "/services/jobs/{job_id}/errors", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Import Bulk Translation File Job Errors

Params:
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_jobs_job_id_errors_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_job_id_errors_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_jobs_job_id_errors_get(_api::DefaultApi, response_stream::Channel, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_job_id_errors_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_jobs_job_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_jobs_job_id_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_jobs_job_id_get_DefaultApi, "/services/jobs/{job_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Job Status

Params:
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_jobs_job_id_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_job_id_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_jobs_job_id_get(_api::DefaultApi, response_stream::Channel, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_job_id_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_jobs_job_id_summary_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_jobs_job_id_summary_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_jobs_job_id_summary_get_DefaultApi, "/services/jobs/{job_id}/summary", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Import Bulk Translation File Job Summary

Params:
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_jobs_job_id_summary_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_job_id_summary_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_jobs_job_id_summary_get(_api::DefaultApi, response_stream::Channel, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_job_id_summary_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_jobs_job_id_tasks_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_jobs_job_id_tasks_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_jobs_job_id_tasks_get_DefaultApi, "/services/jobs/{job_id}/tasks", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve SDK Job Tasks

Params:
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_jobs_job_id_tasks_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_job_id_tasks_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_jobs_job_id_tasks_get(_api::DefaultApi, response_stream::Channel, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_job_id_tasks_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_jobs_monitors_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_jobs_monitors_get(_api::DefaultApi; start_date=nothing, end_date=nothing, status=nothing, limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_jobs_monitors_get_DefaultApi, "/services/jobs/monitors", [])
    OpenAPI.Clients.set_param(_ctx.query, "start_date", start_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "end_date", end_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "status", status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "offset", offset; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Job Monitors

Params:
- start_date::String
- end_date::String
- status::String
- limit::String
- offset::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_jobs_monitors_get(_api::DefaultApi; start_date=nothing, end_date=nothing, status=nothing, limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_monitors_get(_api; start_date=start_date, end_date=end_date, status=status, limit=limit, offset=offset, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_jobs_monitors_get(_api::DefaultApi, response_stream::Channel; start_date=nothing, end_date=nothing, status=nothing, limit=nothing, offset=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_monitors_get(_api; start_date=start_date, end_date=end_date, status=status, limit=limit, offset=offset, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_jobs_start_now_job_id_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_jobs_start_now_job_id_post(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_services_jobs_start_now_job_id_post_DefaultApi, "/services/jobs/start_now/{job_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Start Job

Params:
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_jobs_start_now_job_id_post(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_start_now_job_id_post(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_jobs_start_now_job_id_post(_api::DefaultApi, response_stream::Channel, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_jobs_start_now_job_id_post(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_loader_extract_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_loader_extract_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_services_loader_extract_post_DefaultApi, "/services/loader/extract", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Extract Data Files

Params:
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_loader_extract_post(_api::DefaultApi; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_extract_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_loader_extract_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_extract_post(_api; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_loader_job_id_tasks_task_id_failurelog_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_loader_job_id_tasks_task_id_failurelog_get(_api::DefaultApi, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_loader_job_id_tasks_task_id_failurelog_get_DefaultApi, "/services/loader/{job_id}/tasks/{task_id}/failurelog", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Load Failure Log Results

Params:
- job_id::String (required)
- task_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_loader_job_id_tasks_task_id_failurelog_get(_api::DefaultApi, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_job_id_tasks_task_id_failurelog_get(_api, job_id, task_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_loader_job_id_tasks_task_id_failurelog_get(_api::DefaultApi, response_stream::Channel, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_job_id_tasks_task_id_failurelog_get(_api, job_id, task_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_loader_job_id_tasks_task_id_results_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_loader_job_id_tasks_task_id_results_get(_api::DefaultApi, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_loader_job_id_tasks_task_id_results_get_DefaultApi, "/services/loader/{job_id}/tasks/{task_id}/results", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Loader Extract Results

Params:
- job_id::String (required)
- task_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_loader_job_id_tasks_task_id_results_get(_api::DefaultApi, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_job_id_tasks_task_id_results_get(_api, job_id, task_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_loader_job_id_tasks_task_id_results_get(_api::DefaultApi, response_stream::Channel, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_job_id_tasks_task_id_results_get(_api, job_id, task_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_loader_job_id_tasks_task_id_results_renditions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_loader_job_id_tasks_task_id_results_renditions_get(_api::DefaultApi, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_loader_job_id_tasks_task_id_results_renditions_get_DefaultApi, "/services/loader/{job_id}/tasks/{task_id}/results/renditions", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Loader Extract Renditions Results

Params:
- job_id::String (required)
- task_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_loader_job_id_tasks_task_id_results_renditions_get(_api::DefaultApi, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_job_id_tasks_task_id_results_renditions_get(_api, job_id, task_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_loader_job_id_tasks_task_id_results_renditions_get(_api::DefaultApi, response_stream::Channel, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_job_id_tasks_task_id_results_renditions_get(_api, job_id, task_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_loader_job_id_tasks_task_id_successlog_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_loader_job_id_tasks_task_id_successlog_get(_api::DefaultApi, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_loader_job_id_tasks_task_id_successlog_get_DefaultApi, "/services/loader/{job_id}/tasks/{task_id}/successlog", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Load Success Log Results

Params:
- job_id::String (required)
- task_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_loader_job_id_tasks_task_id_successlog_get(_api::DefaultApi, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_job_id_tasks_task_id_successlog_get(_api, job_id, task_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_loader_job_id_tasks_task_id_successlog_get(_api::DefaultApi, response_stream::Channel, job_id::String, task_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_job_id_tasks_task_id_successlog_get(_api, job_id, task_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_loader_load_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_loader_load_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_services_loader_load_post_DefaultApi, "/services/loader/load", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Load Data Objects

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_loader_load_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_load_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_loader_load_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_loader_load_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_package_actions_validate_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_package_actions_validate_post(_api::DefaultApi; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_services_package_actions_validate_post_DefaultApi, "/services/package/actions/validate", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Validate Package

Params:
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_package_actions_validate_post(_api::DefaultApi; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_package_actions_validate_post(_api; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_package_actions_validate_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_package_actions_validate_post(_api; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_package_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_package_post(_api::DefaultApi; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_services_package_post_DefaultApi, "/services/package", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Export Package

Params:
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_package_post(_api::DefaultApi; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_package_post(_api; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_package_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_package_post(_api; authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_package_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_package_put(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_services_package_put_DefaultApi, "/services/package", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Import Package

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_package_put(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_package_put(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_package_put(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_package_put(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_queues_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_queues_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_queues_get_DefaultApi, "/services/queues", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Queues

Params:
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_queues_get(_api::DefaultApi; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_queues_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_queues_get(_api::DefaultApi, response_stream::Channel; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_queues_get(_api; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_queues_queue_name_actions_disable_delivery_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_queues_queue_name_actions_disable_delivery_put(_api::DefaultApi, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_services_queues_queue_name_actions_disable_delivery_put_DefaultApi, "/services/queues/{queue_name}/actions/disable_delivery", [])
    OpenAPI.Clients.set_param(_ctx.path, "queue_name", queue_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Disable Delivery

Params:
- queue_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_queues_queue_name_actions_disable_delivery_put(_api::DefaultApi, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_queues_queue_name_actions_disable_delivery_put(_api, queue_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_queues_queue_name_actions_disable_delivery_put(_api::DefaultApi, response_stream::Channel, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_queues_queue_name_actions_disable_delivery_put(_api, queue_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_queues_queue_name_actions_enable_delivery_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_queues_queue_name_actions_enable_delivery_put(_api::DefaultApi, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_services_queues_queue_name_actions_enable_delivery_put_DefaultApi, "/services/queues/{queue_name}/actions/enable_delivery", [])
    OpenAPI.Clients.set_param(_ctx.path, "queue_name", queue_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Enable Delivery

Params:
- queue_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_queues_queue_name_actions_enable_delivery_put(_api::DefaultApi, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_queues_queue_name_actions_enable_delivery_put(_api, queue_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_queues_queue_name_actions_enable_delivery_put(_api::DefaultApi, response_stream::Channel, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_queues_queue_name_actions_enable_delivery_put(_api, queue_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_queues_queue_name_actions_reset_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_queues_queue_name_actions_reset_put(_api::DefaultApi, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_services_queues_queue_name_actions_reset_put_DefaultApi, "/services/queues/{queue_name}/actions/reset", [])
    OpenAPI.Clients.set_param(_ctx.path, "queue_name", queue_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Reset Queue

Params:
- queue_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_queues_queue_name_actions_reset_put(_api::DefaultApi, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_queues_queue_name_actions_reset_put(_api, queue_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_queues_queue_name_actions_reset_put(_api::DefaultApi, response_stream::Channel, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_queues_queue_name_actions_reset_put(_api, queue_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_queues_queue_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_queues_queue_name_get(_api::DefaultApi, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_services_queues_queue_name_get_DefaultApi, "/services/queues/{queue_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "queue_name", queue_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Queue Status

Params:
- queue_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_queues_queue_name_get(_api::DefaultApi, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_queues_queue_name_get(_api, queue_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_queues_queue_name_get(_api::DefaultApi, response_stream::Channel, queue_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_queues_queue_name_get(_api, queue_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_services_vobject_vault_package_v_package_id_actions_validate_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_services_vobject_vault_package_v_package_id_actions_validate_post(_api::DefaultApi, package_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_services_vobject_vault_package_v_package_id_actions_validate_post_DefaultApi, "/services/vobject/vault_package__v/{package_id}/actions/validate", [])
    OpenAPI.Clients.set_param(_ctx.path, "package_id", package_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Validate Imported Package

Params:
- package_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function services_vobject_vault_package_v_package_id_actions_validate_post(_api::DefaultApi, package_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_vobject_vault_package_v_package_id_actions_validate_post(_api, package_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function services_vobject_vault_package_v_package_id_actions_validate_post(_api::DefaultApi, response_stream::Channel, package_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_services_vobject_vault_package_v_package_id_actions_validate_post(_api, package_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_session_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_session_delete(_api::DefaultApi; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_session_delete_DefaultApi, "/session", [])
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""End Session

Params:
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function session_delete(_api::DefaultApi; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_session_delete(_api; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function session_delete(_api::DefaultApi, response_stream::Channel; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_session_delete(_api; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_uicode_distributions_distribution_name_code_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_uicode_distributions_distribution_name_code_get(_api::DefaultApi, distribution_name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_uicode_distributions_distribution_name_code_get_DefaultApi, "/uicode/distributions/{distribution_name}/code", [])
    OpenAPI.Clients.set_param(_ctx.path, "distribution_name", distribution_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Single Client Code Distribution

Params:
- distribution_name::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function uicode_distributions_distribution_name_code_get(_api::DefaultApi, distribution_name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_uicode_distributions_distribution_name_code_get(_api, distribution_name; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function uicode_distributions_distribution_name_code_get(_api::DefaultApi, response_stream::Channel, distribution_name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_uicode_distributions_distribution_name_code_get(_api, distribution_name; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_uicode_distributions_distribution_name_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_uicode_distributions_distribution_name_delete(_api::DefaultApi, distribution_name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_uicode_distributions_distribution_name_delete_DefaultApi, "/uicode/distributions/{distribution_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "distribution_name", distribution_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Single Client Code Distribution

Params:
- distribution_name::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function uicode_distributions_distribution_name_delete(_api::DefaultApi, distribution_name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_uicode_distributions_distribution_name_delete(_api, distribution_name; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function uicode_distributions_distribution_name_delete(_api::DefaultApi, response_stream::Channel, distribution_name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_uicode_distributions_distribution_name_delete(_api, distribution_name; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_uicode_distributions_distribution_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_uicode_distributions_distribution_name_get(_api::DefaultApi, distribution_name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_uicode_distributions_distribution_name_get_DefaultApi, "/uicode/distributions/{distribution_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "distribution_name", distribution_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Single Client Code Distribution Metadata

Params:
- distribution_name::String (required)
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function uicode_distributions_distribution_name_get(_api::DefaultApi, distribution_name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_uicode_distributions_distribution_name_get(_api, distribution_name; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function uicode_distributions_distribution_name_get(_api::DefaultApi, response_stream::Channel, distribution_name::String; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_uicode_distributions_distribution_name_get(_api, distribution_name; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_uicode_distributions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_uicode_distributions_get(_api::DefaultApi; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_uicode_distributions_get_DefaultApi, "/uicode/distributions", [])
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve All Client Code Distribution Metadata

Params:
- accept::String
- authorization::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function uicode_distributions_get(_api::DefaultApi; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_uicode_distributions_get(_api; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function uicode_distributions_get(_api::DefaultApi, response_stream::Channel; accept=nothing, authorization=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_uicode_distributions_get(_api; accept=accept, authorization=authorization, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_uicode_distributions_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_uicode_distributions_post(_api::DefaultApi; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_uicode_distributions_post_DefaultApi, "/uicode/distributions", [])
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Add or Replace Single Client Code Distribution

Params:
- accept::String
- authorization::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function uicode_distributions_post(_api::DefaultApi; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_uicode_distributions_post(_api; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function uicode_distributions_post(_api::DefaultApi, response_stream::Channel; accept=nothing, authorization=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_uicode_distributions_post(_api; accept=accept, authorization=authorization, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobject_vault_package_v_package_id_actions_deploy_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobject_vault_package_v_package_id_actions_deploy_post(_api::DefaultApi, package_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobject_vault_package_v_package_id_actions_deploy_post_DefaultApi, "/vobject/vault_package__v/{package_id}/actions/deploy", [])
    OpenAPI.Clients.set_param(_ctx.path, "package_id", package_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deploy Package

Params:
- package_id::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobject_vault_package_v_package_id_actions_deploy_post(_api::DefaultApi, package_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobject_vault_package_v_package_id_actions_deploy_post(_api, package_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobject_vault_package_v_package_id_actions_deploy_post(_api::DefaultApi, response_stream::Channel, package_id::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobject_vault_package_v_package_id_actions_deploy_post(_api, package_id; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobject_vault_package_v_package_id_actions_deploy_results_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobject_vault_package_v_package_id_actions_deploy_results_get(_api::DefaultApi, package_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobject_vault_package_v_package_id_actions_deploy_results_get_DefaultApi, "/vobject/vault_package__v/{package_id}/actions/deploy/results", [])
    OpenAPI.Clients.set_param(_ctx.path, "package_id", package_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Package Deploy Results

Params:
- package_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobject_vault_package_v_package_id_actions_deploy_results_get(_api::DefaultApi, package_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobject_vault_package_v_package_id_actions_deploy_results_get(_api, package_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobject_vault_package_v_package_id_actions_deploy_results_get(_api::DefaultApi, response_stream::Channel, package_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobject_vault_package_v_package_id_actions_deploy_results_get(_api, package_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_cascadedelete_results_object_name_job_status_job_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_cascadedelete_results_object_name_job_status_job_id_get(_api::DefaultApi, object_name::String, job_status::String, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_cascadedelete_results_object_name_job_status_job_id_get_DefaultApi, "/vobjects/cascadedelete/results/{object_name}/{job_status}/{job_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "job_status", job_status)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Results of Cascade Delete Job

Params:
- object_name::String (required)
- job_status::String (required)
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_cascadedelete_results_object_name_job_status_job_id_get(_api::DefaultApi, object_name::String, job_status::String, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_cascadedelete_results_object_name_job_status_job_id_get(_api, object_name, job_status, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_cascadedelete_results_object_name_job_status_job_id_get(_api::DefaultApi, response_stream::Channel, object_name::String, job_status::String, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_cascadedelete_results_object_name_job_status_job_id_get(_api, object_name, job_status, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_deepcopy_results_object_name_job_status_job_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_deepcopy_results_object_name_job_status_job_id_get(_api::DefaultApi, object_name::String, job_status::String, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_deepcopy_results_object_name_job_status_job_id_get_DefaultApi, "/vobjects/deepcopy/results/{object_name}/{job_status}/{job_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "job_status", job_status)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Results of Deep Copy Job

Params:
- object_name::String (required)
- job_status::String (required)
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_deepcopy_results_object_name_job_status_job_id_get(_api::DefaultApi, object_name::String, job_status::String, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_deepcopy_results_object_name_job_status_job_id_get(_api, object_name, job_status, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_deepcopy_results_object_name_job_status_job_id_get(_api::DefaultApi, response_stream::Channel, object_name::String, job_status::String, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_deepcopy_results_object_name_job_status_job_id_get(_api, object_name, job_status, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_edl_item_v_actions_createplaceholder_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_edl_item_v_actions_createplaceholder_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_edl_item_v_actions_createplaceholder_post_DefaultApi, "/vobjects/edl_item__v/actions/createplaceholder", [])
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create a Placeholder from an EDL Item

Params:
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_edl_item_v_actions_createplaceholder_post(_api::DefaultApi; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_edl_item_v_actions_createplaceholder_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_edl_item_v_actions_createplaceholder_post(_api::DefaultApi, response_stream::Channel; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_edl_item_v_actions_createplaceholder_post(_api; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_merges_job_id_log_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_merges_job_id_log_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_merges_job_id_log_get_DefaultApi, "/vobjects/merges/{job_id}/log", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Merge Records Job Log

Params:
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_merges_job_id_log_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_merges_job_id_log_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_merges_job_id_log_get(_api::DefaultApi, response_stream::Channel, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_merges_job_id_log_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_merges_job_id_results_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_merges_job_id_results_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_merges_job_id_results_get_DefaultApi, "/vobjects/merges/{job_id}/results", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Record Merge Results

Params:
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_merges_job_id_results_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_merges_job_id_results_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_merges_job_id_results_get(_api::DefaultApi, response_stream::Channel, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_merges_job_id_results_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_merges_job_id_status_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_merges_job_id_status_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_merges_job_id_status_get_DefaultApi, "/vobjects/merges/{job_id}/status", [])
    OpenAPI.Clients.set_param(_ctx.path, "job_id", job_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Record Merge Status

Params:
- job_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_merges_job_id_status_get(_api::DefaultApi, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_merges_job_id_status_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_merges_job_id_status_get(_api::DefaultApi, response_stream::Channel, job_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_merges_job_id_status_get(_api, job_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_actions_action_name_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_actions_action_name_post(_api::DefaultApi, object_name::String, action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_actions_action_name_post_DefaultApi, "/vobjects/{object_name}/actions/{action_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "action_name", action_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Object Action on Multiple Records

Params:
- object_name::String (required)
- action_name::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_actions_action_name_post(_api::DefaultApi, object_name::String, action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_action_name_post(_api, object_name, action_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_actions_action_name_post(_api::DefaultApi, response_stream::Channel, object_name::String, action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_action_name_post(_api, object_name, action_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_actions_changetype_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_actions_changetype_post(_api::DefaultApi, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_actions_changetype_post_DefaultApi, "/vobjects/{object_name}/actions/changetype", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Change Object Type

Params:
- object_name::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_actions_changetype_post(_api::DefaultApi, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_changetype_post(_api, object_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_actions_changetype_post(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_changetype_post(_api, object_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_actions_merge_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_actions_merge_post(_api::DefaultApi, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, vobjects_object_name_actions_merge_post_request_inner=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_actions_merge_post_DefaultApi, "/vobjects/{object_name}/actions/merge", [], vobjects_object_name_actions_merge_post_request_inner)
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Record Merge

Params:
- object_name::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String
- vobjects_object_name_actions_merge_post_request_inner::Vector{VobjectsObjectNameActionsMergePostRequestInner}

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_actions_merge_post(_api::DefaultApi, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, vobjects_object_name_actions_merge_post_request_inner=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_merge_post(_api, object_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, vobjects_object_name_actions_merge_post_request_inner=vobjects_object_name_actions_merge_post_request_inner, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_actions_merge_post(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, vobjects_object_name_actions_merge_post_request_inner=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_merge_post(_api, object_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, vobjects_object_name_actions_merge_post_request_inner=vobjects_object_name_actions_merge_post_request_inner, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_actions_recalculaterollups_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_actions_recalculaterollups_get(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_actions_recalculaterollups_get_DefaultApi, "/vobjects/{object_name}/actions/recalculaterollups", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Roll-up Field Recalculation Status

Params:
- object_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_actions_recalculaterollups_get(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_recalculaterollups_get(_api, object_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_actions_recalculaterollups_get(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_recalculaterollups_get(_api, object_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_actions_recalculaterollups_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_actions_recalculaterollups_post(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_actions_recalculaterollups_post_DefaultApi, "/vobjects/{object_name}/actions/recalculaterollups", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Recalculate Roll-up Fields

Params:
- object_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_actions_recalculaterollups_post(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_recalculaterollups_post(_api, object_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_actions_recalculaterollups_post(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_recalculaterollups_post(_api, object_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_actions_updatecorporatecurrency_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_actions_updatecorporatecurrency_put(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_vobjects_object_name_actions_updatecorporatecurrency_put_DefaultApi, "/vobjects/{object_name}/actions/updatecorporatecurrency", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Corporate Currency Fields

Params:
- object_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_actions_updatecorporatecurrency_put(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_updatecorporatecurrency_put(_api, object_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_actions_updatecorporatecurrency_put(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_actions_updatecorporatecurrency_put(_api, object_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_attachments_batch_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_attachments_batch_delete(_api::DefaultApi, object_name::String; id_param=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_vobjects_object_name_attachments_batch_delete_DefaultApi, "/vobjects/{object_name}/attachments/batch", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "idParam", id_param; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Multiple Object Record Attachments

Params:
- object_name::String (required)
- id_param::String
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_attachments_batch_delete(_api::DefaultApi, object_name::String; id_param=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_attachments_batch_delete(_api, object_name; id_param=id_param, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_attachments_batch_delete(_api::DefaultApi, response_stream::Channel, object_name::String; id_param=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_attachments_batch_delete(_api, object_name; id_param=id_param, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_attachments_batch_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_attachments_batch_post(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_attachments_batch_post_DefaultApi, "/vobjects/{object_name}/attachments/batch", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Multiple Object Record Attachments

Params:
- object_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_attachments_batch_post(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_attachments_batch_post(_api, object_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_attachments_batch_post(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_attachments_batch_post(_api, object_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_attachments_batch_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_attachments_batch_put(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_vobjects_object_name_attachments_batch_put_DefaultApi, "/vobjects/{object_name}/attachments/batch", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Multiple Object Record Attachment Descriptions

Params:
- object_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_attachments_batch_put(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_attachments_batch_put(_api, object_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_attachments_batch_put(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_attachments_batch_put(_api, object_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_delete(_api::DefaultApi, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_vobjects_object_name_delete_DefaultApi, "/vobjects/{object_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Object Records

Params:
- object_name::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_delete(_api::DefaultApi, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_delete(_api, object_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_delete(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_delete(_api, object_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_id_roles_role_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_id_roles_role_name_get(_api::DefaultApi, object_name::String, id::String, role_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_id_roles_role_name_get_DefaultApi, "/vobjects/{object_name}/{id}/roles/{role_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "role_name", role_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Object Record Roles

Params:
- object_name::String (required)
- id::String (required)
- role_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_id_roles_role_name_get(_api::DefaultApi, object_name::String, id::String, role_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_id_roles_role_name_get(_api, object_name, id, role_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_id_roles_role_name_get(_api::DefaultApi, response_stream::Channel, object_name::String, id::String, role_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_id_roles_role_name_get(_api, object_name, id, role_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_actions_action_name_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_actions_action_name_get(_api::DefaultApi, object_name::String, object_record_id::String, action_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_actions_action_name_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}/actions/{action_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "action_name", action_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Object User Actions Details

Params:
- object_name::String (required)
- object_record_id::String (required)
- action_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_actions_action_name_get(_api::DefaultApi, object_name::String, object_record_id::String, action_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_actions_action_name_get(_api, object_name, object_record_id, action_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_actions_action_name_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, action_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_actions_action_name_get(_api, object_name, object_record_id, action_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_actions_action_name_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_actions_action_name_post(_api::DefaultApi, object_name::String, object_record_id::String, action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_object_record_id_actions_action_name_post_DefaultApi, "/vobjects/{object_name}/{object_record_id}/actions/{action_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "action_name", action_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Initiate Object Action on a Single Record

Params:
- object_name::String (required)
- object_record_id::String (required)
- action_name::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_actions_action_name_post(_api::DefaultApi, object_name::String, object_record_id::String, action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_actions_action_name_post(_api, object_name, object_record_id, action_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_actions_action_name_post(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, action_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_actions_action_name_post(_api, object_name, object_record_id, action_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_actions_cascadedelete_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_actions_cascadedelete_post(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_object_record_id_actions_cascadedelete_post_DefaultApi, "/vobjects/{object_name}/{object_record_id}/actions/cascadedelete", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Cascade Delete Object Record

Params:
- object_name::String (required)
- object_record_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_actions_cascadedelete_post(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_actions_cascadedelete_post(_api, object_name, object_record_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_actions_cascadedelete_post(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_actions_cascadedelete_post(_api, object_name, object_record_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_actions_deepcopy_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_actions_deepcopy_post(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_object_record_id_actions_deepcopy_post_DefaultApi, "/vobjects/{object_name}/{object_record_id}/actions/deepcopy", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deep Copy Object Record

Params:
- object_name::String (required)
- object_record_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_actions_deepcopy_post(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_actions_deepcopy_post(_api, object_name, object_record_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_actions_deepcopy_post(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_actions_deepcopy_post(_api, object_name, object_record_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_actions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_actions_get(_api::DefaultApi, object_name::String, object_record_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_actions_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}/actions", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "loc", loc; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Object Record User Actions

Params:
- object_name::String (required)
- object_record_id::String (required)
- loc::Bool
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_actions_get(_api::DefaultApi, object_name::String, object_record_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_actions_get(_api, object_name, object_record_id; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_actions_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String; loc=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_actions_get(_api, object_name, object_record_id; loc=loc, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get(_api::DefaultApi, object_name::String, object_record_id::String, attachment_field_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachment_fields/{attachment_field_name}/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_field_name", attachment_field_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Attachment Field File

Params:
- object_name::String (required)
- object_record_id::String (required)
- attachment_field_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get(_api::DefaultApi, object_name::String, object_record_id::String, attachment_field_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get(_api, object_name, object_record_id, attachment_field_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, attachment_field_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get(_api, object_name, object_record_id, attachment_field_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post(_api::DefaultApi, object_name::String, object_record_id::String, attachment_field_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachment_fields/{attachment_field_name}/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_field_name", attachment_field_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Attachment Field File

Params:
- object_name::String (required)
- object_record_id::String (required)
- attachment_field_name::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post(_api::DefaultApi, object_name::String, object_record_id::String, attachment_field_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post(_api, object_name, object_record_id, attachment_field_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, attachment_field_name::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post(_api, object_name, object_record_id, attachment_field_name; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachment_fields_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachment_fields_file_get(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_attachment_fields_file_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachment_fields/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download All Attachment Field Files

Params:
- object_name::String (required)
- object_record_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachment_fields_file_get(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachment_fields_file_get(_api, object_name, object_record_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachment_fields_file_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachment_fields_file_get(_api, object_name, object_record_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_delete(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_delete_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Object Record Attachment

Params:
- object_name::String (required)
- object_record_id::String (required)
- attachment_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachments_attachment_id_delete(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_delete(_api, object_name, object_record_id, attachment_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachments_attachment_id_delete(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_delete(_api, object_name, object_record_id, attachment_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_get(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Object Record Attachment Metadata

Params:
- object_name::String (required)
- object_record_id::String (required)
- attachment_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachments_attachment_id_get(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_get(_api, object_name, object_record_id, attachment_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachments_attachment_id_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_get(_api, object_name, object_record_id, attachment_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_put(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_put_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Object Record Attachment Description

Params:
- object_name::String (required)
- object_record_id::String (required)
- attachment_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachments_attachment_id_put(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_put(_api, object_name, object_record_id, attachment_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachments_attachment_id_put(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_put(_api, object_name, object_record_id, attachment_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_version", attachment_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete Object Record Attachment Version

Params:
- object_name::String (required)
- object_record_id::String (required)
- attachment_id::String (required)
- attachment_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete(_api, object_name, object_record_id, attachment_id, attachment_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete(_api, object_name, object_record_id, attachment_id, attachment_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_version", attachment_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download Object Record Attachment File

Params:
- object_name::String (required)
- object_record_id::String (required)
- attachment_id::String (required)
- attachment_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get(_api, object_name, object_record_id, attachment_id, attachment_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get(_api, object_name, object_record_id, attachment_id, attachment_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_version", attachment_version)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Object Record Attachment Version Metadata

Params:
- object_name::String (required)
- object_record_id::String (required)
- attachment_id::String (required)
- attachment_version::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get(_api, object_name, object_record_id, attachment_id, attachment_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get(_api, object_name, object_record_id, attachment_id, attachment_version; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; restore=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_version", attachment_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "restore", restore; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Restore Object Record Attachment Version

Params:
- object_name::String (required)
- object_record_id::String (required)
- attachment_id::String (required)
- attachment_version::String (required)
- restore::Bool
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; restore=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post(_api, object_name, object_record_id, attachment_id, attachment_version; restore=restore, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, attachment_id::String, attachment_version::String; restore=nothing, authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post(_api, object_name, object_record_id, attachment_id, attachment_version; restore=restore, authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_versions_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_get(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_attachments_attachment_id_versions_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "attachment_id", attachment_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Object Record Attachment Versions

Params:
- object_name::String (required)
- object_record_id::String (required)
- attachment_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachments_attachment_id_versions_get(_api::DefaultApi, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_get(_api, object_name, object_record_id, attachment_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachments_attachment_id_versions_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String, attachment_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_attachment_id_versions_get(_api, object_name, object_record_id, attachment_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachments_file_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachments_file_get(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_attachments_file_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachments/file", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Download All Object Record Attachment Files

Params:
- object_name::String (required)
- object_record_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachments_file_get(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_file_get(_api, object_name, object_record_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachments_file_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_file_get(_api, object_name, object_record_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachments_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachments_get(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_attachments_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachments", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Object Record Attachments

Params:
- object_name::String (required)
- object_record_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachments_get(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_get(_api, object_name, object_record_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachments_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_get(_api, object_name, object_record_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_attachments_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_attachments_post(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_object_record_id_attachments_post_DefaultApi, "/vobjects/{object_name}/{object_record_id}/attachments", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create Object Record Attachment

Params:
- object_name::String (required)
- object_record_id::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_attachments_post(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_post(_api, object_name, object_record_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_attachments_post(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_attachments_post(_api, object_name, object_record_id; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_audittrail_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_audittrail_get(_api::DefaultApi, object_name::String, object_record_id::String; start_date=nothing, end_date=nothing, format_result=nothing, limit=nothing, offset=nothing, events=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_audittrail_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}/audittrail", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "start_date", start_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "end_date", end_date; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "format_result", format_result; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "limit", limit; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "offset", offset; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "events", events; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Complete Audit History for a Single Object Record

Params:
- object_name::String (required)
- object_record_id::String (required)
- start_date::String
- end_date::String
- format_result::String
- limit::String
- offset::String
- events::String
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_audittrail_get(_api::DefaultApi, object_name::String, object_record_id::String; start_date=nothing, end_date=nothing, format_result=nothing, limit=nothing, offset=nothing, events=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_audittrail_get(_api, object_name, object_record_id; start_date=start_date, end_date=end_date, format_result=format_result, limit=limit, offset=offset, events=events, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_audittrail_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String; start_date=nothing, end_date=nothing, format_result=nothing, limit=nothing, offset=nothing, events=nothing, authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_audittrail_get(_api, object_name, object_record_id; start_date=start_date, end_date=end_date, format_result=format_result, limit=limit, offset=offset, events=events, authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_object_record_id_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_object_record_id_get(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_object_name_object_record_id_get_DefaultApi, "/vobjects/{object_name}/{object_record_id}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "object_record_id", object_record_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Object Record

Params:
- object_name::String (required)
- object_record_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_object_record_id_get(_api::DefaultApi, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_get(_api, object_name, object_record_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_object_record_id_get(_api::DefaultApi, response_stream::Channel, object_name::String, object_record_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_object_record_id_get(_api, object_name, object_record_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_post(_api::DefaultApi, object_name::String; id_param=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_no_triggers=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_post_DefaultApi, "/vobjects/{object_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "idParam", id_param; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-MigrationMode", x_vault_a_p_i_migration_mode)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-NoTriggers", x_vault_a_p_i_no_triggers)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create & Upsert Object Records

Params:
- object_name::String (required)
- id_param::String
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_migration_mode::Bool
- x_vault_a_p_i_no_triggers::Bool
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_post(_api::DefaultApi, object_name::String; id_param=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_no_triggers=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_post(_api, object_name; id_param=id_param, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_no_triggers=x_vault_a_p_i_no_triggers, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_post(_api::DefaultApi, response_stream::Channel, object_name::String; id_param=nothing, authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_no_triggers=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_post(_api, object_name; id_param=id_param, authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_no_triggers=x_vault_a_p_i_no_triggers, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_put_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_put(_api::DefaultApi, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_no_triggers=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_vobjects_object_name_put_DefaultApi, "/vobjects/{object_name}", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-MigrationMode", x_vault_a_p_i_migration_mode)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-NoTriggers", x_vault_a_p_i_no_triggers)  # type Bool
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Update Object Records

Params:
- object_name::String (required)
- authorization::String
- content_type::String
- accept::String
- x_vault_a_p_i_migration_mode::Bool
- x_vault_a_p_i_no_triggers::Bool
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_put(_api::DefaultApi, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_no_triggers=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_put(_api, object_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_no_triggers=x_vault_a_p_i_no_triggers, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_put(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, content_type=nothing, accept=nothing, x_vault_a_p_i_migration_mode=nothing, x_vault_a_p_i_no_triggers=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_put(_api, object_name; authorization=authorization, content_type=content_type, accept=accept, x_vault_a_p_i_migration_mode=x_vault_a_p_i_migration_mode, x_vault_a_p_i_no_triggers=x_vault_a_p_i_no_triggers, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_roles_delete_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_roles_delete(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_vobjects_object_name_roles_delete_DefaultApi, "/vobjects/{object_name}/roles", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Remove Users & Groups from Roles on Object Records

Params:
- object_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_roles_delete(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_roles_delete(_api, object_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_roles_delete(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_roles_delete(_api, object_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_object_name_roles_post_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_object_name_roles_post(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_vobjects_object_name_roles_post_DefaultApi, "/vobjects/{object_name}/roles", [])
    OpenAPI.Clients.set_param(_ctx.path, "object_name", object_name)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Content-Type", content_type)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Assign Users & Groups to Roles on Object Records

Params:
- object_name::String (required)
- authorization::String
- accept::String
- content_type::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_object_name_roles_post(_api::DefaultApi, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_roles_post(_api, object_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_object_name_roles_post(_api::DefaultApi, response_stream::Channel, object_name::String; authorization=nothing, accept=nothing, content_type=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_object_name_roles_post(_api, object_name; authorization=authorization, accept=accept, content_type=content_type, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_vobjects_outbound_package_v_package_id_dependencies_get_DefaultApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_vobjects_outbound_package_v_package_id_dependencies_get(_api::DefaultApi, package_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_vobjects_outbound_package_v_package_id_dependencies_get_DefaultApi, "/vobjects/outbound_package__v/{package_id}/dependencies", [])
    OpenAPI.Clients.set_param(_ctx.path, "package_id", package_id)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Authorization", authorization)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "Accept", accept)  # type String
    OpenAPI.Clients.set_param(_ctx.header, "X-VaultAPI-ClientID", x_vault_a_p_i_client_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieve Outbound Package Dependencies

Params:
- package_id::String (required)
- authorization::String
- accept::String
- x_vault_a_p_i_client_i_d::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function vobjects_outbound_package_v_package_id_dependencies_get(_api::DefaultApi, package_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_outbound_package_v_package_id_dependencies_get(_api, package_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function vobjects_outbound_package_v_package_id_dependencies_get(_api::DefaultApi, response_stream::Channel, package_id::String; authorization=nothing, accept=nothing, x_vault_a_p_i_client_i_d=nothing, _mediaType=nothing)
    _ctx = _oacinternal_vobjects_outbound_package_v_package_id_dependencies_get(_api, package_id; authorization=authorization, accept=accept, x_vault_a_p_i_client_i_d=x_vault_a_p_i_client_i_d, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export api_get
export api_mdl_components_component_type_and_record_name_files_get
export api_mdl_components_component_type_and_record_name_get
export api_mdl_execute_async_job_id_results_get
export api_mdl_execute_async_post
export api_mdl_execute_post
export api_mdl_files_post
export audittrail_audit_trail_type_get
export auth_discovery_post
export auth_oauth_session_oath_oidc_profile_id_post
export auth_post
export code_class_name_delete
export code_class_name_disable_put
export code_class_name_enable_put
export code_class_name_get
export code_profiler_get
export code_profiler_post
export code_profiler_session_name_actions_end_post
export code_profiler_session_name_delete
export code_profiler_session_name_get
export code_profiler_session_name_results_get
export code_put
export composites_trees_edl_hierarchy_or_template_actions_listnodes_post
export composites_trees_edl_hierarchy_or_template_get
export composites_trees_edl_hierarchy_v_parent_node_id_children_get
export composites_trees_edl_hierarchy_v_parent_node_id_children_put
export configuration_component_type_and_record_name_get
export configuration_component_type_get
export configuration_object_name_and_object_type_get
export configuration_objecttype_get
export configuration_role_assignment_rule_delete
export configuration_role_assignment_rule_get
export configuration_role_assignment_rule_post
export configuration_role_assignment_rule_put
export delegation_login_post
export delegation_vaults_get
export keep_alive_post
export limits_get
export logs_api_usage_get
export logs_code_debug_get
export logs_code_debug_id_actions_reset_delete
export logs_code_debug_id_actions_reset_post
export logs_code_debug_id_files_get
export logs_code_debug_id_get
export logs_code_debug_post
export logs_code_runtime_get
export messages_message_type_actions_import_post
export messages_message_type_language_lang_actions_export_post
export metadata_audittrail_audit_trail_type_get
export metadata_audittrail_get
export metadata_components_component_type_get
export metadata_components_get
export metadata_objects_binders_templates_bindernodes_get
export metadata_objects_binders_templates_get
export metadata_objects_documents_annotations_placemarks_types_placemark_type_get
export metadata_objects_documents_annotations_references_types_reference_type_get
export metadata_objects_documents_annotations_types_annotation_type_get
export metadata_objects_documents_events_event_type_types_event_subtype_get
export metadata_objects_documents_events_get
export metadata_objects_documents_lock_get
export metadata_objects_documents_properties_find_common_post
export metadata_objects_documents_properties_get
export metadata_objects_documents_templates_get
export metadata_objects_documents_types_get
export metadata_objects_documents_types_type_get
export metadata_objects_documents_types_type_relationships_get
export metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get
export metadata_objects_documents_types_type_subtypes_subtype_get
export metadata_objects_groups_get
export metadata_objects_securitypolicies_get
export metadata_objects_users_get
export metadata_query_archived_documents_relationships_document_signature_sysr_get
export metadata_query_documents_relationships_document_signature_sysr_get
export metadata_vobjects_get
export metadata_vobjects_object_name_actions_canceldeployment_post
export metadata_vobjects_object_name_fields_object_field_name_get
export metadata_vobjects_object_name_get
export metadata_vobjects_object_name_page_layouts_get
export metadata_vobjects_object_name_page_layouts_layout_name_get
export notifications_histories_get
export object_workflow_actions_action_get
export object_workflow_actions_action_post
export object_workflow_actions_canceltasks_post
export object_workflow_actions_cancelworkflows_post
export object_workflow_actions_get
export object_workflow_actions_reassigntasks_post
export object_workflow_actions_replaceworkflowowner_post
export objects_binders_actions_export_job_id_results_get
export objects_binders_binder_id_actions_export_post
export objects_binders_binder_id_actions_post
export objects_binders_binder_id_binding_rule_put
export objects_binders_binder_id_delete
export objects_binders_binder_id_documents_node_id_binding_rule_put
export objects_binders_binder_id_documents_post
export objects_binders_binder_id_documents_section_id_delete
export objects_binders_binder_id_documents_section_id_put
export objects_binders_binder_id_get
export objects_binders_binder_id_post
export objects_binders_binder_id_put
export objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete
export objects_binders_binder_id_sections_node_id_binding_rule_put
export objects_binders_binder_id_sections_node_id_put
export objects_binders_binder_id_sections_post
export objects_binders_binder_id_sections_section_id_delete
export objects_binders_binder_id_sections_section_id_get
export objects_binders_binder_id_versions_get
export objects_binders_binder_id_versions_major_version_minor_version_actions_export_post
export objects_binders_binder_id_versions_major_version_minor_version_delete
export objects_binders_binder_id_versions_major_version_minor_version_get
export objects_binders_binder_id_versions_major_version_minor_version_put
export objects_binders_binder_id_versions_major_version_minor_version_relationships_post
export objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete
export objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get
export objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get
export objects_binders_id_roles_get
export objects_binders_id_roles_post
export objects_binders_id_roles_role_name_get
export objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get
export objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get
export objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_put
export objects_binders_lifecycle_actions_post
export objects_binders_lifecycle_actions_user_action_name_put
export objects_binders_post
export objects_binders_templates_get
export objects_binders_templates_post
export objects_binders_templates_put
export objects_binders_templates_template_name_bindernodes_get
export objects_binders_templates_template_name_bindernodes_post
export objects_binders_templates_template_name_bindernodes_put
export objects_binders_templates_template_name_delete
export objects_binders_templates_template_name_get
export objects_deletions_documents_get
export objects_deletions_vobjects_object_name_get
export objects_documents_actions_get
export objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get
export objects_documents_actions_workflow_name_get
export objects_documents_actions_workflow_name_post
export objects_documents_annotations_batch_delete
export objects_documents_annotations_batch_post
export objects_documents_annotations_batch_put
export objects_documents_annotations_replies_batch_post
export objects_documents_attachments_batch_delete
export objects_documents_attachments_batch_post
export objects_documents_attachments_batch_put
export objects_documents_batch_actions_fileextract_job_id_results_get
export objects_documents_batch_actions_fileextract_post
export objects_documents_batch_actions_reclassify_put
export objects_documents_batch_actions_rerender_post
export objects_documents_batch_delete
export objects_documents_batch_lock_delete
export objects_documents_batch_post
export objects_documents_batch_put
export objects_documents_doc_id_anchors_get
export objects_documents_doc_id_annotations_file_get
export objects_documents_doc_id_annotations_file_post
export objects_documents_doc_id_attachments_attachment_id_delete
export objects_documents_doc_id_attachments_attachment_id_file_get
export objects_documents_doc_id_attachments_attachment_id_get
export objects_documents_doc_id_attachments_attachment_id_put
export objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete
export objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get
export objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get
export objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post
export objects_documents_doc_id_attachments_attachment_id_versions_get
export objects_documents_doc_id_attachments_file_get
export objects_documents_doc_id_attachments_get
export objects_documents_doc_id_attachments_post
export objects_documents_doc_id_audittrail_get
export objects_documents_doc_id_delete
export objects_documents_doc_id_events_get
export objects_documents_doc_id_file_get
export objects_documents_doc_id_get
export objects_documents_doc_id_lock_delete
export objects_documents_doc_id_lock_get
export objects_documents_doc_id_lock_post
export objects_documents_doc_id_major_version_minor_version_attachments_file_get
export objects_documents_doc_id_post
export objects_documents_doc_id_put
export objects_documents_doc_id_renditions_get
export objects_documents_doc_id_renditions_rendition_type_delete
export objects_documents_doc_id_renditions_rendition_type_get
export objects_documents_doc_id_renditions_rendition_type_post
export objects_documents_doc_id_renditions_rendition_type_put
export objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete
export objects_documents_doc_id_version_major_version_minor_version_attachments_get
export objects_documents_doc_id_versions_get
export objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get
export objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get
export objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get
export objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post
export objects_documents_doc_id_versions_major_version_minor_version_annotations_get
export objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get
export objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get
export objects_documents_doc_id_versions_major_version_minor_version_delete
export objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get
export objects_documents_doc_id_versions_major_version_minor_version_events_post
export objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get
export objects_documents_doc_id_versions_major_version_minor_version_file_get
export objects_documents_doc_id_versions_major_version_minor_version_get
export objects_documents_doc_id_versions_major_version_minor_version_put
export objects_documents_doc_id_versions_major_version_minor_version_relationships_get
export objects_documents_doc_id_versions_major_version_minor_version_relationships_post
export objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete
export objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get
export objects_documents_doc_id_versions_major_version_minor_version_renditions_get
export objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete
export objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get
export objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post
export objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put
export objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get
export objects_documents_get
export objects_documents_id_roles_get
export objects_documents_id_roles_post
export objects_documents_id_roles_role_name_get
export objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get
export objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get
export objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_put
export objects_documents_lifecycle_actions_post
export objects_documents_lifecycle_actions_user_action_name_put
export objects_documents_post
export objects_documents_relationships_batch_delete
export objects_documents_relationships_batch_post
export objects_documents_renditions_batch_delete
export objects_documents_renditions_batch_post
export objects_documents_roles_batch_delete
export objects_documents_roles_batch_post
export objects_documents_templates_get
export objects_documents_templates_post
export objects_documents_templates_put
export objects_documents_templates_template_name_delete
export objects_documents_templates_template_name_file_get
export objects_documents_templates_template_name_get
export objects_documents_templates_template_name_put
export objects_documents_tokens_post
export objects_documents_versions_batch_actions_fileextract_post
export objects_documents_versions_batch_delete
export objects_documents_versions_batch_post
export objects_domain_get
export objects_domains_get
export objects_edl_matched_documents_batch_actions_add_post
export objects_edl_matched_documents_batch_actions_remove_post
export objects_groups_auto_get
export objects_groups_get
export objects_groups_group_id_delete
export objects_groups_group_id_get
export objects_groups_group_id_put
export objects_groups_post
export objects_licenses_get
export objects_objectworkflows_actions_get
export objects_objectworkflows_actions_workflow_name_get
export objects_objectworkflows_actions_workflow_name_post
export objects_objectworkflows_get
export objects_objectworkflows_tasks_get
export objects_objectworkflows_tasks_task_id_actions_accept_post
export objects_objectworkflows_tasks_task_id_actions_cancel_post
export objects_objectworkflows_tasks_task_id_actions_complete_post
export objects_objectworkflows_tasks_task_id_actions_get
export objects_objectworkflows_tasks_task_id_actions_mdwaccept_post
export objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post
export objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post
export objects_objectworkflows_tasks_task_id_actions_mdwreassign_post
export objects_objectworkflows_tasks_task_id_actions_reassign_post
export objects_objectworkflows_tasks_task_id_actions_task_action_get
export objects_objectworkflows_tasks_task_id_actions_undoaccept_post
export objects_objectworkflows_tasks_task_id_actions_updateduedate_post
export objects_objectworkflows_tasks_task_id_get
export objects_objectworkflows_workflow_id_actions_get
export objects_objectworkflows_workflow_id_actions_workflow_action_get
export objects_objectworkflows_workflow_id_actions_workflow_action_post
export objects_objectworkflows_workflow_id_get
export objects_picklists_get
export objects_picklists_picklist_name_get
export objects_picklists_picklist_name_picklist_value_name_delete
export objects_picklists_picklist_name_picklist_value_name_put
export objects_picklists_picklist_name_post
export objects_picklists_picklist_name_put
export objects_sandbox_actions_buildproduction_post
export objects_sandbox_actions_promoteproduction_post
export objects_sandbox_actions_recheckusage_post
export objects_sandbox_batch_changesize_post
export objects_sandbox_entitlements_set_post
export objects_sandbox_get
export objects_sandbox_name_delete
export objects_sandbox_post
export objects_sandbox_snapshot_api_name_actions_update_post
export objects_sandbox_snapshot_api_name_actions_upgrade_post
export objects_sandbox_snapshot_api_name_delete
export objects_sandbox_snapshot_get
export objects_sandbox_snapshot_post
export objects_sandbox_vault_id_actions_refresh_post
export objects_sandbox_vault_id_get
export objects_securitypolicies_get
export objects_securitypolicies_security_policy_name_get
export objects_users_get
export objects_users_id_get
export objects_users_id_permissions_get
export objects_users_id_put
export objects_users_me_get
export objects_users_me_password_post
export objects_users_me_permissions_get
export objects_users_me_put
export objects_users_post
export objects_users_put
export objects_users_user_id_delete
export objects_users_user_id_vault_membership_vault_id_put
export objects_vault_actions_compare_post
export objects_vault_actions_configreport_post
export query_components_post
export query_next_page_post
export query_post
export query_previous_page_post
export scim_v2_me_get
export scim_v2_me_put
export scim_v2_resource_types_get
export scim_v2_resource_types_type_get
export scim_v2_schemas_get
export scim_v2_schemas_id_get
export scim_v2_service_provider_config_get
export scim_v2_type_get
export scim_v2_type_id_get
export scim_v2_users_get
export scim_v2_users_id_get
export scim_v2_users_id_put
export scim_v2_users_post
export services_certificate_cert_id_get
export services_configuration_mode_actions_disable_post
export services_configuration_mode_actions_enable_post
export services_directdata_files_get
export services_directdata_files_name_get
export services_file_staging_items_content_item_get
export services_file_staging_items_item_delete
export services_file_staging_items_item_get
export services_file_staging_items_item_put
export services_file_staging_items_post
export services_file_staging_upload_get
export services_file_staging_upload_post
export services_file_staging_upload_upload_session_id_delete
export services_file_staging_upload_upload_session_id_get
export services_file_staging_upload_upload_session_id_parts_get
export services_file_staging_upload_upload_session_id_post
export services_file_staging_upload_upload_session_id_put
export services_jobs_histories_get
export services_jobs_job_id_errors_get
export services_jobs_job_id_get
export services_jobs_job_id_summary_get
export services_jobs_job_id_tasks_get
export services_jobs_monitors_get
export services_jobs_start_now_job_id_post
export services_loader_extract_post
export services_loader_job_id_tasks_task_id_failurelog_get
export services_loader_job_id_tasks_task_id_results_get
export services_loader_job_id_tasks_task_id_results_renditions_get
export services_loader_job_id_tasks_task_id_successlog_get
export services_loader_load_post
export services_package_actions_validate_post
export services_package_post
export services_package_put
export services_queues_get
export services_queues_queue_name_actions_disable_delivery_put
export services_queues_queue_name_actions_enable_delivery_put
export services_queues_queue_name_actions_reset_put
export services_queues_queue_name_get
export services_vobject_vault_package_v_package_id_actions_validate_post
export session_delete
export uicode_distributions_distribution_name_code_get
export uicode_distributions_distribution_name_delete
export uicode_distributions_distribution_name_get
export uicode_distributions_get
export uicode_distributions_post
export vobject_vault_package_v_package_id_actions_deploy_post
export vobject_vault_package_v_package_id_actions_deploy_results_get
export vobjects_cascadedelete_results_object_name_job_status_job_id_get
export vobjects_deepcopy_results_object_name_job_status_job_id_get
export vobjects_edl_item_v_actions_createplaceholder_post
export vobjects_merges_job_id_log_get
export vobjects_merges_job_id_results_get
export vobjects_merges_job_id_status_get
export vobjects_object_name_actions_action_name_post
export vobjects_object_name_actions_changetype_post
export vobjects_object_name_actions_merge_post
export vobjects_object_name_actions_recalculaterollups_get
export vobjects_object_name_actions_recalculaterollups_post
export vobjects_object_name_actions_updatecorporatecurrency_put
export vobjects_object_name_attachments_batch_delete
export vobjects_object_name_attachments_batch_post
export vobjects_object_name_attachments_batch_put
export vobjects_object_name_delete
export vobjects_object_name_id_roles_role_name_get
export vobjects_object_name_object_record_id_actions_action_name_get
export vobjects_object_name_object_record_id_actions_action_name_post
export vobjects_object_name_object_record_id_actions_cascadedelete_post
export vobjects_object_name_object_record_id_actions_deepcopy_post
export vobjects_object_name_object_record_id_actions_get
export vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get
export vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post
export vobjects_object_name_object_record_id_attachment_fields_file_get
export vobjects_object_name_object_record_id_attachments_attachment_id_delete
export vobjects_object_name_object_record_id_attachments_attachment_id_get
export vobjects_object_name_object_record_id_attachments_attachment_id_put
export vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete
export vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get
export vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get
export vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post
export vobjects_object_name_object_record_id_attachments_attachment_id_versions_get
export vobjects_object_name_object_record_id_attachments_file_get
export vobjects_object_name_object_record_id_attachments_get
export vobjects_object_name_object_record_id_attachments_post
export vobjects_object_name_object_record_id_audittrail_get
export vobjects_object_name_object_record_id_get
export vobjects_object_name_post
export vobjects_object_name_put
export vobjects_object_name_roles_delete
export vobjects_object_name_roles_post
export vobjects_outbound_package_v_package_id_dependencies_get
