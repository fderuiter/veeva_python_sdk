openapi: 3.1.0
jsonSchemaDialect: "https://spec.openapis.org/oas/3.1/dialect/base"
info:
  title: Mednet EDC API
  description: 'The Mednet EDC (Electronic Data Capture) REST API provides a single-point
    of access for reading data stored across iMednet data services.

    This specification documents all available endpoints in the latest version of
    the API.

    '
  version: 1.0.15
servers:
- url: https://edc.prod.imednetapi.com/api/v1/edc
  description: Production EDC API server
security:
  - apiKeyAuth: []
    securityKeyAuth: []
tags:
  - name: Studies
    description: "Operations related to retrieving studies accessible via the API key."
  - name: Sites
    description: "Operations related to site management and retrieval within a study."
  - name: Subjects
    description: "Operations for retrieving subject (participant) information within a study."
  - name: Forms
    description: "Operations for retrieving form (eCRF) definitions and metadata in a study."
  - name: Variables
    description: "Operations for retrieving variable (field) definitions for study forms."
  - name: Intervals
    description: "Operations for retrieving visit schedule definitions (intervals) in a study."
  - name: Visits
    description: "Operations for retrieving subject visit instances recorded in a study."
  - name: Records
    description: "Operations for retrieving and submitting study record data (eCRF records)."
  - name: Record Revisions
    description: "Operations for retrieving audit trail entries (record revisions) in a study."
  - name: Queries
    description: "Operations for retrieving data queries and their history in a study."
  - name: Codings
    description: "Operations for retrieving coded data entries (e.g., coded terms) in a study."
  - name: Administration
    description: "Administrative operations, such as listing users and their roles in a study."
  - name: Jobs
    description: "Operations for checking the status of asynchronous jobs (e.g., data import jobs)."
paths:
  /studies:
    get:
      tags:
      - Studies
      summary: List studies accessible by API key
      operationId: listStudies
      parameters:
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/FilterParam'
      responses:
        '200':
          description: Successful response with list of studies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyList'
              examples:
                studiesList:
                  $ref: '#/components/examples/ExampleStudiesList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/sites:
    get:
      tags:
      - Sites
      summary: List sites for a study
      operationId: listSites
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/FilterParam'
      responses:
        '200':
          description: Successful response with list of sites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteList'
              examples:
                sitesList:
                  $ref: '#/components/examples/ExampleSitesList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/forms:
    get:
      tags:
      - Forms
      summary: List forms in a study
      operationId: listForms
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/FilterParam'
      responses:
        '200':
          description: Successful response with list of forms
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormList'
              examples:
                formsList:
                  $ref: '#/components/examples/ExampleFormsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/intervals:
    get:
      tags:
      - Intervals
      summary: List intervals (visit definitions) in a study
      operationId: listIntervals
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/FilterParam'
      responses:
        '200':
          description: Successful response with list of intervals
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntervalList'
              examples:
                intervalsList:
                  $ref: '#/components/examples/ExampleIntervalsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/visits:
    get:
      tags:
      - Visits
      summary: List visits (subject visit instances) in a study
      operationId: listVisits
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/FilterParam'
      responses:
        '200':
          description: Successful response with list of visits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitList'
              examples:
                visitsList:
                  $ref: '#/components/examples/ExampleVisitsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/subjects:
    get:
      tags:
      - Subjects
      summary: List subjects in a study
      operationId: listSubjects
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/FilterParam'
      responses:
        '200':
          description: Successful response with list of subjects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectList'
              examples:
                subjectsList:
                  $ref: '#/components/examples/ExampleSubjectsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/users:
    get:
      tags:
      - Administration
      summary: List users and their roles in a study
      operationId: listUsers
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/IncludeInactiveParam'
      responses:
        '200':
          description: Successful response with list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
              examples:
                usersList:
                  $ref: '#/components/examples/ExampleUsersList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/variables:
    get:
      tags:
      - Variables
      summary: List variables (fields) in a study
      operationId: listVariables
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/FilterParam'
      responses:
        '200':
          description: Successful response with list of variables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableList'
              examples:
                variablesList:
                  $ref: '#/components/examples/ExampleVariablesList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/codings:
    get:
      tags:
      - Codings
      summary: List coding activities in a study
      operationId: listCodings
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/FilterParam'
      responses:
        '200':
          description: Successful response with list of coding entries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodingList'
              examples:
                codingsList:
                  $ref: '#/components/examples/ExampleCodingsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/queries:
    get:
      tags:
      - Queries
      summary: List data queries in a study
      operationId: listQueries
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/FilterParam'
      responses:
        '200':
          description: Successful response with list of queries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryList'
              examples:
                queriesList:
                  $ref: '#/components/examples/ExampleQueriesList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/recordRevisions:
    get:
      tags:
      - "Record Revisions"
      summary: List record revisions (audit trail entries) in a study
      operationId: listRecordRevisions
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/FilterParam'
      responses:
        '200':
          description: Successful response with list of record revisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordRevisionList'
              examples:
                recordRevisionsList:
                  $ref: '#/components/examples/ExampleRecordRevisionsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/records:
    get:
      tags:
      - Records
      summary: List records (eCRF instances) in a study
      operationId: listRecords
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/PageParam'
      - $ref: '#/components/parameters/SizeParam'
      - $ref: '#/components/parameters/SortParam'
      - $ref: '#/components/parameters/FilterParam'
      - $ref: '#/components/parameters/RecordDataFilterParam'
      responses:
        '200':
          description: Successful response with list of records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordList'
              examples:
                recordsList:
                  $ref: '#/components/examples/ExampleRecordsList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
      - Records
      summary: Add new record or update subject/record data
      operationId: createRecords
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      requestBody:
        description: An array of record objects defining the operation to perform
          (subject registration, record creation, or scheduled record update).
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordCreateRequest'
            examples:
              registerSubject:
                $ref: '#/components/examples/ExampleRegisterSubjectRequest'
              updateRecord:
                $ref: '#/components/examples/ExampleUpdateScheduledRecordRequest'
              newRecord:
                $ref: '#/components/examples/ExampleCreateNewRecordRequest'
      responses:
        '202':
          description: Accepted request for record creation. Returns a job identifier
            to check status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordJobStatus'
                title: createRecords_202_response
              examples:
                recordPostAccepted:
                  $ref: '#/components/examples/ExamplePostRecordResponse'
          links:
            checkJobStatus:
              $ref: '#/components/links/CheckJobStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /studies/{studyKey}/jobs/{batchId}:
    get:
      tags:
      - Jobs
      summary: Retrieve job status by batch ID
      operationId: getJobStatus
      parameters:
      - $ref: '#/components/parameters/StudyKeyPath'
      - $ref: '#/components/parameters/BatchIdPath'
      responses:
        '200':
          description: Successful response with job status information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
                title: getJobStatus_200_response
              examples:
                jobStatus:
                  $ref: '#/components/examples/ExampleJobStatus'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    Metadata:
      type: object
      properties:
        status:
          type: string
          description: HTTP status of the response (e.g., OK or ERROR)
        method:
          type: string
          description: HTTP method of the request
        path:
          type: string
          description: Requested URI path
        timestamp:
          type: string
          format: date-time
          description: Timestamp when response was generated
        error:
          type: object
          description: Error details if an error occurred
          properties:
            message:
              type: string
              description: Error message describing the issue
          additionalProperties: true
          title: components_schemas_Metadata_error
      title: Metadata
    Pagination:
      type: object
      properties:
        currentPage:
          type: integer
          description: Current index page returned
        size:
          type: integer
          description: Number of items per page returned
        totalPages:
          type: integer
          description: Total number of pages available
        totalElements:
          type: integer
          description: Total number of elements (items) available
        sort:
          type: array
          items:
            $ref: '#/components/schemas/Sort'
      title: Pagination
    Sort:
      type: object
      properties:
        property:
          type: string
          description: Name of the property by which the result is sorted
        direction:
          type: string
          enum: [ASC, DESC]
          description: Sort direction (ASC or DESC)
      title: Sort
    Study:
      type: object
      properties:
        sponsorKey:
          type: string
          description: Sponsor key that this study belongs to
        studyKey:
          type: string
          description: Unique study key
        studyId:
          type: integer
          description: Mednet study ID (internal numeric identifier)
        studyName:
          type: string
          description: Name of the study
        studyDescription:
          type: string
          description: Description of the study
        studyType:
          type: string
          description: Type of study (e.g., STUDY)
        dateCreated:
          type: string
          description: Date when the study record was created
        dateModified:
          type: string
          description: Date when the study record was last modified
      title: Study
    Site:
      type: object
      properties:
        studyKey:
          type: string
          description: Unique study key
        siteId:
          type: integer
          description: Unique site ID
        siteName:
          type: string
          description: Name of the site
        siteEnrollmentStatus:
          type: string
          description: Enrollment status of the site
        dateCreated:
          type: string
          description: Date when this site was created
        dateModified:
          type: string
          description: Date when this site was last modified
      title: Site
    Form:
      type: object
      properties:
        studyKey:
          type: string
          description: Unique study key
        formId:
          type: integer
          description: Mednet Form ID
        formKey:
          type: string
          description: User-defined form key
        formName:
          type: string
          description: Name of the form (eCRF)
        formType:
          type: string
          description: Type of the form (e.g., Subject or Site)
        revision:
          type: integer
          description: Number of modifications (revisions) of the form metadata
        embeddedLog:
          type: boolean
          description: Whether the form has an embedded log
        enforceOwnership:
          type: boolean
          description: Whether the form enforces record ownership
        userAgreement:
          type: boolean
          description: Whether the form requires a user agreement
        subjectRecordReport:
          type: boolean
          description: Whether the form is marked as a subject record report
        unscheduledVisit:
          type: boolean
          description: Whether the form is included in unscheduled visits
        otherForms:
          type: boolean
          description: Whether the form is included in Other Forms category
        eproForm:
          type: boolean
          description: Whether the form is an ePRO (electronic patient reported outcome)
            form
        allowCopy:
          type: boolean
          description: Whether the form allows copying of data
        disabled:
          type: boolean
          description: Whether the form is soft-deleted (disabled)
        dateCreated:
          type: string
          description: Date when this form was created
        dateModified:
          type: string
          description: Date when this form was last modified
      title: Form
    Interval:
      type: object
      properties:
        studyKey:
          type: string
          description: Unique study key
        intervalId:
          type: integer
          description: Unique system identifier for the interval (visit definition)
        intervalName:
          type: string
          description: Name of the interval (visit) as defined in the study
        intervalDescription:
          type: string
          description: Description of the interval (visit)
        intervalSequence:
          type: integer
          description: Sequence number of the interval in the schedule
        intervalGroupId:
          type: integer
          description: Identifier for the interval group (if intervals are grouped)
        intervalGroupName:
          type: string
          description: Name of the interval group
        timeline:
          type: string
          description: Type of interval visit window (e.g., None, Due Date, Start
            - End Date, Actual Date)
        definedUsingInterval:
          type: string
          description: "Baseline interval used for calculating this interval\u2019\
            s dates"
        windowCalculationForm:
          type: string
          description: Baseline form (name) from which the calculation date is taken
        windowCalculationDate:
          type: string
          description: Baseline field (variable name) from which the calculation date
            is taken
        actualDateForm:
          type: string
          description: Form used to capture the actual date for this interval
        actualDate:
          type: string
          description: Field (variable name) used to capture the actual date for this
            interval
        dueDateWillBeIn:
          type: integer
          description: Number of days from the calculation date when the interval
            is due
        negativeSlack:
          type: integer
          description: Number of days before the due date that are allowed (negative
            window)
        positiveSlack:
          type: integer
          description: Number of days after the due date that are allowed (positive
            window)
        eproGracePeriod:
          type: integer
          description: Number of days of grace period for ePRO completion after due
            date
        forms:
          type: array
          description: List of forms that are scheduled in this interval
          items:
            type: object
            properties:
              formId:
                type: integer
                description: Form ID scheduled in the interval
              formKey:
                type: string
                description: Form key scheduled in the interval
              formName:
                type: string
                description: Form name scheduled in the interval
            title: components_schemas_Interval_forms_item
        disabled:
          type: boolean
          description: Whether the interval is soft-deleted (disabled)
        dateCreated:
          type: string
          description: Date when this interval was created
        dateModified:
          type: string
          description: Date when this interval was last modified
      title: Interval
    Visit:
      type: object
      properties:
        studyKey:
          type: string
          description: Unique study key
        visitId:
          type: integer
          description: Unique system identifier for the subject visit instance
        intervalId:
          type: integer
          description: Unique system identifier of the interval definition for this
            visit
        intervalName:
          type: string
          description: Name of the interval (visit) for this visit instance
        subjectId:
          type: integer
          description: Mednet subject ID of the subject
        subjectKey:
          type: string
          description: Protocol-assigned subject identifier
        startDate:
          type: string
          description: Start date of the visit window (in YYYY-MM-DD format)
        endDate:
          type: string
          description: End date of the visit window (in YYYY-MM-DD format)
        dueDate:
          type: string
          nullable: true
          description: Due date of the visit (in YYYY-MM-DD format), if applicable
        visitDate:
          type: string
          description: Actual date the visit took place (in YYYY-MM-DD format)
        visitDateForm:
          type: string
          description: Name of the form used to capture the actual visit date
        visitDateQuestion:
          type: string
          description: Variable name of the field capturing the actual visit date
        deleted:
          type: boolean
          description: Whether the visit instance is marked as deleted
        dateCreated:
          type: string
          description: Date when this visit record was created
        dateModified:
          type: string
          description: Date when this visit record was last modified
      title: Visit
    Subject:
      type: object
      properties:
        studyKey:
          type: string
          description: Unique study key
        subjectId:
          type: integer
          description: Mednet subject ID (internal numeric ID)
        subjectOid:
          type: string
          description: Client-assigned subject object identifier (OID)
        subjectKey:
          type: string
          description: Protocol-assigned subject identifier (display ID)
        subjectStatus:
          type: string
          description: Current status of the subject (e.g., Enrolled)
        siteId:
          type: integer
          description: Mednet site ID the subject is associated with
        siteName:
          type: string
          description: Name of the site the subject is associated with
        deleted:
          type: boolean
          description: Whether the subject is marked as deleted
        enrollmentStartDate:
          type: string
          description: "Subject\u2019s enrollment start date"
        dateCreated:
          type: string
          description: Date when this subject record was created
        dateModified:
          type: string
          description: Date when this subject record was last modified
        keywords:
          type: array
          description: List of keywords associated with the subject
          items:
            $ref: '#/components/schemas/Keyword'
      title: Subject
    Keyword:
      type: object
      properties:
        keywordName:
          type: string
          description: Name of the keyword
        keywordKey:
          type: string
          description: Key of the keyword (short code)
        keywordId:
          type: integer
          description: Internal keyword ID
        dateAdded:
          type: string
          description: Date when this keyword was added
      title: Keyword
    User:
      type: object
      properties:
        userId:
          type: string
          description: Unique user ID (UUID)
        login:
          type: string
          description: User login name
        firstName:
          type: string
          description: User first name
        lastName:
          type: string
          description: User last name
        email:
          type: string
          description: User email address
        userActiveInStudy:
          type: boolean
          description: Whether the user is active in the given study
        roles:
          type: array
          description: Roles that the user has in the study
          items:
            $ref: '#/components/schemas/Role'
      title: User
    Role:
      type: object
      properties:
        dateCreated:
          type: array
          items:
            type: integer
          description: Timestamp when the role assignment was created (as [year, month,
            day, hour, minute, second, nanosecond])
        dateModified:
          type: array
          items:
            type: integer
          description: Timestamp when the role assignment was last modified
        roleId:
          type: string
          description: Unique role ID (UUID)
        communityId:
          type: integer
          description: Community ID or level associated with the role
        name:
          type: string
          description: Name of the role
        description:
          type: string
          description: Description of the role
        level:
          type: integer
          description: Role level or hierarchy
        type:
          type: string
          description: Role type/category
        inactive:
          type: boolean
          description: Whether the role is inactive
      title: Role
    Variable:
      type: object
      properties:
        studyKey:
          type: string
          description: Unique study key
        variableId:
          type: integer
          description: Mednet variable ID
        variableType:
          type: string
          enum: [TEXT, TEXTAREA, RADIO, CHECKBOX, DROPDOWN, DATE, NUMBER]
          description: Type of the variable (field type), e.g., RADIO, TEXT, etc.
        variableName:
          type: string
          description: Name of the variable (question text or label)
        sequence:
          type: integer
          description: Sequence of the variable on the form
        revision:
          type: integer
          description: Number of modifications of the variable (via form metadata
            revisions)
        disabled:
          type: boolean
          description: Whether the variable is marked as disabled (deleted)
        dateCreated:
          type: string
          description: Date when this variable was created
        dateModified:
          type: string
          description: Date when this variable was last modified
        formId:
          type: integer
          description: ID of the form that this variable belongs to
        variableOid:
          type: string
          description: Client-assigned variable OID
        deleted:
          type: boolean
          description: Whether the variable is marked as deleted
        formKey:
          type: string
          description: Form key of the form that this variable belongs to
        formName:
          type: string
          description: Name of the form that this variable belongs to
        label:
          type: string
          description: User-defined identifier (field name) for the variable
        blinded:
          type: boolean
          description: Whether the variable is flagged as blinded (hidden in certain
            contexts)
      title: Variable
    Coding:
      type: object
      properties:
        studyKey:
          type: string
          description: Unique study key
        siteName:
          type: string
          description: Name of the site associated with the coded data
        siteId:
          type: integer
          description: Site ID associated with the coded data
        subjectId:
          type: integer
          description: Subject ID associated with the coded data
        subjectKey:
          type: string
          description: Subject key (display ID) associated with the coded data
        formId:
          type: integer
          description: Form ID where the coded data originates
        formName:
          type: string
          description: Name of the form where the coded data originates
        formKey:
          type: string
          description: Form key where the coded data originates
        revision:
          type: integer
          description: Revision number of the coding entry
        recordId:
          type: integer
          description: Record ID associated with the coded data
        variable:
          type: string
          description: Variable name (field) that was coded
        value:
          type: string
          description: Original value entered that required coding
        codingId:
          type: integer
          description: Mednet coding ID
        code:
          type: string
          description: Standardized code assigned (e.g., dictionary term)
        codedBy:
          type: string
          description: Name of the user who performed the coding
        reason:
          type: string
          description: Reason for coding or any notes on changes
        dictionaryName:
          type: string
          description: Name of the dictionary used (e.g., MedDRA)
        dictionaryVersion:
          type: string
          description: Version of the dictionary used
        dateCoded:
          type: string
          description: Date when the coding was performed
      title: Coding
    Query:
      type: object
      properties:
        studyKey:
          type: string
          description: Unique study key
        subjectId:
          type: integer
          description: Mednet subject ID associated with the query (if applicable)
        subjectOid:
          type: string
          description: Client-assigned subject OID (if applicable)
        annotationType:
          type: string
          description: Category/type of the query (e.g., subject, record, question)
        annotationId:
          type: integer
          description: Unique system identifier for the query
        type:
          type: string
          nullable: true
          description: System text identifier for the query type/location (subject,
            record, question)
        description:
          type: string
          description: Description of the query (e.g., reason or context)
        recordId:
          type: integer
          description: Record ID associated with the query (if applicable)
        variable:
          type: string
          description: Variable name (field) associated with the query (if applicable)
        subjectKey:
          type: string
          description: Subject display ID associated with the query (if applicable)
        dateCreated:
          type: string
          description: Date when the query was created
        dateModified:
          type: string
          description: Date when the query was last modified
        queryComments:
          type: array
          description: History of comments/actions on the query
          items:
            $ref: '#/components/schemas/QueryComment'
      title: Query
    QueryComment:
      type: object
      properties:
        sequence:
          type: integer
          description: Sequence number of the comment/action in the query history
        annotationStatus:
          type: string
          description: Status of the query after this comment (e.g., Open, Closed)
        user:
          type: string
          description: Username of the user who made the comment or action
        comment:
          type: string
          description: Text of the comment
        closed:
          type: boolean
          description: Whether the query was marked closed at this step
        date:
          type: string
          description: Date of the comment or action
      title: QueryComment
    RecordRevision:
      type: object
      properties:
        studyKey:
          type: string
          description: Unique study key
        recordRevisionId:
          type: integer
          description: Unique system identifier for the record revision
        recordId:
          type: integer
          description: Unique system identifier of the related record
        recordOid:
          type: string
          description: Client-assigned record OID (if any)
        recordRevision:
          type: integer
          description: Revision number of the record (version of the record status)
        dataRevision:
          type: integer
          description: Revision number of the data within the record
        recordStatus:
          type: string
          description: Status of the record at this revision (user-defined status
            label)
        subjectId:
          type: integer
          description: Mednet subject ID related to the record
        subjectOid:
          type: string
          description: Client-assigned subject OID related to the record
        subjectKey:
          type: string
          description: Subject display ID related to the record
        siteId:
          type: integer
          description: Site ID related to the record
        formKey:
          type: string
          description: Form key of the form that the record belongs to
        intervalId:
          type: integer
          description: Interval ID (visit definition) related to the record
        role:
          type: string
          description: Role name of the user who saved the record revision
        user:
          type: string
          description: Username of the user who saved the record revision
        reasonForChange:
          type: string
          description: Reason for change, if provided (for audit trail)
        deleted:
          type: boolean
          description: Whether the record was deleted in this revision
        dateCreated:
          type: string
          description: Date when this record revision was created
      title: RecordRevision
    Record:
      type: object
      properties:
        studyKey:
          type: string
          description: Unique study key
        intervalId:
          type: integer
          description: Interval ID (visit definition) that this record is associated
            with
        formId:
          type: integer
          description: Form ID of the form this record instance belongs to
        formKey:
          type: string
          description: Form key of the form for this record instance
        siteId:
          type: integer
          description: Site ID associated with the record
        recordId:
          type: integer
          description: Unique record ID
        recordOid:
          type: string
          description: Client-assigned record OID
        recordType:
          type: string
          description: Type of record (e.g., SUBJECT for subject-related forms)
        recordStatus:
          type: string
          description: Current status of the record (e.g., Record Incomplete, Record
            Complete)
        deleted:
          type: boolean
          description: Whether the record is marked as deleted
        dateCreated:
          type: string
          description: Date when this record was created
        dateModified:
          type: string
          description: Date when this record was last modified
        subjectId:
          type: integer
          description: Mednet subject ID that this record is associated with
        subjectOid:
          type: string
          description: Client-assigned subject OID for the subject this record is
            associated with
        subjectKey:
          type: string
          description: Subject display ID that this record is associated with
        visitId:
          type: integer
          description: Visit instance ID that this record is associated with (if applicable)
        parentRecordId:
          type: integer
          description: Record ID of the parent record if this record is a subrecord
            (if applicable)
        keywords:
          type: array
          description: List of keywords associated with the record
          items:
            $ref: '#/components/schemas/Keyword'
        recordData:
          type: object
          description: Data fields and values captured in this record. The structure
            is dynamic, with keys corresponding to variable names.
          additionalProperties: true
          title: components_schemas_Record_recordData
      title: Record
    RecordCreateRequest:
      type: array
      description: Array of record objects for creation or update requests
      items:
        type: object
        properties:
          formKey:
            type: string
            description: Form key identifying the eCRF to create or update
          formId:
            type: integer
            description: Form ID identifying the eCRF to create or update (alternative
              to formKey)
          siteName:
            type: string
            description: Name of the site where the record should be created (for
              new subject registration)
          siteId:
            type: integer
            description: Site ID for the record (alternative to siteName)
          subjectKey:
            type: string
            description: Subject identifier (display ID) for which to create or update
              the record
          subjectId:
            type: integer
            description: Subject ID for which to create or update the record (alternative
              to subjectKey)
          subjectOid:
            type: string
            description: Subject OID for which to create or update the record (alternative
              to subjectKey)
          intervalName:
            type: string
            description: Name of the interval (visit) for a scheduled record update
          intervalId:
            type: integer
            description: Interval ID for a scheduled record update (alternative to
              intervalName)
          recordId:
            type: integer
            description: Record ID for updating an existing unscheduled record (if
              applicable)
          recordOid:
            type: string
            description: Record OID for updating an existing unscheduled record (if
              applicable)
          data:
            type: object
            description: Key-value pairs of field names and values for the record
              data
            additionalProperties: true
            title: components_schemas_RecordCreateRequest_item_data
        required:
        - formKey
        - data
        title: components_schemas_RecordCreateRequest_item
      title: RecordCreateRequest
    RecordJobStatus:
      type: object
      properties:
        jobId:
          type: string
          description: Unique job identifier
        batchId:
          type: string
          description: Batch ID used to track the job (identical to jobId in most
            cases)
        state:
          type: string
          description: Current state of the job (e.g., created, completed)
      title: RecordJobStatus
    Job:
      type: object
      properties:
        jobId:
          type: string
          description: Unique job identifier
        batchId:
          type: string
          description: Batch ID associated with the job (useful for linking with record
            creation requests)
        state:
          type: string
          description: State of the job (e.g., completed, pending)
        dateCreated:
          type: string
          description: Timestamp when the job was created
        dateStarted:
          type: string
          description: Timestamp when the job started processing
        dateFinished:
          type: string
          description: Timestamp when the job finished processing
      title: Job
    StudyList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Study'
      title: StudyList
    SiteList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Site'
      title: SiteList
    FormList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Form'
      title: FormList
    IntervalList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
      title: IntervalList
    VisitList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Visit'
      title: VisitList
    SubjectList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Subject'
      title: SubjectList
    UserList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
      title: UserList
    VariableList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Variable'
      title: VariableList
    CodingList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Coding'
      title: CodingList
    QueryList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Query'
      title: QueryList
    RecordRevisionList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/RecordRevision'
      title: RecordRevisionList
    RecordList:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        pagination:
          $ref: '#/components/schemas/Pagination'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Record'
      title: RecordList
  parameters:
    StudyKeyPath:
      name: studyKey
      in: path
      required: true
      description: Study key identifying the study context for the request
      schema:
        type: string
    BatchIdPath:
      name: batchId
      in: path
      required: true
      description: Batch ID of the job to retrieve
      schema:
        type: string
    PageParam:
      name: page
      in: query
      description: Page index to retrieve (0-based)
      schema:
        type: integer
        default: 0
        minimum: 0
        example: 0
    SizeParam:
      name: size
      in: query
      description: Number of items to return per page (max 500)
      schema:
        type: integer
        default: 25
        minimum: 1
        maximum: 500
        example: 25
    SortParam:
      name: sort
      in: query
      description: Sorting criteria in the format `property,ASC` or `property,DESC`.
        Can be repeated.
      schema:
        type: string
    FilterParam:
      name: filter
      in: query
      description: Optional filter criteria to apply, in the format `attribute==value`
        with support for >, >=, <, <=, !=. Multiple criteria can be combined with
        `;` (AND) or `,` (OR).
      schema:
        type: string
    RecordDataFilterParam:
      name: recordDataFilter
      in: query
      description: Optional filter criteria to apply on recordData fields (question
        responses). Supports ==, !=, <, <=, >, >=, =~ (contains) and can combine multiple
        criteria with `;` (AND) or `,` (OR).
      schema:
        type: string
    IncludeInactiveParam:
      name: includeInactive
      in: query
      description: For user listing, whether to include inactive users
      schema:
        type: boolean
        default: false
    XEmailNotifyHeader:
      name: x-email-notify
      in: header
      description: Email address to send notification once job is complete (optional)
      schema:
        type: string
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      name: x-api-key
      in: header
      description: API key provided by iMednet
    securityKeyAuth:
      type: apiKey
      name: x-imn-security-key
      in: header
      description: Security key (secret) provided by iMednet
  responses:
    BadRequest:
      description: Bad request (malformed or invalid input)
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/Metadata'
            example:
              metadata:
                status: ERROR
                error:
                  message: The request was malformed or contains invalid parameters.
    Unauthorized:
      description: Authentication failed or was not provided
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/Metadata'
            example:
              metadata:
                status: ERROR
                error:
                  message: Authentication credentials missing, invalid, or expired.
    Forbidden:
      description: Authenticated but not allowed to access the resource
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/Metadata'
            example:
              metadata:
                status: ERROR
                error:
                  message: Access is forbidden for the provided credentials.
    NotFound:
      description: The requested resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/Metadata'
            example:
              metadata:
                status: ERROR
                error:
                  message: The requested resource could not be found.
    TooManyRequests:
      description: Too many requests (rate limit exceeded)
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/Metadata'
            example:
              metadata:
                status: ERROR
                error:
                  message: Too many requests - rate limit exceeded, please try again
                    later or contact support.
    InternalServerError:
      description: Internal server error (unexpected condition encountered)
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/Metadata'
            example:
              metadata:
                status: ERROR
                error:
                  message: An unexpected server error occurred. Please contact support.
  examples:
    ExampleStudiesList:
      summary: Example response for listing studies
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies
          timestamp: '2025-06-05 21:12:08'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: studyKey
              direction: ASC
          data:
            - sponsorKey: '100'
              studyKey: PHARMADEMO
          studyId: 100
          studyName: iMednet Pharma Demonstration Study
          studyDescription: iMednet Demonstration Study v2 Created 05April2018 After
            A5 Release
          studyType: STUDY
          dateCreated: '2025-06-05 21:12:08'
          dateModified: '2025-06-05 21:12:09'
    ExampleSitesList:
      summary: Example response for listing sites
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies/PHARMADEMO/sites
          timestamp: '2025-06-05 21:12:09'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: siteId
              direction: ASC
        data:
          - studyKey: PHARMADEMO
            siteId: 1
            siteName: Mock Site 1
            siteEnrollmentStatus: Enrollment Open
            dateCreated: '2025-06-05 21:12:09'
            dateModified: '2025-06-05 21:12:10'
    ExampleFormsList:
      summary: Example response for listing forms
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies/PHARMADEMO/forms
          timestamp: '2025-06-05 21:12:09'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: formId
              direction: ASC
        data:
          - studyKey: PHARMADEMO
            formId: 1
            formKey: FORM_1
            formName: Mock Form 1
            formType: Subject
            revision: 1
            embeddedLog: false
            enforceOwnership: false
            userAgreement: false
            subjectRecordReport: false
            unscheduledVisit: false
            otherForms: false
            eproForm: false
            allowCopy: true
            disabled: false
            dateCreated: '2025-06-05 21:12:09'
            dateModified: '2025-06-05 21:12:10'
    ExampleIntervalsList:
      summary: Example response for listing intervals
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies/PHARMADEMO/intervals
          timestamp: '2025-06-05 21:12:08'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: intervalId
              direction: ASC
        data:
          - studyKey: PHARMADEMO
            intervalId: 1
            intervalName: Day 1
            intervalDescription: Day 1
            intervalSequence: 110
            intervalGroupId: 10
            intervalGroupName: ePRO
            disabled: true
            dateCreated: '2025-06-05 21:12:08'
            dateModified: '2025-06-05 21:12:09'
            timeline: Start Date End Date
            definedUsingInterval: Baseline
            windowCalculationForm: Procedure
            windowCalculationDate: PROCDT
            actualDateForm: Follow Up
            actualDate: FUDT
            dueDateWillBeIn: 30
            negativeSlack: 7
            positiveSlack: 7
            eproGracePeriod: 2
            forms:
              - formId: 123
                formKey: MY-FORM-KEY
                formName: myFormName
    ExampleVisitsList:
      summary: Example response for listing visits
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies/PHARMADEMO/visits
          timestamp: '2025-06-05 21:12:08'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: visitId
              direction: ASC
        data:
          - visitId: 1
            studyKey: PHARMADEMO
            intervalId: 13
            intervalName: Day 15
            subjectId: 247
            subjectKey: 111-005
            startDate: '2025-06-05'
            endDate: '2025-06-12'
            dueDate: null
            visitDate: '2025-06-07'
            visitDateForm: Follow Up
            deleted: false
            visitDateQuestion: AESEV
            dateCreated: '2025-06-05 21:12:08'
            dateModified: '2025-06-05 21:12:08'
    ExampleSubjectsList:
      summary: Example response for listing subjects
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies/PHARMADEMO/subjects
          timestamp: '2025-06-05 21:12:09'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: subjectId
              direction: ASC
        data:
          - studyKey: PHARMADEMO
            subjectId: 1
            subjectOid: OID-1
            subjectKey: 01-001
            subjectStatus: Enrolled
            siteId: 128
            siteName: Chicago Hope Hospital
            deleted: false
            enrollmentStartDate: '2025-06-05 21:12:09'
            dateCreated: '2025-06-05 21:12:09'
            dateModified: '2025-06-05 21:12:10'
            keywords:
              - keywordName: Data Entry Error
                keywordKey: DEE
                keywordId: 15362
                dateAdded: '2025-06-05 21:12:09'
    ExampleUsersList:
      summary: Example response for listing users
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies/MOCK-STUDY/users
          timestamp: '2025-06-05 21:12:07'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: login
              direction: ASC
        data:
          - userId: 685253e1-1a95-4352-a7b0-4c62d3807727
            login: wsmith1
            firstName: William
            lastName: Smith
            email: wsmith@mednet.com
            userActiveInStudy: true
            roles:
              - dateCreated:
                  - 2025
                  - 6
                  - 5
                  - 21
                  - 12
                  - 7
                  - 625000000
                dateModified:
                  - 2025
                  - 6
                  - 5
                  - 21
                  - 12
                  - 7
                  - 625000000
                roleId: 6ec2a32b-143c-43d3-b562-9d902a61f884
                communityId: 1
                name: Role name 1
                description: Role description 1
                level: 1
                type: Role type 1
                inactive: false
              - dateCreated:
                  - 2025
                  - 6
                  - 5
                  - 21
                  - 12
                  - 7
                  - 625000000
                dateModified:
                  - 2025
                  - 6
                  - 5
                  - 21
                  - 12
                  - 7
                  - 625000000
                roleId: 6ec2a32b-143c-43d3-b562-9d902a61f884
                communityId: 2
                name: Role name 2
                description: Role description 2
                level: 2
                type: Role type 2
                inactive: false
    ExampleVariablesList:
      summary: Example response for listing variables
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies/PHARMADEMO/variables
          timestamp: '2025-06-05 21:12:08'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: variableId
              direction: ASC
        data:
          - studyKey: PHARMADEMO
            variableId: 1
            variableType: RADIO
            variableName: Pain Level
            sequence: 1
            revision: 1
            disabled: false
            dateCreated: '2025-06-05 21:12:08'
            dateModified: '2025-06-05 21:12:09'
            formId: 108727
            variableOid: OID-1
            deleted: false
            formKey: FORM_1
            formName: Pre-procedure screening
            label: Select patient pain level between 1 and 10
            blinded: false
    ExampleCodingsList:
      summary: Example response for listing codings
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies/PHARMADEMO/codings
          timestamp: '2025-06-05 21:12:10'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: recordId
              direction: ASC
        data:
          - studyKey: PHARMADEMO
            siteName: Chicago Hope Hospital
            siteId: 128
            subjectId: 247
            subjectKey: 111-005
            formId: 1
            formName: Adverse Event
            formKey: AE
            revision: 2
            recordId: 1
            variable: AETERM
            value: Angina
            codingId: 1
            code: Angina agranulocytic
            codedBy: John Smith
            reason: Typo fix
            dictionaryName: MedDRA
            dictionaryVersion: '24.0'
            dateCoded: '2025-06-05 21:12:10'
    ExampleQueriesList:
      summary: Example response for listing queries
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies/batchId/queries
          timestamp: '2025-06-05 21:12:09'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: annotationId
              direction: ASC
        data:
          - studyKey: PHARMADEMO
            subjectId: 1
            subjectOid: OID-1
            annotationType: subject
            annotationId: 1
            type: null
            description: Monitor Query
            recordId: 123
            variable: aeterm
            subjectKey: 123-005
            dateCreated: '2025-06-05 21:12:09'
            dateModified: '2025-06-05 21:12:10'
            queryComments:
              - sequence: 1
                annotationStatus: Monitor Query Open
                user: john
                comment: Added comment to study
                closed: false
                date: '2025-06-05 21:12:09'
    ExampleRecordRevisionsList:
      summary: Example response for listing record revisions
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies/PHARMADEMO/recordRevisions
          timestamp: '2025-06-05 21:12:09'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: recordRevisionId
              direction: ASC
        data:
          - studyKey: PHARMADEMO
            recordRevisionId: 1
            recordId: 1
            recordOid: REC-1
            recordRevision: 1
            dataRevision: 1
            recordStatus: Record Complete
            subjectId: 247
            subjectOid: OID-1
            subjectKey: 001-003
            siteId: 2
            formKey: AE
            intervalId: 15
            role: Research Coordinator
            user: jdoe
            reasonForChange: Data entry error
            deleted: true
            dateCreated: '2025-06-05 21:12:09'
    ExampleRecordsList:
      summary: Example response for listing records
      value:
        metadata:
          status: OK
          method: GET
          path: /api/v1/edc/studies/PHARMADEMO/records
          timestamp: '2025-06-05 21:12:09'
          error: {}
        pagination:
          currentPage: 0
          size: 25
          totalPages: 1
          totalElements: 1
          sort:
            - property: recordId
              direction: ASC
        data:
          - studyKey: PHARMADEMO
            intervalId: 99
            formId: 10202
            formKey: AE
            siteId: 128
            recordId: 1
            recordOid: REC-1
            recordType: SUBJECT
            recordStatus: Record Incomplete
            deleted: false
            dateCreated: '2025-06-05 21:12:09'
            dateModified: '2025-06-05 21:12:10'
            subjectId: 326
            subjectOid: OID-1
            subjectKey: 123-456
            visitId: 1
            parentRecordId: 34
            keywords:
              - keywordName: Data Entry Error
                keywordKey: DEE
                keywordId: 15362
                dateAdded: '2025-06-05 21:12:09'
            recordData:
              dateCreated: '2018-10-18 06:21:46'
              unvnum: '1'
              dateModified: '2018-11-18 07:11:16'
              aeser: ''
              aeterm: Bronchitis
    ExampleRegisterSubjectRequest:
      summary: Example request body for registering a new subject (via Registration
        form)
      value:
      - formKey: REG
        siteName: Minneapolis
        data:
          textField: Text value
    ExampleUpdateScheduledRecordRequest:
      summary: Example request body for updating a scheduled record
      value:
      - formKey: REG
        subjectKey: 651-042
        intervalName: Registration
        data:
          textField: Text value
    ExampleCreateNewRecordRequest:
      summary: Example request body for creating a new record (for existing subject)
      value:
      - formKey: REG
        subjectKey: 123-876
        data:
          textField: Text value
    ExamplePostRecordResponse:
      summary: Example response for a successful record creation request (job created)
      value:
        jobId: 9663fe34-eec7-460a-a820-097f1eb2875e
        batchId: c3q191e4-f894-72cd-a753-b37283eh0866
        state: created
    ExampleJobStatus:
      summary: Example response for job status
      value:
        jobId: 930720e7-4f3b-4452-be2b-f4233e5f433b
        batchId: 9e9e8584-0c71-40f2-86ee-7d414766f7f2
        state: completed
        dateCreated: '2020-12-01 21:47:36'
        dateStarted: '2020-12-01 21:47:42'
        dateFinished: '2020-12-01 21:47:45'
  links:
    CheckJobStatus:
      operationId: getJobStatus
      parameters:
        studyKey: $request.path.studyKey
        batchId: $response.body#/batchId
      description: Link to check the status of the job created by the record POST
