#tag Class
Protected Class DefaultApi
	#tag Method, Flags = &h0
		Sub ApiGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve API Versions
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ApiGetCallback() on completion. 
		  //
		  // - GET /api/
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/api/"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ApiGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ApiGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ApiGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ApiGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ApiGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ApiGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ApiMdlComponentsComponentTypeAndRecordNameFilesGet(, componentTypeAndRecordName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Content File
		  // - parameter componentTypeAndRecordName: (path) The component type of the record followed by the name of the record from which to retrieve the content file. The format is &#x60;{Componenttype}.{record_name}&#x60;. For example, &#x60;Formattedoutput.my_formatted_output__c&#x60;. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ApiMdlComponentsComponentTypeAndRecordNameFilesGetCallback() on completion. 
		  //
		  // - GET /api/mdl/components/{component_type_and_record_name}/files
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/api/mdl/components/{component_type_and_record_name}/files"
		  
		  Dim localVarPathStringcomponentTypeAndRecordName As String = componentTypeAndRecordName
		  
		  localVarPath = localVarPath.ReplaceAllB("{component_type_and_record_name}", localVarPathStringcomponentTypeAndRecordName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ApiMdlComponentsComponentTypeAndRecordNameFilesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ApiMdlComponentsComponentTypeAndRecordNameFilesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ApiMdlComponentsComponentTypeAndRecordNameFilesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ApiMdlComponentsComponentTypeAndRecordNameFilesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ApiMdlComponentsComponentTypeAndRecordNameFilesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ApiMdlComponentsComponentTypeAndRecordNameFilesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ApiMdlComponentsComponentTypeAndRecordNameGet(, componentTypeAndRecordName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Component Record (MDL)
		  // - parameter componentTypeAndRecordName: (path) The component type name (&#x60;Picklist&#x60;, &#x60;Docfield&#x60;, &#x60;Doctype&#x60;, etc.) followed by the name of the record from which to retrieve metadata. The format is &#x60;{Componenttype}.{record_name}&#x60;. For example, &#x60;Picklist.color__c&#x60;. Find this with the [Retrieve Component Record Collection](https://developer.veevavault.com/api/24.3#Retrieve_Component_Record_Collection) endpoint. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ApiMdlComponentsComponentTypeAndRecordNameGetCallback() on completion. 
		  //
		  // - GET /api/mdl/components/{component_type_and_record_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/api/mdl/components/{component_type_and_record_name}"
		  
		  Dim localVarPathStringcomponentTypeAndRecordName As String = componentTypeAndRecordName
		  
		  localVarPath = localVarPath.ReplaceAllB("{component_type_and_record_name}", localVarPathStringcomponentTypeAndRecordName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ApiMdlComponentsComponentTypeAndRecordNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ApiMdlComponentsComponentTypeAndRecordNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ApiMdlComponentsComponentTypeAndRecordNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ApiMdlComponentsComponentTypeAndRecordNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ApiMdlComponentsComponentTypeAndRecordNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ApiMdlComponentsComponentTypeAndRecordNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ApiMdlExecuteAsyncJobIdResultsGet(, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Asynchronous MDL Script Results
		  // - parameter jobId: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ApiMdlExecuteAsyncJobIdResultsGetCallback() on completion. 
		  //
		  // - GET /api/mdl/execute_async/{job_id}/results
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/api/mdl/execute_async/{job_id}/results"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ApiMdlExecuteAsyncJobIdResultsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ApiMdlExecuteAsyncJobIdResultsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ApiMdlExecuteAsyncJobIdResultsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ApiMdlExecuteAsyncJobIdResultsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ApiMdlExecuteAsyncJobIdResultsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ApiMdlExecuteAsyncJobIdResultsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ApiMdlExecuteAsyncPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Execute MDL Script Asynchronously
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ApiMdlExecuteAsyncPostCallback() on completion. 
		  //
		  // - POST /api/mdl/execute_async
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/api/mdl/execute_async"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ApiMdlExecuteAsyncPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ApiMdlExecuteAsyncPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ApiMdlExecuteAsyncPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ApiMdlExecuteAsyncPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ApiMdlExecuteAsyncPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ApiMdlExecuteAsyncPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ApiMdlExecutePost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Execute MDL Script
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ApiMdlExecutePostCallback() on completion. 
		  //
		  // - POST /api/mdl/execute
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/api/mdl/execute"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ApiMdlExecutePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ApiMdlExecutePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ApiMdlExecutePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ApiMdlExecutePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ApiMdlExecutePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ApiMdlExecutePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ApiMdlFilesPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Upload Content File
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ApiMdlFilesPostCallback() on completion. 
		  //
		  // - POST /api/mdl/files
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/api/mdl/files"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ApiMdlFilesPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ApiMdlFilesPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ApiMdlFilesPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ApiMdlFilesPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ApiMdlFilesPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ApiMdlFilesPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub AudittrailAuditTrailTypeGet(, auditTrailType As String, Optional startDate As Xoson.O.OptionalString, Optional endDate As Xoson.O.OptionalString, Optional allDates As Xoson.O.OptionalString, Optional formatResult As Xoson.O.OptionalString, Optional limit As Xoson.O.OptionalString, Optional offset As Xoson.O.OptionalString, Optional objects As Xoson.O.OptionalString, Optional events As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Audit Details
		  // - parameter auditTrailType: (path) The name of the specified audit type (document_audit_trail, object_audit_trail, etc). Use the Retrieve Audit Types API to retrieve types available in your Vault. Requests for login_audit_trail only accept one request per user at a time. 
		  // - parameter startDate: (query) Specify a start date to retrieve audit information. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z. If omitted, defaults to the last 30 days. (optional, default to Sample)
		  // - parameter endDate: (query) Specify an end date to retrieve audit information. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z. If omitted, defaults to the last 30 days. (optional, default to Sample)
		  // - parameter allDates: (query) Set to true to request audit information for all dates. You must leave start_date and end_date blank when requesting an export of a full audit trail. (optional, default to Sample)
		  // - parameter formatResult: (query) To request a downloadable CSV file of your audit details, use csv. The response contains a jobId to retrieve the job status, which contains a link to download the CSV file. If omitted, the API returns a JSON response and does not start a job. If all_dates is true, this parameter is required. (optional, default to Sample)
		  // - parameter limit: (query) Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200. (optional, default to Sample)
		  // - parameter offset: (query) Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. If omitted, defaults to 0. (optional, default to Sample)
		  // - parameter objects: (query) This is an optional parameter when specifying object_audit_trail as the {audit_trail_type}. Provide a comma-separated list of one or more object names to retrieve their audit details. For example, objects&#x3D;product__v,country__v. If omitted, defaults to all objects. (optional, default to Sample)
		  // - parameter events: (query) This is an optional parameter when specifying object_audit_trail or document_audit_trail as the {audit_trail_type}. Provide a comma-separated list of one or more audit events to retrieve their audit details. For example, events&#x3D;Edit,Delete,TaskAssignment. If omitted, defaults to all audit events. See Vault Help for full lists of object audit events and document audit events. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.AudittrailAuditTrailTypeGetCallback() on completion. 
		  //
		  // - GET /audittrail/{audit_trail_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If startDate <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("start_date") + "=" + EncodeURLComponent(startDate)
		  
		  If endDate <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("end_date") + "=" + EncodeURLComponent(endDate)
		  
		  If allDates <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("all_dates") + "=" + EncodeURLComponent(allDates)
		  
		  If formatResult <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("format_result") + "=" + EncodeURLComponent(formatResult)
		  
		  If limit <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("limit") + "=" + EncodeURLComponent(limit)
		  
		  If offset <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("offset") + "=" + EncodeURLComponent(offset)
		  
		  If objects <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("objects") + "=" + EncodeURLComponent(objects)
		  
		  If events <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("events") + "=" + EncodeURLComponent(events)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/audittrail/{audit_trail_type}"
		  
		  Dim localVarPathStringauditTrailType As String = auditTrailType
		  
		  localVarPath = localVarPath.ReplaceAllB("{audit_trail_type}", localVarPathStringauditTrailType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.AudittrailAuditTrailTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.AudittrailAuditTrailTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub AudittrailAuditTrailTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.AudittrailAuditTrailTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub AudittrailAuditTrailTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.AudittrailAuditTrailTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub AuthDiscoveryPost(, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Authentication Type Discovery
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.AuthDiscoveryPostCallback() on completion. 
		  //
		  // - POST /auth/discovery
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/auth/discovery"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.AuthDiscoveryPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.AuthDiscoveryPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub AuthDiscoveryPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.AuthDiscoveryPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub AuthDiscoveryPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.AuthDiscoveryPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub AuthOauthSessionOathOidcProfileIdPost(, oathOidcProfileId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // OAuth 2.0 / OpenID Connect
		  // - parameter oathOidcProfileId: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.AuthOauthSessionOathOidcProfileIdPostCallback() on completion. 
		  //
		  // - POST /auth/oauth/session/{oath_oidc_profile_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/auth/oauth/session/{oath_oidc_profile_id}"
		  
		  Dim localVarPathStringoathOidcProfileId As String = oathOidcProfileId
		  
		  localVarPath = localVarPath.ReplaceAllB("{oath_oidc_profile_id}", localVarPathStringoathOidcProfileId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.AuthOauthSessionOathOidcProfileIdPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.AuthOauthSessionOathOidcProfileIdPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub AuthOauthSessionOathOidcProfileIdPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.AuthOauthSessionOathOidcProfileIdPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub AuthOauthSessionOathOidcProfileIdPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.AuthOauthSessionOathOidcProfileIdPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub AuthPost(, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // User Name and Password
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.AuthPostCallback() on completion. 
		  //
		  // - POST /auth
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/auth"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.AuthPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.AuthPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub AuthPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.AuthPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub AuthPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.AuthPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CodeClassNameDelete(, className As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Single Source Code File
		  // - parameter className: (path) The fully qualified class name of your file. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CodeClassNameDeleteCallback() on completion. 
		  //
		  // - DELETE /code/{class_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/code/{class_name}"
		  
		  Dim localVarPathStringclassName As String = className
		  
		  localVarPath = localVarPath.ReplaceAllB("{class_name}", localVarPathStringclassName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CodeClassNameDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CodeClassNameDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CodeClassNameDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CodeClassNameDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CodeClassNameDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CodeClassNameDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CodeClassNameDisablePut(, className As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Disable Vault Extension
		  // - parameter className: (path) The fully qualified class name of your file. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CodeClassNameDisablePutCallback() on completion. 
		  //
		  // - PUT /code/{class_name}/disable
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/code/{class_name}/disable"
		  
		  Dim localVarPathStringclassName As String = className
		  
		  localVarPath = localVarPath.ReplaceAllB("{class_name}", localVarPathStringclassName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CodeClassNameDisablePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CodeClassNameDisablePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CodeClassNameDisablePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CodeClassNameDisablePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CodeClassNameDisablePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CodeClassNameDisablePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CodeClassNameEnablePut(, className As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Enable Vault Extension
		  // - parameter className: (path) The fully qualified class name of your file. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CodeClassNameEnablePutCallback() on completion. 
		  //
		  // - PUT /code/{class_name}/enable
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/code/{class_name}/enable"
		  
		  Dim localVarPathStringclassName As String = className
		  
		  localVarPath = localVarPath.ReplaceAllB("{class_name}", localVarPathStringclassName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CodeClassNameEnablePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CodeClassNameEnablePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CodeClassNameEnablePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CodeClassNameEnablePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CodeClassNameEnablePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CodeClassNameEnablePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CodeClassNameGet(, className As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Single Source Code File
		  // - parameter className: (path) The fully qualified class name of your file. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CodeClassNameGetCallback() on completion. 
		  //
		  // - GET /code/{class_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/code/{class_name}"
		  
		  Dim localVarPathStringclassName As String = className
		  
		  localVarPath = localVarPath.ReplaceAllB("{class_name}", localVarPathStringclassName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CodeClassNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CodeClassNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CodeClassNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CodeClassNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CodeClassNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CodeClassNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CodeProfilerGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Profiling Sessions
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CodeProfilerGetCallback() on completion. 
		  //
		  // - GET /code/profiler
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/code/profiler"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CodeProfilerGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CodeProfilerGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CodeProfilerGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CodeProfilerGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CodeProfilerGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CodeProfilerGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CodeProfilerPost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Profiling Session
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CodeProfilerPostCallback() on completion. 
		  //
		  // - POST /code/profiler
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/code/profiler"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CodeProfilerPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CodeProfilerPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CodeProfilerPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CodeProfilerPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CodeProfilerPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CodeProfilerPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CodeProfilerSessionNameActionsEndPost(, sessionName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // End Profiling Session
		  // - parameter sessionName: (path) The name of the session, for example,  baseline__c. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CodeProfilerSessionNameActionsEndPostCallback() on completion. 
		  //
		  // - POST /code/profiler/{session_name}/actions/end
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/code/profiler/{session_name}/actions/end"
		  
		  Dim localVarPathStringsessionName As String = sessionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{session_name}", localVarPathStringsessionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CodeProfilerSessionNameActionsEndPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CodeProfilerSessionNameActionsEndPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CodeProfilerSessionNameActionsEndPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CodeProfilerSessionNameActionsEndPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CodeProfilerSessionNameActionsEndPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CodeProfilerSessionNameActionsEndPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CodeProfilerSessionNameDelete(, sessionName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Profiling Session
		  // - parameter sessionName: (path) The name of the session, for example,  baseline__c. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CodeProfilerSessionNameDeleteCallback() on completion. 
		  //
		  // - DELETE /code/profiler/{session_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/code/profiler/{session_name}"
		  
		  Dim localVarPathStringsessionName As String = sessionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{session_name}", localVarPathStringsessionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CodeProfilerSessionNameDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CodeProfilerSessionNameDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CodeProfilerSessionNameDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CodeProfilerSessionNameDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CodeProfilerSessionNameDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CodeProfilerSessionNameDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CodeProfilerSessionNameGet(, sessionName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Profiling Session
		  // - parameter sessionName: (path) The name of the session, for example,  baseline__c. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CodeProfilerSessionNameGetCallback() on completion. 
		  //
		  // - GET /code/profiler/{session_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/code/profiler/{session_name}"
		  
		  Dim localVarPathStringsessionName As String = sessionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{session_name}", localVarPathStringsessionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CodeProfilerSessionNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CodeProfilerSessionNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CodeProfilerSessionNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CodeProfilerSessionNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CodeProfilerSessionNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CodeProfilerSessionNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CodeProfilerSessionNameResultsGet(, sessionName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Profiling Session Results
		  // - parameter sessionName: (path) The name of the session, for example,  baseline__c. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CodeProfilerSessionNameResultsGetCallback() on completion. 
		  //
		  // - GET /code/profiler/{session_name}/results
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/code/profiler/{session_name}/results"
		  
		  Dim localVarPathStringsessionName As String = sessionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{session_name}", localVarPathStringsessionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CodeProfilerSessionNameResultsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CodeProfilerSessionNameResultsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CodeProfilerSessionNameResultsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CodeProfilerSessionNameResultsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CodeProfilerSessionNameResultsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CodeProfilerSessionNameResultsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CodePut(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Add or Replace Single Source Code File
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CodePutCallback() on completion. 
		  //
		  // - PUT /code
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/code"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CodePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CodePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CodePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CodePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CodePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CodePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CompositesTreesEdlHierarchyOrTemplateActionsListnodesPost(, edlHierarchyOrTemplate As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Specific Root Nodes
		  // - parameter edlHierarchyOrTemplate: (path) Choose to retrieve either edl_hierarchy__v or edl_template__v 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CompositesTreesEdlHierarchyOrTemplateActionsListnodesPostCallback() on completion. 
		  //
		  // - POST /composites/trees/{edl_hierarchy_or_template}/actions/listnodes
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/composites/trees/{edl_hierarchy_or_template}/actions/listnodes"
		  
		  Dim localVarPathStringedlHierarchyOrTemplate As String = edlHierarchyOrTemplate
		  
		  localVarPath = localVarPath.ReplaceAllB("{edl_hierarchy_or_template}", localVarPathStringedlHierarchyOrTemplate)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CompositesTreesEdlHierarchyOrTemplateActionsListnodesPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CompositesTreesEdlHierarchyOrTemplateActionsListnodesPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CompositesTreesEdlHierarchyOrTemplateActionsListnodesPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CompositesTreesEdlHierarchyOrTemplateActionsListnodesPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CompositesTreesEdlHierarchyOrTemplateActionsListnodesPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CompositesTreesEdlHierarchyOrTemplateActionsListnodesPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CompositesTreesEdlHierarchyOrTemplateGet(, edlHierarchyOrTemplate As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Root Nodes
		  // - parameter edlHierarchyOrTemplate: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CompositesTreesEdlHierarchyOrTemplateGetCallback() on completion. 
		  //
		  // - GET /composites/trees/{edl_hierarchy_or_template}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/composites/trees/{edl_hierarchy_or_template}"
		  
		  Dim localVarPathStringedlHierarchyOrTemplate As String = edlHierarchyOrTemplate
		  
		  localVarPath = localVarPath.ReplaceAllB("{edl_hierarchy_or_template}", localVarPathStringedlHierarchyOrTemplate)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CompositesTreesEdlHierarchyOrTemplateGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CompositesTreesEdlHierarchyOrTemplateGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CompositesTreesEdlHierarchyOrTemplateGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CompositesTreesEdlHierarchyOrTemplateGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CompositesTreesEdlHierarchyOrTemplateGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CompositesTreesEdlHierarchyOrTemplateGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CompositesTreesEdlHierarchyVParentNodeIdChildrenGet(, parentNodeId As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve a Node's Children
		  // - parameter parentNodeId: (path) The ID of a parent node in the hierarchy. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CompositesTreesEdlHierarchyVParentNodeIdChildrenGetCallback() on completion. 
		  //
		  // - GET /composites/trees/edl_hierarchy__v/{parent_node_id}/children
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/composites/trees/edl_hierarchy__v/{parent_node_id}/children"
		  
		  Dim localVarPathStringparentNodeId As String = parentNodeId
		  
		  localVarPath = localVarPath.ReplaceAllB("{parent_node_id}", localVarPathStringparentNodeId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CompositesTreesEdlHierarchyVParentNodeIdChildrenGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CompositesTreesEdlHierarchyVParentNodeIdChildrenGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CompositesTreesEdlHierarchyVParentNodeIdChildrenGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CompositesTreesEdlHierarchyVParentNodeIdChildrenGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CompositesTreesEdlHierarchyVParentNodeIdChildrenGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CompositesTreesEdlHierarchyVParentNodeIdChildrenGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub CompositesTreesEdlHierarchyVParentNodeIdChildrenPut(, parentNodeId As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Node Order
		  // - parameter parentNodeId: (path) The ID of a parent node in the hierarchy. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.CompositesTreesEdlHierarchyVParentNodeIdChildrenPutCallback() on completion. 
		  //
		  // - PUT /composites/trees/edl_hierarchy__v/{parent_node_id}/children
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/composites/trees/edl_hierarchy__v/{parent_node_id}/children"
		  
		  Dim localVarPathStringparentNodeId As String = parentNodeId
		  
		  localVarPath = localVarPath.ReplaceAllB("{parent_node_id}", localVarPathStringparentNodeId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.CompositesTreesEdlHierarchyVParentNodeIdChildrenPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.CompositesTreesEdlHierarchyVParentNodeIdChildrenPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub CompositesTreesEdlHierarchyVParentNodeIdChildrenPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.CompositesTreesEdlHierarchyVParentNodeIdChildrenPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub CompositesTreesEdlHierarchyVParentNodeIdChildrenPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.CompositesTreesEdlHierarchyVParentNodeIdChildrenPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ConfigurationComponentTypeAndRecordNameGet(, componentTypeAndRecordName As String, Optional loc As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Component Record (XML/JSON)
		  // - parameter componentTypeAndRecordName: (path) The component type name (&#x60;Picklist&#x60;, &#x60;Docfield&#x60;, &#x60;Doctype&#x60;, etc.) followed by the name of the record from which to retrieve metadata. The format is &#x60;{Componenttype}.{record_name}&#x60;. For example, &#x60;Picklist.color__c&#x60;. Find this with the [Retrieve Component Record Collection](https://developer.veevavault.com/api/24.3#Retrieve_Component_Record_Collection) endpoint. 
		  // - parameter loc: (query) When localized (translated) strings are available, retrieve them by setting loc to true. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ConfigurationComponentTypeAndRecordNameGetCallback() on completion. 
		  //
		  // - GET /configuration/{component_type_and_record_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/configuration/{component_type_and_record_name}"
		  
		  Dim localVarPathStringcomponentTypeAndRecordName As String = componentTypeAndRecordName
		  
		  localVarPath = localVarPath.ReplaceAllB("{component_type_and_record_name}", localVarPathStringcomponentTypeAndRecordName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ConfigurationComponentTypeAndRecordNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ConfigurationComponentTypeAndRecordNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ConfigurationComponentTypeAndRecordNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ConfigurationComponentTypeAndRecordNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ConfigurationComponentTypeAndRecordNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ConfigurationComponentTypeAndRecordNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ConfigurationComponentTypeGet(, componentType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Component Record Collection
		  // - parameter componentType: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ConfigurationComponentTypeGetCallback() on completion. 
		  //
		  // - GET /configuration/{component_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/configuration/{component_type}"
		  
		  Dim localVarPathStringcomponentType As String = componentType
		  
		  localVarPath = localVarPath.ReplaceAllB("{component_type}", localVarPathStringcomponentType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ConfigurationComponentTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ConfigurationComponentTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ConfigurationComponentTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ConfigurationComponentTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ConfigurationComponentTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ConfigurationComponentTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ConfigurationObjectNameAndObjectTypeGet(, objectNameAndObjectType As String, Optional loc As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Details from a Specific Object
		  // - parameter objectNameAndObjectType: (path) The object name followed by the object type in the format &#x60;Objecttype.{object_name}.{object_type}&#x60;. For example, &#x60;Objecttype.product__v.base__v&#x60;. 
		  // - parameter loc: (query) When localized (translated) strings are available, retrieve them by setting loc to true. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ConfigurationObjectNameAndObjectTypeGetCallback() on completion. 
		  //
		  // - GET /configuration/{object_name_and_object_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/configuration/{object_name_and_object_type}"
		  
		  Dim localVarPathStringobjectNameAndObjectType As String = objectNameAndObjectType
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name_and_object_type}", localVarPathStringobjectNameAndObjectType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ConfigurationObjectNameAndObjectTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ConfigurationObjectNameAndObjectTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ConfigurationObjectNameAndObjectTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ConfigurationObjectNameAndObjectTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ConfigurationObjectNameAndObjectTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ConfigurationObjectNameAndObjectTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ConfigurationObjecttypeGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Details from All Object Types
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ConfigurationObjecttypeGetCallback() on completion. 
		  //
		  // - GET /configuration/Objecttype
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/configuration/Objecttype"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ConfigurationObjecttypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ConfigurationObjecttypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ConfigurationObjecttypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ConfigurationObjecttypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ConfigurationObjecttypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ConfigurationObjecttypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ConfigurationRoleAssignmentRuleDelete(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Lifecycle Role Assignment Override Rules
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ConfigurationRoleAssignmentRuleDeleteCallback() on completion. 
		  //
		  // - DELETE /configuration/role_assignment_rule
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/configuration/role_assignment_rule"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ConfigurationRoleAssignmentRuleDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ConfigurationRoleAssignmentRuleDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ConfigurationRoleAssignmentRuleDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ConfigurationRoleAssignmentRuleDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ConfigurationRoleAssignmentRuleDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ConfigurationRoleAssignmentRuleDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ConfigurationRoleAssignmentRuleGet(, Optional lifecycleV As Xoson.O.OptionalString, Optional roleV As Xoson.O.OptionalString, Optional productV As Xoson.O.OptionalString, Optional countryV As Xoson.O.OptionalString, Optional studyV As Xoson.O.OptionalString, Optional studyCountryV As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Lifecycle Role Assignment Rules (Default & Override)
		  // - parameter lifecycleV: (query) Include the name of the lifecycle from which to retrieve information. For example: lifecycle_v&#x3D;general_lifecycle__c (optional, default to Sample)
		  // - parameter roleV: (query) Include the name of the role from which to retrieve information. For example: role__v&#x3D;editor__c (optional, default to Sample)
		  // - parameter productV: (query) Include the ID/name of a specific product to see product-based override rules to default users/allowed users for the lifecycle role. For example: product__v&#x3D;0PR0011001 or product__v.name__v&#x3D;CholeCap (optional, default to Sample)
		  // - parameter countryV: (query) Include the ID/name of a specific country to see country-based override rules to default users/allowed users for the lifecycle role. For example: country__v&#x3D;0CR0022002 or country__v.name__v&#x3D;United States (optional, default to Sample)
		  // - parameter studyV: (query) In eTMF Vaults only. Include the ID/name of a specific study to see study-based override rules to default users/allowed users for the lifecycle role. For example: study__v&#x3D;0ST0021J01 or study__v.name__v&#x3D;CholeCap Study (optional, default to Sample)
		  // - parameter studyCountryV: (query) In eTMF Vaults only. Include the ID/name of a specific study country to see study country-based override rules to default users/allowed users for the lifecycle role. For example: study_country__v&#x3D;0SC0001001 or study_country__v.name__v&#x3D;Germany (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ConfigurationRoleAssignmentRuleGetCallback() on completion. 
		  //
		  // - GET /configuration/role_assignment_rule
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If lifecycleV <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("lifecycle__v") + "=" + EncodeURLComponent(lifecycleV)
		  
		  If roleV <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("role__v") + "=" + EncodeURLComponent(roleV)
		  
		  If productV <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("product__v") + "=" + EncodeURLComponent(productV)
		  
		  If countryV <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("country__v") + "=" + EncodeURLComponent(countryV)
		  
		  If studyV <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("study__v") + "=" + EncodeURLComponent(studyV)
		  
		  If studyCountryV <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("study_country__v") + "=" + EncodeURLComponent(studyCountryV)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/configuration/role_assignment_rule"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ConfigurationRoleAssignmentRuleGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ConfigurationRoleAssignmentRuleGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ConfigurationRoleAssignmentRuleGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ConfigurationRoleAssignmentRuleGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ConfigurationRoleAssignmentRuleGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ConfigurationRoleAssignmentRuleGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ConfigurationRoleAssignmentRulePost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Lifecycle Role Assignment Override Rules
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ConfigurationRoleAssignmentRulePostCallback() on completion. 
		  //
		  // - POST /configuration/role_assignment_rule
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/configuration/role_assignment_rule"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ConfigurationRoleAssignmentRulePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ConfigurationRoleAssignmentRulePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ConfigurationRoleAssignmentRulePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ConfigurationRoleAssignmentRulePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ConfigurationRoleAssignmentRulePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ConfigurationRoleAssignmentRulePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ConfigurationRoleAssignmentRulePut(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Lifecycle Role Assignment Rules (Default & Override)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ConfigurationRoleAssignmentRulePutCallback() on completion. 
		  //
		  // - PUT /configuration/role_assignment_rule
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/configuration/role_assignment_rule"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ConfigurationRoleAssignmentRulePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ConfigurationRoleAssignmentRulePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ConfigurationRoleAssignmentRulePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ConfigurationRoleAssignmentRulePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ConfigurationRoleAssignmentRulePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ConfigurationRoleAssignmentRulePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub DelegationLoginPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Initiate Delegated Session
		  // - parameter authorization: (header) The sessionId of the currently authenticated user who will initiate the delegated session. Cannot be a delegated_sessionid. (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.DelegationLoginPostCallback() on completion. 
		  //
		  // - POST /delegation/login
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/delegation/login"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.DelegationLoginPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.DelegationLoginPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub DelegationLoginPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.DelegationLoginPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub DelegationLoginPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.DelegationLoginPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub DelegationVaultsGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Delegations
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.DelegationVaultsGetCallback() on completion. 
		  //
		  // - GET /delegation/vaults
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/delegation/vaults"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.DelegationVaultsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.DelegationVaultsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub DelegationVaultsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.DelegationVaultsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub DelegationVaultsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.DelegationVaultsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub KeepAlivePost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Session Keep Alive
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.KeepAlivePostCallback() on completion. 
		  //
		  // - POST /keep-alive
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/keep-alive"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.KeepAlivePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.KeepAlivePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub KeepAlivePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.KeepAlivePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub KeepAlivePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.KeepAlivePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub LimitsGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Limits on Objects
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.LimitsGetCallback() on completion. 
		  //
		  // - GET /limits
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/limits"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.LimitsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.LimitsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub LimitsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.LimitsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub LimitsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.LimitsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub LogsApiUsageGet(, Optional date As Xoson.O.OptionalString, Optional logFormat As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Daily API Usage
		  // - parameter date: (query) The day to retrieve the API Usage log. Date is in UTC and follows the format YYYY-MM-DD. Date cannot be more than 30 days in the past. (optional, default to Sample)
		  // - parameter logFormat: (query) Optional: Specify the format to download. Possible values are csv or logfile. If omitted, defaults to csv. Note that this call always downloads a ZIP file. This parameter only changes the format of the file contained within the ZIP.  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.LogsApiUsageGetCallback() on completion. 
		  //
		  // - GET /logs/api_usage
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If date <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("date") + "=" + EncodeURLComponent(date)
		  
		  If logFormat <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("log_format") + "=" + EncodeURLComponent(logFormat)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/logs/api_usage"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.LogsApiUsageGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.LogsApiUsageGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub LogsApiUsageGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.LogsApiUsageGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub LogsApiUsageGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.LogsApiUsageGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub LogsCodeDebugGet(, Optional userId As Xoson.O.OptionalString, Optional includeInactive As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Debug Logs
		  // - parameter userId: (query) Filter results to retrieve the debug log for this user ID only. If omitted, this request retrieves debug logs for all users in the Vault. (optional, default to Sample)
		  // - parameter includeInactive: (query) Set to &#x60;true&#x60; to include debug log sessions with a status of &#x60;inactive__sys&#x60; in the response. If omitted, defaults to &#x60;false&#x60; and inactive sessions are not included in the response. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.LogsCodeDebugGetCallback() on completion. 
		  //
		  // - GET /logs/code/debug
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If userId <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("user_id") + "=" + EncodeURLComponent(userId)
		  
		  If includeInactive <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("include_inactive") + "=" + EncodeURLComponent(includeInactive.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/logs/code/debug"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.LogsCodeDebugGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.LogsCodeDebugGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.LogsCodeDebugGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.LogsCodeDebugGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub LogsCodeDebugIdActionsResetDelete(, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Debug Log
		  // - parameter id: (path) The ID of the debug log to delete. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.LogsCodeDebugIdActionsResetDeleteCallback() on completion. 
		  //
		  // - DELETE /logs/code/debug/{id}/actions/reset
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/logs/code/debug/{id}/actions/reset"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.LogsCodeDebugIdActionsResetDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.LogsCodeDebugIdActionsResetDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugIdActionsResetDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.LogsCodeDebugIdActionsResetDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugIdActionsResetDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.LogsCodeDebugIdActionsResetDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub LogsCodeDebugIdActionsResetPost(, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Reset Debug Log
		  // - parameter id: (path) The ID of the debug log to delete. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.LogsCodeDebugIdActionsResetPostCallback() on completion. 
		  //
		  // - POST /logs/code/debug/{id}/actions/reset
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/logs/code/debug/{id}/actions/reset"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.LogsCodeDebugIdActionsResetPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.LogsCodeDebugIdActionsResetPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugIdActionsResetPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.LogsCodeDebugIdActionsResetPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugIdActionsResetPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.LogsCodeDebugIdActionsResetPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub LogsCodeDebugIdFilesGet(, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Debug Log Files
		  // - parameter id: (path) The ID of the debug log to download. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.LogsCodeDebugIdFilesGetCallback() on completion. 
		  //
		  // - GET /logs/code/debug/{id}/files
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/logs/code/debug/{id}/files"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.LogsCodeDebugIdFilesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.LogsCodeDebugIdFilesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugIdFilesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.LogsCodeDebugIdFilesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugIdFilesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.LogsCodeDebugIdFilesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub LogsCodeDebugIdGet(, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Single Debug Log
		  // - parameter id: (path) The ID of the debug log to retrieve. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.LogsCodeDebugIdGetCallback() on completion. 
		  //
		  // - GET /logs/code/debug/{id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/logs/code/debug/{id}"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.LogsCodeDebugIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.LogsCodeDebugIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.LogsCodeDebugIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.LogsCodeDebugIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub LogsCodeDebugPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Debug Log
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.LogsCodeDebugPostCallback() on completion. 
		  //
		  // - POST /logs/code/debug
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/logs/code/debug"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.LogsCodeDebugPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.LogsCodeDebugPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.LogsCodeDebugPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub LogsCodeDebugPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.LogsCodeDebugPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub LogsCodeRuntimeGet(, Optional date As Xoson.O.OptionalString, Optional logFormat As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download SDK Runtime Log
		  // - parameter date: (query)  (optional, default to Sample)
		  // - parameter logFormat: (query) Optional: Specify the format to download. Possible values are csv or logfile. If omitted, defaults to csv. Note that this call always downloads a ZIP file. This parameter only changes the format of the file contained within the ZIP.  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.LogsCodeRuntimeGetCallback() on completion. 
		  //
		  // - GET /logs/code/runtime
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If date <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("date") + "=" + EncodeURLComponent(date)
		  
		  If logFormat <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("log_format") + "=" + EncodeURLComponent(logFormat)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/logs/code/runtime"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.LogsCodeRuntimeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.LogsCodeRuntimeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub LogsCodeRuntimeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.LogsCodeRuntimeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub LogsCodeRuntimeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.LogsCodeRuntimeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MessagesMessageTypeActionsImportPost(, messageType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Import Bulk Translation File
		  // - parameter messageType: (path) The message type name: field_labels__sys, system_messages__sys, notification_template_messages__sys, or user_account_messages__sys. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MessagesMessageTypeActionsImportPostCallback() on completion. 
		  //
		  // - POST /messages/{message_type}/actions/import
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/messages/{message_type}/actions/import"
		  
		  Dim localVarPathStringmessageType As String = messageType
		  
		  localVarPath = localVarPath.ReplaceAllB("{message_type}", localVarPathStringmessageType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MessagesMessageTypeActionsImportPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MessagesMessageTypeActionsImportPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MessagesMessageTypeActionsImportPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MessagesMessageTypeActionsImportPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MessagesMessageTypeActionsImportPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MessagesMessageTypeActionsImportPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MessagesMessageTypeLanguageLangActionsExportPost(, messageType As String, lang As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Export Bulk Translation File
		  // - parameter messageType: (path) The message type name: field_labels__sys, system_messages__sys, notification_template_messages__sys, or user_account_messages__sys. 
		  // - parameter lang: (path) A valid language code value, for example, en. Retrieve available values from the Admin Key (admin_key__sys) field on the Language (language__sys) object. Active and Inactive languages are both valid.  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MessagesMessageTypeLanguageLangActionsExportPostCallback() on completion. 
		  //
		  // - POST /messages/{message_type}/language/{lang}/actions/export
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/messages/{message_type}/language/{lang}/actions/export"
		  
		  Dim localVarPathStringmessageType As String = messageType
		  
		  localVarPath = localVarPath.ReplaceAllB("{message_type}", localVarPathStringmessageType)
		  Dim localVarPathStringlang As String = lang
		  
		  localVarPath = localVarPath.ReplaceAllB("{lang}", localVarPathStringlang)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MessagesMessageTypeLanguageLangActionsExportPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MessagesMessageTypeLanguageLangActionsExportPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MessagesMessageTypeLanguageLangActionsExportPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MessagesMessageTypeLanguageLangActionsExportPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MessagesMessageTypeLanguageLangActionsExportPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MessagesMessageTypeLanguageLangActionsExportPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataAudittrailAuditTrailTypeGet(, auditTrailType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Audit Metadata
		  // - parameter auditTrailType: (path) The name of the specified audit type (document_audit_trail, object_audit_trail, etc). 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataAudittrailAuditTrailTypeGetCallback() on completion. 
		  //
		  // - GET /metadata/audittrail/{audit_trail_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/audittrail/{audit_trail_type}"
		  
		  Dim localVarPathStringauditTrailType As String = auditTrailType
		  
		  localVarPath = localVarPath.ReplaceAllB("{audit_trail_type}", localVarPathStringauditTrailType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataAudittrailAuditTrailTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataAudittrailAuditTrailTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataAudittrailAuditTrailTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataAudittrailAuditTrailTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataAudittrailAuditTrailTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataAudittrailAuditTrailTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataAudittrailGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Audit Types
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataAudittrailGetCallback() on completion. 
		  //
		  // - GET /metadata/audittrail
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/audittrail"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataAudittrailGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataAudittrailGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataAudittrailGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataAudittrailGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataAudittrailGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataAudittrailGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataComponentsComponentTypeGet(, componentType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Component Type Metadata
		  // - parameter componentType: (path) The component type name (Picklist, Docfield, Doctype, etc.). 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataComponentsComponentTypeGetCallback() on completion. 
		  //
		  // - GET /metadata/components/{component_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/components/{component_type}"
		  
		  Dim localVarPathStringcomponentType As String = componentType
		  
		  localVarPath = localVarPath.ReplaceAllB("{component_type}", localVarPathStringcomponentType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataComponentsComponentTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataComponentsComponentTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataComponentsComponentTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataComponentsComponentTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataComponentsComponentTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataComponentsComponentTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataComponentsGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Component Metadata
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataComponentsGetCallback() on completion. 
		  //
		  // - GET /metadata/components
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/components"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataComponentsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataComponentsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataComponentsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataComponentsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataComponentsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataComponentsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsBindersTemplatesBindernodesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder Template Node Metadata
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsBindersTemplatesBindernodesGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/binders/templates/bindernodes
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/binders/templates/bindernodes"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsBindersTemplatesBindernodesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsBindersTemplatesBindernodesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsBindersTemplatesBindernodesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsBindersTemplatesBindernodesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsBindersTemplatesBindernodesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsBindersTemplatesBindernodesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsBindersTemplatesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder Template Metadata
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsBindersTemplatesGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/binders/templates
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/binders/templates"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsBindersTemplatesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsBindersTemplatesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsBindersTemplatesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsBindersTemplatesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsBindersTemplatesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsBindersTemplatesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGet(, placemarkType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Annotation Placemark Type Metadata
		  // - parameter placemarkType: (path) The name of the placemark type. For example, sticky__sys. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/annotations/placemarks/types/{placemark_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/annotations/placemarks/types/{placemark_type}"
		  
		  Dim localVarPathStringplacemarkType As String = placemarkType
		  
		  localVarPath = localVarPath.ReplaceAllB("{placemark_type}", localVarPathStringplacemarkType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGet(, referenceType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Annotation Reference Type Metadata
		  // - parameter referenceType: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/annotations/references/types/{reference_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/annotations/references/types/{reference_type}"
		  
		  Dim localVarPathStringreferenceType As String = referenceType
		  
		  localVarPath = localVarPath.ReplaceAllB("{reference_type}", localVarPathStringreferenceType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsAnnotationsTypesAnnotationTypeGet(, annotationType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Annotation Type Metadata
		  // - parameter annotationType: (path) The name of the annotation type. Valid annotation types include: &#x60;note__sys&#x60; &#x60;line__sys&#x60; &#x60;document_link__sys&#x60; &#x60;permalink_link__sys&#x60; &#x60;anchor__sys&#x60; &#x60;reply__sys&#x60; &#x60;external_link__sys&#x60;  The following annotation types are only valid in Medical and PromoMats Vaults:  &#x60;suggested_link__sys&#x60; &#x60;approved_link__sys&#x60; &#x60;auto_link__sys&#x60; &#x60;keyword_link__sys&#x60; 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsAnnotationsTypesAnnotationTypeGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/annotations/types/{annotation_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/annotations/types/{annotation_type}"
		  
		  Dim localVarPathStringannotationType As String = annotationType
		  
		  localVarPath = localVarPath.ReplaceAllB("{annotation_type}", localVarPathStringannotationType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsAnnotationsTypesAnnotationTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsAnnotationsTypesAnnotationTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsAnnotationsTypesAnnotationTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsAnnotationsTypesAnnotationTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsAnnotationsTypesAnnotationTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsAnnotationsTypesAnnotationTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGet(, eventType As String, eventSubtype As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Event SubType Metadata
		  // - parameter eventType: (path) The event type. For example, distribution__v. 
		  // - parameter eventSubtype: (path) The event subtype. For example, approved_email__v. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/events/{event_type}/types/{event_subtype}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/events/{event_type}/types/{event_subtype}"
		  
		  Dim localVarPathStringeventType As String = eventType
		  
		  localVarPath = localVarPath.ReplaceAllB("{event_type}", localVarPathStringeventType)
		  Dim localVarPathStringeventSubtype As String = eventSubtype
		  
		  localVarPath = localVarPath.ReplaceAllB("{event_subtype}", localVarPathStringeventSubtype)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsEventsGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Event Types and Subtypes
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsEventsGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/events
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/events"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsEventsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsEventsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsEventsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsEventsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsEventsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsEventsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsLockGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Lock Metadata
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsLockGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/lock
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/lock"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsLockGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsLockGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsLockGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsLockGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsLockGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsLockGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsPropertiesFindCommonPost(, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Common Document Fields
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsPropertiesFindCommonPostCallback() on completion. 
		  //
		  // - POST /metadata/objects/documents/properties/find_common
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/properties/find_common"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsPropertiesFindCommonPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsPropertiesFindCommonPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsPropertiesFindCommonPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsPropertiesFindCommonPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsPropertiesFindCommonPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsPropertiesFindCommonPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsPropertiesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Document Fields
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsPropertiesGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/properties
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/properties"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsPropertiesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsPropertiesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsPropertiesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsPropertiesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsPropertiesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsPropertiesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsTemplatesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Template Metadata
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsTemplatesGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/templates
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/templates"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsTemplatesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsTemplatesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTemplatesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsTemplatesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTemplatesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsTemplatesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsTypesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Document Types
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsTypesGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/types
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/types"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsTypesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsTypesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTypesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsTypesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTypesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsTypesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsTypesTypeGet(, type As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Type
		  // - parameter type: (path) The document type. See Retrieve Document Types. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsTypesTypeGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/types/{type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/types/{type}"
		  
		  Dim localVarPathStringtype As String = type
		  
		  localVarPath = localVarPath.ReplaceAllB("{type}", localVarPathStringtype)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsTypesTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsTypesTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTypesTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsTypesTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTypesTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsTypesTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsTypesTypeRelationshipsGet(, type As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Type Relationships
		  // - parameter type: (path) The document type. See Retrieve Document Types. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsTypesTypeRelationshipsGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/types/{type}/relationships
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/types/{type}/relationships"
		  
		  Dim localVarPathStringtype As String = type
		  
		  localVarPath = localVarPath.ReplaceAllB("{type}", localVarPathStringtype)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsTypesTypeRelationshipsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsTypesTypeRelationshipsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTypesTypeRelationshipsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsTypesTypeRelationshipsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTypesTypeRelationshipsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsTypesTypeRelationshipsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGet(, type As String, subtype As String, classification As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Classification
		  // - parameter type: (path) The document type. See Retrieve Document Types. 
		  // - parameter subtype: (path) The document subtype. See Retrieve Document Types. 
		  // - parameter classification: (path) The document classification. See Retrieve Document Types. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/types/{type}/subtypes/{subtype}/classifications/{classification}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/types/{type}/subtypes/{subtype}/classifications/{classification}"
		  
		  Dim localVarPathStringtype As String = type
		  
		  localVarPath = localVarPath.ReplaceAllB("{type}", localVarPathStringtype)
		  Dim localVarPathStringsubtype As String = subtype
		  
		  localVarPath = localVarPath.ReplaceAllB("{subtype}", localVarPathStringsubtype)
		  Dim localVarPathStringclassification As String = classification
		  
		  localVarPath = localVarPath.ReplaceAllB("{classification}", localVarPathStringclassification)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsDocumentsTypesTypeSubtypesSubtypeGet(, type As String, subtype As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Subtype
		  // - parameter type: (path) The document type. See Retrieve Document Types. 
		  // - parameter subtype: (path) The document subtype. See Retrieve Document Types. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsDocumentsTypesTypeSubtypesSubtypeGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/documents/types/{type}/subtypes/{subtype}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/documents/types/{type}/subtypes/{subtype}"
		  
		  Dim localVarPathStringtype As String = type
		  
		  localVarPath = localVarPath.ReplaceAllB("{type}", localVarPathStringtype)
		  Dim localVarPathStringsubtype As String = subtype
		  
		  localVarPath = localVarPath.ReplaceAllB("{subtype}", localVarPathStringsubtype)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsDocumentsTypesTypeSubtypesSubtypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsDocumentsTypesTypeSubtypesSubtypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTypesTypeSubtypesSubtypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsDocumentsTypesTypeSubtypesSubtypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsDocumentsTypesTypeSubtypesSubtypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsDocumentsTypesTypeSubtypesSubtypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsGroupsGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Group Metadata
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsGroupsGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/groups
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/groups"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsGroupsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsGroupsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsGroupsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsGroupsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsGroupsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsGroupsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsSecuritypoliciesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Security Policy Metadata
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsSecuritypoliciesGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/securitypolicies
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/securitypolicies"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsSecuritypoliciesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsSecuritypoliciesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsSecuritypoliciesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsSecuritypoliciesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsSecuritypoliciesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsSecuritypoliciesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataObjectsUsersGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve User Metadata
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataObjectsUsersGetCallback() on completion. 
		  //
		  // - GET /metadata/objects/users
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/objects/users"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataObjectsUsersGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataObjectsUsersGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataObjectsUsersGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataObjectsUsersGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataObjectsUsersGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataObjectsUsersGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Archived Document Signature Metadata
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGetCallback() on completion. 
		  //
		  // - GET /metadata/query/archived_documents/relationships/document_signature__sysr
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/query/archived_documents/relationships/document_signature__sysr"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataQueryDocumentsRelationshipsDocumentSignatureSysrGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Signature Metadata
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataQueryDocumentsRelationshipsDocumentSignatureSysrGetCallback() on completion. 
		  //
		  // - GET /metadata/query/documents/relationships/document_signature__sysr
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/query/documents/relationships/document_signature__sysr"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataQueryDocumentsRelationshipsDocumentSignatureSysrGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataQueryDocumentsRelationshipsDocumentSignatureSysrGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataQueryDocumentsRelationshipsDocumentSignatureSysrGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataQueryDocumentsRelationshipsDocumentSignatureSysrGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataQueryDocumentsRelationshipsDocumentSignatureSysrGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataQueryDocumentsRelationshipsDocumentSignatureSysrGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataVobjectsGet(, Optional loc As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Object Collection
		  // - parameter loc: (query) To retrieve localized (translated) strings, include the parameter loc&#x3D;true. See the next request below for details. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataVobjectsGetCallback() on completion. 
		  //
		  // - GET /metadata/vobjects
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/vobjects"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataVobjectsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataVobjectsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataVobjectsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataVobjectsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataVobjectsObjectNameActionsCanceldeploymentPost(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Cancel Raw Object Deployment
		  // - parameter objectName: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataVobjectsObjectNameActionsCanceldeploymentPostCallback() on completion. 
		  //
		  // - POST /metadata/vobjects/{object_name}/actions/canceldeployment
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/vobjects/{object_name}/actions/canceldeployment"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataVobjectsObjectNameActionsCanceldeploymentPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataVobjectsObjectNameActionsCanceldeploymentPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsObjectNameActionsCanceldeploymentPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataVobjectsObjectNameActionsCanceldeploymentPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsObjectNameActionsCanceldeploymentPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataVobjectsObjectNameActionsCanceldeploymentPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataVobjectsObjectNameFieldsObjectFieldNameGet(, objectName As String, objectFieldName As String, Optional loc As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Object Field Metadata
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectFieldName: (path) The object field name value (id, name__v, external_id__v, etc.). 
		  // - parameter loc: (query) To retrieve localized (translated) strings, include the parameter loc&#x3D;true. See the next request below for details. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataVobjectsObjectNameFieldsObjectFieldNameGetCallback() on completion. 
		  //
		  // - GET /metadata/vobjects/{object_name}/fields/{object_field_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/vobjects/{object_name}/fields/{object_field_name}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectFieldName As String = objectFieldName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_field_name}", localVarPathStringobjectFieldName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataVobjectsObjectNameFieldsObjectFieldNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataVobjectsObjectNameFieldsObjectFieldNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsObjectNameFieldsObjectFieldNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataVobjectsObjectNameFieldsObjectFieldNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsObjectNameFieldsObjectFieldNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataVobjectsObjectNameFieldsObjectFieldNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataVobjectsObjectNameGet(, objectName As String, Optional loc As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Object Metadata
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter loc: (query) To retrieve localized (translated) strings, include the parameter loc&#x3D;true. See the next request below for details. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataVobjectsObjectNameGetCallback() on completion. 
		  //
		  // - GET /metadata/vobjects/{object_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/vobjects/{object_name}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataVobjectsObjectNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataVobjectsObjectNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsObjectNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataVobjectsObjectNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsObjectNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataVobjectsObjectNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataVobjectsObjectNamePageLayoutsGet(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Page Layouts
		  // - parameter objectName: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataVobjectsObjectNamePageLayoutsGetCallback() on completion. 
		  //
		  // - GET /metadata/vobjects/{object_name}/page_layouts
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/vobjects/{object_name}/page_layouts"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataVobjectsObjectNamePageLayoutsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataVobjectsObjectNamePageLayoutsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsObjectNamePageLayoutsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataVobjectsObjectNamePageLayoutsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsObjectNamePageLayoutsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataVobjectsObjectNamePageLayoutsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub MetadataVobjectsObjectNamePageLayoutsLayoutNameGet(, objectName As String, layoutName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Page Layout Metadata
		  // - parameter objectName: (path) The name of the object from which to retrieve page layout metadata. 
		  // - parameter layoutName: (path) The name of the page layout from which to retrieve metadata. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.MetadataVobjectsObjectNamePageLayoutsLayoutNameGetCallback() on completion. 
		  //
		  // - GET /metadata/vobjects/{object_name}/page_layouts/{layout_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/metadata/vobjects/{object_name}/page_layouts/{layout_name}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringlayoutName As String = layoutName
		  
		  localVarPath = localVarPath.ReplaceAllB("{layout_name}", localVarPathStringlayoutName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.MetadataVobjectsObjectNamePageLayoutsLayoutNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.MetadataVobjectsObjectNamePageLayoutsLayoutNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsObjectNamePageLayoutsLayoutNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.MetadataVobjectsObjectNamePageLayoutsLayoutNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub MetadataVobjectsObjectNamePageLayoutsLayoutNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.MetadataVobjectsObjectNamePageLayoutsLayoutNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub NotificationsHistoriesGet(, Optional startDate As Xoson.O.OptionalString, Optional endDate As Xoson.O.OptionalString, Optional allDates As Xoson.O.OptionalBoolean, Optional formatResult As Xoson.O.OptionalString, Optional limit As Xoson.O.OptionalString, Optional offset As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Email Notification Histories
		  // - parameter startDate: (query) Specify a start date to retrieve notification history. This date cannot be more than 2 years ago. Dates must be in YYYY-MM-DD or YYYY-MM-DDTHH:mm:ssZ format. If time is omitted (THH:mm:ssZ), defaults to the start of the day. If start_date is omitted entirely, defaults to the start of the previous day. If you’ve specified a start_date, you must also specify an end_date. (optional, default to Sample)
		  // - parameter endDate: (query) Specify an end date to retrieve notification history. This date cannot be more than 30 days away from the specified start_date. Dates must be in YYYY-MM-DD or YYYY-MM-DDTHH:mm:ssZ format. If time is omitted (THH:mm:ssZ), defaults to the time of the API request. If you’ve specified an end_date, you must also specify a start_date. (optional, default to Sample)
		  // - parameter allDates: (query) Set to true to request notification history for all dates. This is the same as requesting a full CSV export from the Vault UI. When requesting a full notification history, you must leave start_date and end_date blank and set format_result to csv. You can request an export of notification history for all_dates once every 24 hours. (optional, default to False)
		  // - parameter formatResult: (query) To request a downloadable CSV file of your notification history, set this parameter to csv. The response contains a jobId to retrieve the job status, which provides a link to download the CSV file. If omitted, the API returns a JSON response with notification history and does not start a job. If all_dates is true, this parameter must be csv. (optional, default to Sample)
		  // - parameter limit: (query) Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200. (optional, default to Sample)
		  // - parameter offset: (query) Paginate the results displayed per page by specifying the amount of offset from the entry returned. If omitted, defaults to 0. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.NotificationsHistoriesGetCallback() on completion. 
		  //
		  // - GET /notifications/histories
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If startDate <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("start_date") + "=" + EncodeURLComponent(startDate)
		  
		  If endDate <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("end_date") + "=" + EncodeURLComponent(endDate)
		  
		  If allDates <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("all_dates") + "=" + EncodeURLComponent(allDates.ToString)
		  
		  If formatResult <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("format_result") + "=" + EncodeURLComponent(formatResult)
		  
		  If limit <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("limit") + "=" + EncodeURLComponent(limit)
		  
		  If offset <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("offset") + "=" + EncodeURLComponent(offset)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/notifications/histories"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.NotificationsHistoriesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.NotificationsHistoriesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub NotificationsHistoriesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.NotificationsHistoriesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub NotificationsHistoriesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.NotificationsHistoriesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectWorkflowActionsActionGet(, action As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Bulk Workflow Action Details
		  // - parameter action: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectWorkflowActionsActionGetCallback() on completion. 
		  //
		  // - GET /object/workflow/actions/{action}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/object/workflow/actions/{action}"
		  
		  Dim localVarPathStringaction As String = action
		  
		  localVarPath = localVarPath.ReplaceAllB("{action}", localVarPathStringaction)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectWorkflowActionsActionGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectWorkflowActionsActionGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsActionGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectWorkflowActionsActionGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsActionGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectWorkflowActionsActionGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectWorkflowActionsActionPost(, action As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Initiate Workflow Actions on Multiple Workflows
		  // - parameter action: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectWorkflowActionsActionPostCallback() on completion. 
		  //
		  // - POST /object/workflow/actions/{action}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/object/workflow/actions/{action}"
		  
		  Dim localVarPathStringaction As String = action
		  
		  localVarPath = localVarPath.ReplaceAllB("{action}", localVarPathStringaction)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectWorkflowActionsActionPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectWorkflowActionsActionPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsActionPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectWorkflowActionsActionPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsActionPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectWorkflowActionsActionPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectWorkflowActionsCanceltasksPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Cancel Workflow Tasks
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectWorkflowActionsCanceltasksPostCallback() on completion. 
		  //
		  // - POST /object/workflow/actions/canceltasks
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/object/workflow/actions/canceltasks"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectWorkflowActionsCanceltasksPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectWorkflowActionsCanceltasksPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsCanceltasksPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectWorkflowActionsCanceltasksPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsCanceltasksPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectWorkflowActionsCanceltasksPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectWorkflowActionsCancelworkflowsPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Cancel Workflows
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectWorkflowActionsCancelworkflowsPostCallback() on completion. 
		  //
		  // - POST /object/workflow/actions/cancelworkflows
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/object/workflow/actions/cancelworkflows"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectWorkflowActionsCancelworkflowsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectWorkflowActionsCancelworkflowsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsCancelworkflowsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectWorkflowActionsCancelworkflowsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsCancelworkflowsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectWorkflowActionsCancelworkflowsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectWorkflowActionsGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Bulk Workflow Actions
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectWorkflowActionsGetCallback() on completion. 
		  //
		  // - GET /object/workflow/actions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/object/workflow/actions"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectWorkflowActionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectWorkflowActionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectWorkflowActionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectWorkflowActionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectWorkflowActionsReassigntasksPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Reassign Workflow Tasks
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectWorkflowActionsReassigntasksPostCallback() on completion. 
		  //
		  // - POST /object/workflow/actions/reassigntasks
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/object/workflow/actions/reassigntasks"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectWorkflowActionsReassigntasksPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectWorkflowActionsReassigntasksPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsReassigntasksPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectWorkflowActionsReassigntasksPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsReassigntasksPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectWorkflowActionsReassigntasksPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectWorkflowActionsReplaceworkflowownerPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Replace Workflow Owner
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectWorkflowActionsReplaceworkflowownerPostCallback() on completion. 
		  //
		  // - POST /object/workflow/actions/replaceworkflowowner
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/object/workflow/actions/replaceworkflowowner"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectWorkflowActionsReplaceworkflowownerPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectWorkflowActionsReplaceworkflowownerPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsReplaceworkflowownerPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectWorkflowActionsReplaceworkflowownerPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectWorkflowActionsReplaceworkflowownerPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectWorkflowActionsReplaceworkflowownerPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersActionsExportJobIdResultsGet(, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder Export Results
		  // - parameter jobId: (path) The id value of the requested export job. This is returned with the export binder requests above. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersActionsExportJobIdResultsGetCallback() on completion. 
		  //
		  // - GET /objects/binders/actions/export/{job_id}/results
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/actions/export/{job_id}/results"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersActionsExportJobIdResultsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersActionsExportJobIdResultsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersActionsExportJobIdResultsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersActionsExportJobIdResultsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersActionsExportJobIdResultsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersActionsExportJobIdResultsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdActionsExportPost(, binderId As String, Optional source As Xoson.O.OptionalBoolean, Optional renditiontype As Xoson.O.OptionalString, Optional docversion As Xoson.O.OptionalString, Optional attachments As Xoson.O.OptionalString, Optional export As Xoson.O.OptionalString, Optional docfield As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Export Binder (Latest Version)
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter source: (query) to include source content or not (optional, default to False)
		  // - parameter renditiontype: (query) to include viewable renditions (optional, default to Sample)
		  // - parameter docversion: (query) to include all major versions (optional, default to Sample)
		  // - parameter attachments: (query) to include all versions of attachments (optional, default to Sample)
		  // - parameter export: (query) configurable filename metadata (optional, default to Sample)
		  // - parameter docfield: (query) to exclude document metadata csv (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdActionsExportPostCallback() on completion. 
		  //
		  // - POST /objects/binders/{binder_id}/actions/export
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If source <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("source") + "=" + EncodeURLComponent(source.ToString)
		  
		  If renditiontype <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("renditiontype") + "=" + EncodeURLComponent(renditiontype)
		  
		  If docversion <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("docversion") + "=" + EncodeURLComponent(docversion)
		  
		  If attachments <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("attachments") + "=" + EncodeURLComponent(attachments)
		  
		  If export <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("export") + "=" + EncodeURLComponent(export)
		  
		  If docfield <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("docfield") + "=" + EncodeURLComponent(docfield.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/actions/export"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdActionsExportPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdActionsExportPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdActionsExportPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdActionsExportPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdActionsExportPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdActionsExportPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdActionsPost(, binderId As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Refresh Binder Auto-Filing
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdActionsPostCallback() on completion. 
		  //
		  // - POST /objects/binders/{binder_id}/actions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/actions"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdActionsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdActionsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdActionsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdActionsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdActionsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdActionsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdBindingRulePut(, binderId As String, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Binding Rule
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdBindingRulePutCallback() on completion. 
		  //
		  // - PUT /objects/binders/{binder_id}/binding_rule
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/binding_rule"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdBindingRulePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdBindingRulePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdBindingRulePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdBindingRulePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdBindingRulePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdBindingRulePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdDelete(, binderId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Binder
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/binders/{binder_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdDocumentsNodeIdBindingRulePut(, binderId As String, nodeId As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Binder Document Binding Rule
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter nodeId: (path) The binder node id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdDocumentsNodeIdBindingRulePutCallback() on completion. 
		  //
		  // - PUT /objects/binders/{binder_id}/documents/{node_id}/binding_rule
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/documents/{node_id}/binding_rule"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringnodeId As String = nodeId
		  
		  localVarPath = localVarPath.ReplaceAllB("{node_id}", localVarPathStringnodeId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdDocumentsNodeIdBindingRulePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdDocumentsNodeIdBindingRulePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdDocumentsNodeIdBindingRulePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdDocumentsNodeIdBindingRulePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdDocumentsNodeIdBindingRulePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdDocumentsNodeIdBindingRulePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdDocumentsPost(, binderId As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Add Document to Binder
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdDocumentsPostCallback() on completion. 
		  //
		  // - POST /objects/binders/{binder_id}/documents
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/documents"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdDocumentsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdDocumentsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdDocumentsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdDocumentsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdDocumentsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdDocumentsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdDocumentsSectionIdDelete(, binderId As String, sectionId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Remove Document from Binder
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter sectionId: (path) The binder node id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdDocumentsSectionIdDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/binders/{binder_id}/documents/{section_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/documents/{section_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringsectionId As String = sectionId
		  
		  localVarPath = localVarPath.ReplaceAllB("{section_id}", localVarPathStringsectionId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdDocumentsSectionIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdDocumentsSectionIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdDocumentsSectionIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdDocumentsSectionIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdDocumentsSectionIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdDocumentsSectionIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdDocumentsSectionIdPut(, binderId As String, sectionId As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Move Document in Binder
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter sectionId: (path) The binder node id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdDocumentsSectionIdPutCallback() on completion. 
		  //
		  // - PUT /objects/binders/{binder_id}/documents/{section_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/documents/{section_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringsectionId As String = sectionId
		  
		  localVarPath = localVarPath.ReplaceAllB("{section_id}", localVarPathStringsectionId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdDocumentsSectionIdPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdDocumentsSectionIdPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdDocumentsSectionIdPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdDocumentsSectionIdPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdDocumentsSectionIdPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdDocumentsSectionIdPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdGet(, binderId As String, Optional depth As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter depth: (query) To retrieve all information in all levels of the binder, set this to all. By default, only one level is returned. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdGetCallback() on completion. 
		  //
		  // - GET /objects/binders/{binder_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If depth <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("depth") + "=" + EncodeURLComponent(depth)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdPost(, binderId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Binder Version
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdPostCallback() on completion. 
		  //
		  // - POST /objects/binders/{binder_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdPut(, binderId As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Binder
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdPutCallback() on completion. 
		  //
		  // - PUT /objects/binders/{binder_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDelete(, binderId As String, roleNameAndUserOrGroup As String, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Remove Users & Groups from Roles on a Single Binder
		  // - parameter binderId: (path) The id value of the binder from which to remove roles. 
		  // - parameter roleNameAndUserOrGroup: (path) The name of the role from which to remove the user or group followed by either &#x60;user&#x60; or &#x60;group&#x60;. The format is &#x60;{role_name}.{user_or_group}&#x60;. For example, &#x60;consumer__v.user&#x60;. 
		  // - parameter id: (path) The id value of the user or group to remove from the role. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/binders/{binder_id}/roles/{role_name_and_user_or_group}/{id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/roles/{role_name_and_user_or_group}/{id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringroleNameAndUserOrGroup As String = roleNameAndUserOrGroup
		  
		  localVarPath = localVarPath.ReplaceAllB("{role_name_and_user_or_group}", localVarPathStringroleNameAndUserOrGroup)
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdSectionsNodeIdBindingRulePut(, binderId As String, nodeId As String, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Binder Section Binding Rule
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter nodeId: (path) The binder node id field value. 
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdSectionsNodeIdBindingRulePutCallback() on completion. 
		  //
		  // - PUT /objects/binders/{binder_id}/sections/{node_id}/binding_rule
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/sections/{node_id}/binding_rule"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringnodeId As String = nodeId
		  
		  localVarPath = localVarPath.ReplaceAllB("{node_id}", localVarPathStringnodeId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdSectionsNodeIdBindingRulePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdSectionsNodeIdBindingRulePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdSectionsNodeIdBindingRulePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdSectionsNodeIdBindingRulePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdSectionsNodeIdBindingRulePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdSectionsNodeIdBindingRulePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdSectionsNodeIdPut(, binderId As String, nodeId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Binder Section
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter nodeId: (path) The binder node id of the section. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdSectionsNodeIdPutCallback() on completion. 
		  //
		  // - PUT /objects/binders/{binder_id}/sections/{node_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/sections/{node_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringnodeId As String = nodeId
		  
		  localVarPath = localVarPath.ReplaceAllB("{node_id}", localVarPathStringnodeId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdSectionsNodeIdPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdSectionsNodeIdPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdSectionsNodeIdPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdSectionsNodeIdPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdSectionsNodeIdPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdSectionsNodeIdPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdSectionsPost(, binderId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Binder Section
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdSectionsPostCallback() on completion. 
		  //
		  // - POST /objects/binders/{binder_id}/sections
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/sections"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdSectionsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdSectionsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdSectionsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdSectionsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdSectionsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdSectionsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdSectionsSectionIdDelete(, binderId As String, sectionId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Binder Section
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter sectionId: (path) The binder node id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdSectionsSectionIdDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/binders/{binder_id}/sections/{section_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/sections/{section_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringsectionId As String = sectionId
		  
		  localVarPath = localVarPath.ReplaceAllB("{section_id}", localVarPathStringsectionId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdSectionsSectionIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdSectionsSectionIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdSectionsSectionIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdSectionsSectionIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdSectionsSectionIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdSectionsSectionIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdSectionsSectionIdGet(, binderId As String, sectionId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder Sections
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter sectionId: (path) The binder node id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdSectionsSectionIdGetCallback() on completion. 
		  //
		  // - GET /objects/binders/{binder_id}/sections/{section_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/sections/{section_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringsectionId As String = sectionId
		  
		  localVarPath = localVarPath.ReplaceAllB("{section_id}", localVarPathStringsectionId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdSectionsSectionIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdSectionsSectionIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdSectionsSectionIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdSectionsSectionIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdSectionsSectionIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdSectionsSectionIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdVersionsGet(, binderId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Binder Versions
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdVersionsGetCallback() on completion. 
		  //
		  // - GET /objects/binders/{binder_id}/versions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/versions"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdVersionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdVersionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdVersionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdVersionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPost(, binderId As String, majorVersion As String, minorVersion As String, Optional source As Xoson.O.OptionalBoolean, Optional renditiontype As Xoson.O.OptionalString, Optional docversion As Xoson.O.OptionalString, Optional attachments As Xoson.O.OptionalString, Optional export As Xoson.O.OptionalString, Optional docfield As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Export Binder (Specific Version)
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter majorVersion: (path) The binder major_version_number__v field value. 
		  // - parameter minorVersion: (path) The binder minor_version_number__v field value. 
		  // - parameter source: (query) to include source content or not (optional, default to False)
		  // - parameter renditiontype: (query) to include viewable renditions (optional, default to Sample)
		  // - parameter docversion: (query) to include all major versions (optional, default to Sample)
		  // - parameter attachments: (query) to include all versions of attachments (optional, default to Sample)
		  // - parameter export: (query) configurable filename metadata (optional, default to Sample)
		  // - parameter docfield: (query) to exclude document metadata csv (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPostCallback() on completion. 
		  //
		  // - POST /objects/binders/{binder_id}/versions/{major_version}/{minor_version}/actions/export
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If source <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("source") + "=" + EncodeURLComponent(source.ToString)
		  
		  If renditiontype <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("renditiontype") + "=" + EncodeURLComponent(renditiontype)
		  
		  If docversion <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("docversion") + "=" + EncodeURLComponent(docversion)
		  
		  If attachments <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("attachments") + "=" + EncodeURLComponent(attachments)
		  
		  If export <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("export") + "=" + EncodeURLComponent(export)
		  
		  If docfield <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("docfield") + "=" + EncodeURLComponent(docfield.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/actions/export"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionDelete(, binderId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Binder Version
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter majorVersion: (path) The binder major_version_number__v field value. 
		  // - parameter minorVersion: (path) The binder minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/binders/{binder_id}/versions/{major_version}/{minor_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionGet(, binderId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder Version
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter majorVersion: (path) The binder major_version_number__v field value. 
		  // - parameter minorVersion: (path) The binder minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionGetCallback() on completion. 
		  //
		  // - GET /objects/binders/{binder_id}/versions/{major_version}/{minor_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionPut(, binderId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Binder Version
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter majorVersion: (path) The binder major_version_number__v field value. 
		  // - parameter minorVersion: (path) The binder minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionPutCallback() on completion. 
		  //
		  // - PUT /objects/binders/{binder_id}/versions/{major_version}/{minor_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPost(, binderId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Binder Relationship
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter majorVersion: (path) The binder major_version_number__v field value. 
		  // - parameter minorVersion: (path) The binder minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPostCallback() on completion. 
		  //
		  // - POST /objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete(, binderId As String, majorVersion As String, minorVersion As String, relationshipId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Binder Relationship
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter majorVersion: (path) The binder major_version_number__v field value. 
		  // - parameter minorVersion: (path) The binder minor_version_number__v field value. 
		  // - parameter relationshipId: (path) The binder relationship id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringrelationshipId As String = relationshipId
		  
		  localVarPath = localVarPath.ReplaceAllB("{relationship_id}", localVarPathStringrelationshipId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet(, binderId As String, majorVersion As String, minorVersion As String, relationshipId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder Relationship
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter majorVersion: (path) The binder major_version_number__v field value. 
		  // - parameter minorVersion: (path) The binder minor_version_number__v field value. 
		  // - parameter relationshipId: (path) The binder relationship id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGetCallback() on completion. 
		  //
		  // - GET /objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringrelationshipId As String = relationshipId
		  
		  localVarPath = localVarPath.ReplaceAllB("{relationship_id}", localVarPathStringrelationshipId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGet(, binderId As String, majorVersion As String, minorVersion As String, sectionId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder Version Section
		  // - parameter binderId: (path) The binder id field value. 
		  // - parameter majorVersion: (path) The binder major_version_number__v field value. 
		  // - parameter minorVersion: (path) The binder minor_version_number__v field value. 
		  // - parameter sectionId: (path) Retrieve all sections (documents and subsections) in a binder’s sub-level node. If not included, all sections from the binder’s top-level root node will be returned. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGetCallback() on completion. 
		  //
		  // - GET /objects/binders/{binder_id}/versions/{major_version}/{minor_version}/sections/{section_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/sections/{section_id}"
		  
		  Dim localVarPathStringbinderId As String = binderId
		  
		  localVarPath = localVarPath.ReplaceAllB("{binder_id}", localVarPathStringbinderId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringsectionId As String = sectionId
		  
		  localVarPath = localVarPath.ReplaceAllB("{section_id}", localVarPathStringsectionId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersIdRolesGet(, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Binder Roles
		  // - parameter id: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersIdRolesGetCallback() on completion. 
		  //
		  // - GET /objects/binders/{id}/roles
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{id}/roles"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersIdRolesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersIdRolesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdRolesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersIdRolesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdRolesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersIdRolesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersIdRolesPost(, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Assign Users & Groups to Roles on a Single Binder
		  // - parameter id: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersIdRolesPostCallback() on completion. 
		  //
		  // - POST /objects/binders/{id}/roles
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{id}/roles"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersIdRolesPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersIdRolesPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdRolesPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersIdRolesPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdRolesPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersIdRolesPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersIdRolesRoleNameGet(, id As String, roleName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Role
		  // - parameter id: (path) The binder &#x60;id&#x60;. 
		  // - parameter roleName: (path) The name of the role to retrieve. For example, &#x60;owner__v&#x60;. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersIdRolesRoleNameGetCallback() on completion. 
		  //
		  // - GET /objects/binders/{id}/roles/{role_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{id}/roles/{role_name}"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  Dim localVarPathStringroleName As String = roleName
		  
		  localVarPath = localVarPath.ReplaceAllB("{role_name}", localVarPathStringroleName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersIdRolesRoleNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersIdRolesRoleNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdRolesRoleNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersIdRolesRoleNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdRolesRoleNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersIdRolesRoleNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGet(, id As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder User Actions
		  // - parameter id: (path) The binder id field value from which to retrieve available user actions. 
		  // - parameter majorVersion: (path) The major version number of the binder. 
		  // - parameter minorVersion: (path) The minor version number of the binder. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGetCallback() on completion. 
		  //
		  // - GET /objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet(, id As String, majorVersion As String, minorVersion As String, nameV As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder Entry Criteria
		  // - parameter id: (path) The binder id field value from which to retrieve available user actions. 
		  // - parameter majorVersion: (path) The major version number of the binder. 
		  // - parameter minorVersion: (path) The minor version number of the binder. 
		  // - parameter nameV: (path) The lifecycle name__v field value from which to retrieve entry criteria. This is retrieved from the Retrieve User Actions request above. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGetCallback() on completion. 
		  //
		  // - GET /objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}/entry_requirements
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}/entry_requirements"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringnameV As String = nameV
		  
		  localVarPath = localVarPath.ReplaceAllB("{name__v}", localVarPathStringnameV)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut(, id As String, majorVersion As String, minorVersion As String, nameV As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Initiate Binder User Action
		  // - parameter id: (path) The binder id field value from which to retrieve available user actions. 
		  // - parameter majorVersion: (path) The major version number of the binder. 
		  // - parameter minorVersion: (path) The minor version number of the binder. 
		  // - parameter nameV: (path) The action name__v field value to initiate. This is retrieved from the Retrieve User Action request. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPutCallback() on completion. 
		  //
		  // - PUT /objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringnameV As String = nameV
		  
		  localVarPath = localVarPath.ReplaceAllB("{name__v}", localVarPathStringnameV)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersLifecycleActionsPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve User Actions on Multiple Binders
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersLifecycleActionsPostCallback() on completion. 
		  //
		  // - POST /objects/binders/lifecycle_actions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/lifecycle_actions"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersLifecycleActionsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersLifecycleActionsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersLifecycleActionsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersLifecycleActionsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersLifecycleActionsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersLifecycleActionsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersLifecycleActionsUserActionNamePut(, userActionName As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Initiate Bulk Binder User Actions
		  // - parameter userActionName: (path) The user action name__v field value. Find this value with the Retrieve User Actions on Multiple Binders endpoint. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersLifecycleActionsUserActionNamePutCallback() on completion. 
		  //
		  // - PUT /objects/binders/lifecycle_actions/{user_action_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/lifecycle_actions/{user_action_name}"
		  
		  Dim localVarPathStringuserActionName As String = userActionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{user_action_name}", localVarPathStringuserActionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersLifecycleActionsUserActionNamePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersLifecycleActionsUserActionNamePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersLifecycleActionsUserActionNamePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersLifecycleActionsUserActionNamePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersLifecycleActionsUserActionNamePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersLifecycleActionsUserActionNamePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersPost(, Optional Escapedasync As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Binder
		  // - parameter Escapedasync: (query) When creating a binder, the binder metadata is indexed synchronously by default. To process the indexing asynchronously, include a query parameter async set to true (objects/binders?async&#x3D;true). This helps speed up the response time from Vault when processing large amounts of data.  (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersPostCallback() on completion. 
		  //
		  // - POST /objects/binders
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If Escapedasync <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("async") + "=" + EncodeURLComponent(Escapedasync.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersTemplatesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder Template Collection
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersTemplatesGetCallback() on completion. 
		  //
		  // - GET /objects/binders/templates
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/templates"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersTemplatesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersTemplatesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersTemplatesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersTemplatesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersTemplatesPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Binder Template
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersTemplatesPostCallback() on completion. 
		  //
		  // - POST /objects/binders/templates
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/templates"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersTemplatesPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersTemplatesPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersTemplatesPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersTemplatesPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersTemplatesPut(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Binder Template
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersTemplatesPutCallback() on completion. 
		  //
		  // - PUT /objects/binders/templates
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/templates"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersTemplatesPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersTemplatesPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersTemplatesPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersTemplatesPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersTemplatesTemplateNameBindernodesGet(, templateName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder Template Node Attributes
		  // - parameter templateName: (path) The binder template name__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersTemplatesTemplateNameBindernodesGetCallback() on completion. 
		  //
		  // - GET /objects/binders/templates/{template_name}/bindernodes
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/templates/{template_name}/bindernodes"
		  
		  Dim localVarPathStringtemplateName As String = templateName
		  
		  localVarPath = localVarPath.ReplaceAllB("{template_name}", localVarPathStringtemplateName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersTemplatesTemplateNameBindernodesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersTemplatesTemplateNameBindernodesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesTemplateNameBindernodesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersTemplatesTemplateNameBindernodesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesTemplateNameBindernodesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersTemplatesTemplateNameBindernodesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersTemplatesTemplateNameBindernodesPost(, templateName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Binder Template Node
		  // - parameter templateName: (path) The binder template name__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersTemplatesTemplateNameBindernodesPostCallback() on completion. 
		  //
		  // - POST /objects/binders/templates/{template_name}/bindernodes
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/templates/{template_name}/bindernodes"
		  
		  Dim localVarPathStringtemplateName As String = templateName
		  
		  localVarPath = localVarPath.ReplaceAllB("{template_name}", localVarPathStringtemplateName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersTemplatesTemplateNameBindernodesPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersTemplatesTemplateNameBindernodesPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesTemplateNameBindernodesPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersTemplatesTemplateNameBindernodesPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesTemplateNameBindernodesPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersTemplatesTemplateNameBindernodesPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersTemplatesTemplateNameBindernodesPut(, templateName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Replace Binder Template Nodes
		  // - parameter templateName: (path) The binder template name__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersTemplatesTemplateNameBindernodesPutCallback() on completion. 
		  //
		  // - PUT /objects/binders/templates/{template_name}/bindernodes
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/templates/{template_name}/bindernodes"
		  
		  Dim localVarPathStringtemplateName As String = templateName
		  
		  localVarPath = localVarPath.ReplaceAllB("{template_name}", localVarPathStringtemplateName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersTemplatesTemplateNameBindernodesPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersTemplatesTemplateNameBindernodesPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesTemplateNameBindernodesPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersTemplatesTemplateNameBindernodesPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesTemplateNameBindernodesPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersTemplatesTemplateNameBindernodesPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersTemplatesTemplateNameDelete(, templateName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Binder Template
		  // - parameter templateName: (path) The binder template name__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersTemplatesTemplateNameDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/binders/templates/{template_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/templates/{template_name}"
		  
		  Dim localVarPathStringtemplateName As String = templateName
		  
		  localVarPath = localVarPath.ReplaceAllB("{template_name}", localVarPathStringtemplateName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersTemplatesTemplateNameDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersTemplatesTemplateNameDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesTemplateNameDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersTemplatesTemplateNameDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesTemplateNameDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersTemplatesTemplateNameDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsBindersTemplatesTemplateNameGet(, templateName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Binder Template Attributes
		  // - parameter templateName: (path) The binder template name__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsBindersTemplatesTemplateNameGetCallback() on completion. 
		  //
		  // - GET /objects/binders/templates/{template_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/binders/templates/{template_name}"
		  
		  Dim localVarPathStringtemplateName As String = templateName
		  
		  localVarPath = localVarPath.ReplaceAllB("{template_name}", localVarPathStringtemplateName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsBindersTemplatesTemplateNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsBindersTemplatesTemplateNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesTemplateNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsBindersTemplatesTemplateNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsBindersTemplatesTemplateNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsBindersTemplatesTemplateNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDeletionsDocumentsGet(, Optional startDate As Xoson.O.OptionalString, Optional endDate As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Deleted Document IDs
		  // - parameter startDate: (query) Specify a date (no more than 30 days past) after which Vault will look for deleted documents. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z (optional, default to Sample)
		  // - parameter endDate: (query) Specify a date (no more than 30 days past) before which Vault will look for deleted documents. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDeletionsDocumentsGetCallback() on completion. 
		  //
		  // - GET /objects/deletions/documents
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If startDate <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("start_date") + "=" + EncodeURLComponent(startDate)
		  
		  If endDate <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("end_date") + "=" + EncodeURLComponent(endDate)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/deletions/documents"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDeletionsDocumentsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDeletionsDocumentsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDeletionsDocumentsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDeletionsDocumentsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDeletionsDocumentsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDeletionsDocumentsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDeletionsVobjectsObjectNameGet(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Deleted Object Record ID
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDeletionsVobjectsObjectNameGetCallback() on completion. 
		  //
		  // - GET /objects/deletions/vobjects/{object_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/deletions/vobjects/{object_name}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDeletionsVobjectsObjectNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDeletionsVobjectsObjectNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDeletionsVobjectsObjectNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDeletionsVobjectsObjectNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDeletionsVobjectsObjectNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDeletionsVobjectsObjectNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsActionsGet(, Optional loc As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Document Workflows
		  // - parameter loc: (query) When localized (translated) strings are available, retrieve them by setting loc to true. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsActionsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/actions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/actions"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsActionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsActionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsActionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsActionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsActionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsActionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGet(, lifecycleAndStateAndAction As String, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Controlled Copy Job Results
		  // - parameter lifecycleAndStateAndAction: (path) The &#x60;name__v&#x60; values for the lifecycle, state, and action in the format &#x60;{lifecycle_name}.{state_name}.{action_name}&#x60;. To get this value, [Retrieve the Job Status](https://developer.veevavault.com/api/24.3#RetrieveJobStatus) and find the &#x60;href&#x60; under the &#x60;artifacts&#x60; link. 
		  // - parameter jobId: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/actions/{lifecycle_and_state_and_action}/{job_id}/results
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/actions/{lifecycle_and_state_and_action}/{job_id}/results"
		  
		  Dim localVarPathStringlifecycleAndStateAndAction As String = lifecycleAndStateAndAction
		  
		  localVarPath = localVarPath.ReplaceAllB("{lifecycle_and_state_and_action}", localVarPathStringlifecycleAndStateAndAction)
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsActionsWorkflowNameGet(, workflowName As String, Optional loc As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Workflow Details
		  // - parameter workflowName: (path) The document workflow name value. 
		  // - parameter loc: (query) When localized (translated) strings are available, retrieve them by setting loc to true. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsActionsWorkflowNameGetCallback() on completion. 
		  //
		  // - GET /objects/documents/actions/{workflow_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/actions/{workflow_name}"
		  
		  Dim localVarPathStringworkflowName As String = workflowName
		  
		  localVarPath = localVarPath.ReplaceAllB("{workflow_name}", localVarPathStringworkflowName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsActionsWorkflowNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsActionsWorkflowNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsActionsWorkflowNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsActionsWorkflowNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsActionsWorkflowNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsActionsWorkflowNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsActionsWorkflowNamePost(, workflowName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Initiate Document Workflow
		  // - parameter workflowName: (path) The document workflow name value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsActionsWorkflowNamePostCallback() on completion. 
		  //
		  // - POST /objects/documents/actions/{workflow_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/actions/{workflow_name}"
		  
		  Dim localVarPathStringworkflowName As String = workflowName
		  
		  localVarPath = localVarPath.ReplaceAllB("{workflow_name}", localVarPathStringworkflowName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsActionsWorkflowNamePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsActionsWorkflowNamePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsActionsWorkflowNamePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsActionsWorkflowNamePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsActionsWorkflowNamePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsActionsWorkflowNamePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsAnnotationsBatchDelete(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Annotations
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsAnnotationsBatchDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/annotations/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/annotations/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsAnnotationsBatchDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsAnnotationsBatchDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAnnotationsBatchDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsAnnotationsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAnnotationsBatchDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsAnnotationsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsAnnotationsBatchPost(, authorization As String, contentType As String, accept As String, xVaultAPIClientID As String)
		  // Operation 
		  // Create Multiple Annotations
		  // - parameter authorization: (header)  
		  // - parameter contentType: (header)  
		  // - parameter accept: (header)  
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. 
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsAnnotationsBatchPostCallback() on completion. 
		  //
		  // - POST /objects/documents/annotations/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/annotations/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsAnnotationsBatchPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsAnnotationsBatchPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAnnotationsBatchPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsAnnotationsBatchPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAnnotationsBatchPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsAnnotationsBatchPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsAnnotationsBatchPut(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Annotations
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsAnnotationsBatchPutCallback() on completion. 
		  //
		  // - PUT /objects/documents/annotations/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/annotations/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsAnnotationsBatchPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsAnnotationsBatchPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAnnotationsBatchPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsAnnotationsBatchPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAnnotationsBatchPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsAnnotationsBatchPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsAnnotationsRepliesBatchPost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Add Annotation Replies
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsAnnotationsRepliesBatchPostCallback() on completion. 
		  //
		  // - POST /objects/documents/annotations/replies/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/annotations/replies/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsAnnotationsRepliesBatchPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsAnnotationsRepliesBatchPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAnnotationsRepliesBatchPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsAnnotationsRepliesBatchPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAnnotationsRepliesBatchPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsAnnotationsRepliesBatchPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsAttachmentsBatchDelete(, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Multiple Document Attachments
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsAttachmentsBatchDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/attachments/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/attachments/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsAttachmentsBatchDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsAttachmentsBatchDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAttachmentsBatchDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsAttachmentsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAttachmentsBatchDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsAttachmentsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsAttachmentsBatchPost(, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Multiple Document Attachments
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsAttachmentsBatchPostCallback() on completion. 
		  //
		  // - POST /objects/documents/attachments/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/attachments/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsAttachmentsBatchPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsAttachmentsBatchPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAttachmentsBatchPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsAttachmentsBatchPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAttachmentsBatchPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsAttachmentsBatchPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsAttachmentsBatchPut(, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Multiple Document Attachment Descriptions
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsAttachmentsBatchPutCallback() on completion. 
		  //
		  // - PUT /objects/documents/attachments/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/attachments/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsAttachmentsBatchPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsAttachmentsBatchPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAttachmentsBatchPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsAttachmentsBatchPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsAttachmentsBatchPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsAttachmentsBatchPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsBatchActionsFileextractJobIdResultsGet(, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Export Results
		  // - parameter jobId: (path) The id value of the requested export job. This is returned with the export document requests. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsBatchActionsFileextractJobIdResultsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/batch/actions/fileextract/{job_id}/results
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/batch/actions/fileextract/{job_id}/results"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsBatchActionsFileextractJobIdResultsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsBatchActionsFileextractJobIdResultsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchActionsFileextractJobIdResultsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsBatchActionsFileextractJobIdResultsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchActionsFileextractJobIdResultsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsBatchActionsFileextractJobIdResultsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsBatchActionsFileextractPost(, Optional source As Xoson.O.OptionalBoolean, Optional renditions As Xoson.O.OptionalBoolean, Optional allversions As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Export Documents
		  // - parameter source: (query) Optional: To exclude source files, include a query parameter source&#x3D;false. If omitted, defaults to true. (optional, default to False)
		  // - parameter renditions: (query) Optional: To include renditions, include a query parameter renditions&#x3D;true. If omitted, defaults to false. (optional, default to False)
		  // - parameter allversions: (query) Optional: To include all versions or latest version, include a query parameter allversions&#x3D;true. If omitted, defaults to false. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsBatchActionsFileextractPostCallback() on completion. 
		  //
		  // - POST /objects/documents/batch/actions/fileextract
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If source <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("source") + "=" + EncodeURLComponent(source.ToString)
		  
		  If renditions <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("renditions") + "=" + EncodeURLComponent(renditions.ToString)
		  
		  If allversions <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("allversions") + "=" + EncodeURLComponent(allversions.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/batch/actions/fileextract"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsBatchActionsFileextractPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsBatchActionsFileextractPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchActionsFileextractPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsBatchActionsFileextractPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchActionsFileextractPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsBatchActionsFileextractPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsBatchActionsReclassifyPut(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIMigrationMode As Xoson.O.OptionalBoolean, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Reclassify Multiple Documents
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIMigrationMode: (header) When set to true, Vault allows you to manually set the document number and to update documents to any lifecycle state using the status__v field. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message.  You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;&quot;https://platform.veevavault.help/en/gr/54028&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to False)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsBatchActionsReclassifyPutCallback() on completion. 
		  //
		  // - PUT /objects/documents/batch/actions/reclassify
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIMigrationMode <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-MigrationMode"), EncodeURLComponent(xVaultAPIMigrationMode.ToString))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/batch/actions/reclassify"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsBatchActionsReclassifyPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsBatchActionsReclassifyPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchActionsReclassifyPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsBatchActionsReclassifyPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchActionsReclassifyPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsBatchActionsReclassifyPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsBatchActionsRerenderPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Multiple Document Renditions
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsBatchActionsRerenderPostCallback() on completion. 
		  //
		  // - POST /objects/documents/batch/actions/rerender
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/batch/actions/rerender"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsBatchActionsRerenderPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsBatchActionsRerenderPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchActionsRerenderPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsBatchActionsRerenderPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchActionsRerenderPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsBatchActionsRerenderPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsBatchDelete(, Optional idParam As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Multiple Documents
		  // - parameter idParam: (query) If you’re identifying documents in your input by their external ID (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsBatchDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If idParam <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("idParam") + "=" + EncodeURLComponent(idParam)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsBatchDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsBatchDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsBatchLockDelete(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Undo Collaborative Authoring Checkout
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsBatchLockDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/batch/lock
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/batch/lock"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsBatchLockDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsBatchLockDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchLockDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsBatchLockDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchLockDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsBatchLockDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsBatchPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIMigrationMode As Xoson.O.OptionalBoolean, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Multiple Documents
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIMigrationMode: (header) When set to true, Vault allows you to create documents in any lifecycle state using the status__v field, and to manually set the name, document number, and version number. Vault also bypasses entry criteria, entry actions, and event actions. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;&quot;https://platform.veevavault.help/en/gr/54028&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to False)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsBatchPostCallback() on completion. 
		  //
		  // - POST /objects/documents/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIMigrationMode <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-MigrationMode"), EncodeURLComponent(xVaultAPIMigrationMode.ToString))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsBatchPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsBatchPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsBatchPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsBatchPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsBatchPut(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIMigrationMode As Xoson.O.OptionalBoolean, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Multiple Documents
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIMigrationMode: (header) When set to true, Vault allows you to change the document number. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message. You must have the Document Migration permission to use this header.Learn more about &lt;a href&#x3D;&quot;https://platform.veevavault.help/en/gr/54028&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to False)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsBatchPutCallback() on completion. 
		  //
		  // - PUT /objects/documents/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIMigrationMode <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-MigrationMode"), EncodeURLComponent(xVaultAPIMigrationMode.ToString))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsBatchPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsBatchPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsBatchPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsBatchPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsBatchPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAnchorsGet(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Anchor IDs
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAnchorsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/anchors
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/anchors"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAnchorsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAnchorsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAnchorsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAnchorsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAnchorsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAnchorsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAnnotationsFileGet(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Export Document Annotations to PDF
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAnnotationsFileGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/annotations/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/annotations/file"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAnnotationsFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAnnotationsFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAnnotationsFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAnnotationsFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAnnotationsFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAnnotationsFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAnnotationsFilePost(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Import Document Annotations from PDF
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAnnotationsFilePostCallback() on completion. 
		  //
		  // - POST /objects/documents/{doc_id}/annotations/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/annotations/file"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAnnotationsFilePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAnnotationsFilePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAnnotationsFilePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAnnotationsFilePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAnnotationsFilePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAnnotationsFilePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdDelete(, docId As String, attachmentId As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Single Document Attachment
		  // - parameter docId: (path) The document id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/{doc_id}/attachments/{attachment_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments/{attachment_id}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdFileGet(, docId As String, attachmentId As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Document Attachment
		  // - parameter docId: (path) The document id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdFileGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/attachments/{attachment_id}/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments/{attachment_id}/file"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdGet(, docId As String, attachmentId As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Attachment Metadata
		  // - parameter docId: (path) The document id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/attachments/{attachment_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments/{attachment_id}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdPut(, docId As String, attachmentId As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Document Attachment Description
		  // - parameter docId: (path) The document id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdPutCallback() on completion. 
		  //
		  // - PUT /objects/documents/{doc_id}/attachments/{attachment_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments/{attachment_id}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete(, docId As String, attachmentId As String, attachmentVersion As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Single Document Attachment Version
		  // - parameter docId: (path) The document id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter attachmentVersion: (path) The attachment version__v field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  Dim localVarPathStringattachmentVersion As String = attachmentVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_version}", localVarPathStringattachmentVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet(, docId As String, attachmentId As String, attachmentVersion As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Document Attachment Version
		  // - parameter docId: (path) The document id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter attachmentVersion: (path) The attachment version__v field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}/file"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  Dim localVarPathStringattachmentVersion As String = attachmentVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_version}", localVarPathStringattachmentVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGet(, docId As String, attachmentId As String, attachmentVersion As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Attachment Version Metadata
		  // - parameter docId: (path) The document id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter attachmentVersion: (path) The attachment version__v field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  Dim localVarPathStringattachmentVersion As String = attachmentVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_version}", localVarPathStringattachmentVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPost(, docId As String, attachmentId As String, attachmentVersion As String, Optional restore As Xoson.O.OptionalBoolean, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Restore Document Attachment Version
		  // - parameter docId: (path) The document id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter attachmentVersion: (path) The attachment version__v field value. 
		  // - parameter restore: (query) The parameter restore must be set to true.  (optional, default to False)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPostCallback() on completion. 
		  //
		  // - POST /objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If restore <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("restore") + "=" + EncodeURLComponent(restore.ToString)
		  
		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  Dim localVarPathStringattachmentVersion As String = attachmentVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_version}", localVarPathStringattachmentVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsGet(, docId As String, attachmentId As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Attachment Versions
		  // - parameter docId: (path) The document id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/attachments/{attachment_id}/versions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments/{attachment_id}/versions"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsAttachmentIdVersionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsFileGet(, docId As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download All Document Attachments
		  // - parameter docId: (path) The document id field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsFileGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/attachments/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments/file"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsGet(, docId As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Attachments
		  // - parameter docId: (path) The document id field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/attachments
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAttachmentsPost(, docId As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Document Attachment
		  // - parameter docId: (path) The document id field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAttachmentsPostCallback() on completion. 
		  //
		  // - POST /objects/documents/{doc_id}/attachments
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/attachments"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAttachmentsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAttachmentsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAttachmentsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAttachmentsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdAudittrailGet(, docId As String, Optional startDate As Xoson.O.OptionalString, Optional endDate As Xoson.O.OptionalString, Optional formatResult As Xoson.O.OptionalString, Optional limit As Xoson.O.OptionalString, Optional offset As Xoson.O.OptionalString, Optional events As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Complete Audit History for a Single Document
		  // - parameter docId: (path) The document ID for which to retrieve audit history. 
		  // - parameter startDate: (query) Specify a start date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to the vault’s creation date.  (optional, default to Sample)
		  // - parameter endDate: (query) Specify an end date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to today’s date.  (optional, default to Sample)
		  // - parameter formatResult: (query) To request a CSV file of your audit history, use csv.  (optional, default to Sample)
		  // - parameter limit: (query) Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200. (optional, default to Sample)
		  // - parameter offset: (query) Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. If omitted, defaults to 0. (optional, default to Sample)
		  // - parameter events: (query) Provide a comma-separated list of one or more audit events to retrieve their audit history. See Vault Help for a full list of document audit events. The values passed to this parameter are case sensitive. For example, events&#x3D;WorkflowCompletion,TaskAssignment. If omitted, defaults to all audit events. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdAudittrailGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/audittrail
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If startDate <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("start_date") + "=" + EncodeURLComponent(startDate)
		  
		  If endDate <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("end_date") + "=" + EncodeURLComponent(endDate)
		  
		  If formatResult <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("format_result") + "=" + EncodeURLComponent(formatResult)
		  
		  If limit <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("limit") + "=" + EncodeURLComponent(limit)
		  
		  If offset <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("offset") + "=" + EncodeURLComponent(offset)
		  
		  If events <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("events") + "=" + EncodeURLComponent(events)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/audittrail"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdAudittrailGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdAudittrailGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAudittrailGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdAudittrailGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdAudittrailGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdAudittrailGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdDelete(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Single Document
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/{doc_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdEventsGet(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Events
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdEventsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/events
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/events"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdEventsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdEventsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdEventsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdEventsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdEventsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdEventsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdFileGet(, docId As String, Optional lockDocument As Xoson.O.OptionalBoolean, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Document File
		  // - parameter docId: (path) The document id field value. 
		  // - parameter lockDocument: (query) Set to true to Check Out this document before retrieval. If omitted, defaults to false. (optional, default to False)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdFileGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If lockDocument <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("lockDocument") + "=" + EncodeURLComponent(lockDocument.ToString)
		  
		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/file"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdGet(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdLockDelete(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Document Lock
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdLockDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/{doc_id}/lock
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/lock"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdLockDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdLockDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdLockDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdLockDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdLockDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdLockDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdLockGet(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Lock
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdLockGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/lock
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/lock"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdLockGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdLockGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdLockGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdLockGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdLockGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdLockGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdLockPost(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Document Lock
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdLockPostCallback() on completion. 
		  //
		  // - POST /objects/documents/{doc_id}/lock
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/lock"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdLockPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdLockPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdLockPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdLockPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdLockPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdLockPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGet(, docId As String, majorVersion As String, minorVersion As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download All Document Version Attachments
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/{major_version}/{minor_version}/attachments/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/{major_version}/{minor_version}/attachments/file"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdPost(, docId As String, Optional suppressRendition As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Single Document Version
		  // - parameter docId: (path) The document id field value. 
		  // - parameter suppressRendition: (query) Set to true to suppress automatic generation of the viewable rendition. If omitted, defaults to false (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdPostCallback() on completion. 
		  //
		  // - POST /objects/documents/{doc_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If suppressRendition <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("suppressRendition") + "=" + EncodeURLComponent(suppressRendition)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdPut(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIMigrationMode As Xoson.O.OptionalBoolean, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Single Document
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIMigrationMode: (header) When set to true, Vault allows you to change the document number. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;&quot;https://platform.veevavault.help/en/gr/54028&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to False)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdPutCallback() on completion. 
		  //
		  // - PUT /objects/documents/{doc_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIMigrationMode <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-MigrationMode"), EncodeURLComponent(xVaultAPIMigrationMode.ToString))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdRenditionsGet(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Renditions
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdRenditionsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/renditions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/renditions"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdRenditionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdRenditionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRenditionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdRenditionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRenditionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdRenditionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdRenditionsRenditionTypeDelete(, docId As String, renditionType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Single Document Rendition
		  // - parameter docId: (path) The document id field value. 
		  // - parameter renditionType: (path) The document rendition type. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypeDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/{doc_id}/renditions/{rendition_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/renditions/{rendition_type}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringrenditionType As String = renditionType
		  
		  localVarPath = localVarPath.ReplaceAllB("{rendition_type}", localVarPathStringrenditionType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdRenditionsRenditionTypeDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdRenditionsRenditionTypeDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRenditionsRenditionTypeDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypeDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRenditionsRenditionTypeDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypeDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdRenditionsRenditionTypeGet(, docId As String, renditionType As String, Optional steadyState As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Document Rendition File
		  // - parameter docId: (path) The document id field value. 
		  // - parameter renditionType: (path) The document rendition type. 
		  // - parameter steadyState: (query) Set to true to download a rendition (file) from the latest steady state version (1.0, 2.0, etc.) of a document.  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypeGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/renditions/{rendition_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If steadyState <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("steadyState") + "=" + EncodeURLComponent(steadyState)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/renditions/{rendition_type}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringrenditionType As String = renditionType
		  
		  localVarPath = localVarPath.ReplaceAllB("{rendition_type}", localVarPathStringrenditionType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdRenditionsRenditionTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdRenditionsRenditionTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRenditionsRenditionTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRenditionsRenditionTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdRenditionsRenditionTypePost(, docId As String, renditionType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Add Single Document Rendition
		  // - parameter docId: (path) The document id field value. 
		  // - parameter renditionType: (path) The document rendition type. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypePostCallback() on completion. 
		  //
		  // - POST /objects/documents/{doc_id}/renditions/{rendition_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/renditions/{rendition_type}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringrenditionType As String = renditionType
		  
		  localVarPath = localVarPath.ReplaceAllB("{rendition_type}", localVarPathStringrenditionType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdRenditionsRenditionTypePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdRenditionsRenditionTypePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRenditionsRenditionTypePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRenditionsRenditionTypePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdRenditionsRenditionTypePut(, docId As String, renditionType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Replace Document Rendition
		  // - parameter docId: (path) The document id field value. 
		  // - parameter renditionType: (path) The document rendition type. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypePutCallback() on completion. 
		  //
		  // - PUT /objects/documents/{doc_id}/renditions/{rendition_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/renditions/{rendition_type}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringrenditionType As String = renditionType
		  
		  localVarPath = localVarPath.ReplaceAllB("{rendition_type}", localVarPathStringrenditionType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdRenditionsRenditionTypePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdRenditionsRenditionTypePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRenditionsRenditionTypePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRenditionsRenditionTypePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdRenditionsRenditionTypePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDelete(, docId As String, roleNameAndUserOrGroup As String, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Remove Users & Groups from Roles on a Single Document
		  // - parameter docId: (path) The id value of the document from which to remove roles. 
		  // - parameter roleNameAndUserOrGroup: (path) The name of the role from which to remove the user or group followed by either &#x60;user&#x60; or &#x60;group&#x60;. The format is &#x60;{role_name}.{user_or_group}&#x60;. For example, &#x60;consumer__v.user&#x60;. 
		  // - parameter id: (path) The id value of the user or group to remove from the role. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/{doc_id}/roles/{role_name_and_user_or_group}/{id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/roles/{role_name_and_user_or_group}/{id}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringroleNameAndUserOrGroup As String = roleNameAndUserOrGroup
		  
		  localVarPath = localVarPath.ReplaceAllB("{role_name_and_user_or_group}", localVarPathStringroleNameAndUserOrGroup)
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGet(, docId As String, majorVersion As String, minorVersion As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Version Attachments
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/version/{major_version}/{minor_version}/attachments
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/version/{major_version}/{minor_version}/attachments"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsGet(, docId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Versions
		  // - parameter docId: (path) The document id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGet(, docId As String, majorVersion As String, minorVersion As String, annotationId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Read Annotations by ID
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter annotationId: (path) The annotation ID, which can be retrieved with Read Annotations by Document Version and Type. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/{annotation_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/{annotation_id}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringannotationId As String = annotationId
		  
		  localVarPath = localVarPath.ReplaceAllB("{annotation_id}", localVarPathStringannotationId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGet(, docId As String, majorVersion As String, minorVersion As String, annotationId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Read Replies of Parent Annotation
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter annotationId: (path) The parent annotation ID, which can be retrieved with Read Annotations by Document Version and Type. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/{annotation_id}/replies
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/{annotation_id}/replies"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringannotationId As String = annotationId
		  
		  localVarPath = localVarPath.ReplaceAllB("{annotation_id}", localVarPathStringannotationId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGet(, docId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Export Document Version Annotations to PDF
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/file"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePost(, docId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Import Document Version Annotations from PDF
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePostCallback() on completion. 
		  //
		  // - POST /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/file"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGet(, docId As String, majorVersion As String, minorVersion As String, Optional limit As Xoson.O.OptionalString, Optional offset As Xoson.O.OptionalString, Optional annotationTypes As Xoson.O.OptionalString, Optional paginationId As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Read Annotations by Document Version and Type
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter limit: (query) Paginate the results by specifying the maximum number of records per page in the response. This can be any value between 1 and 500. If omitted, defaults to 500. Values greater than 500 are ignored. (optional, default to Sample)
		  // - parameter offset: (query) This parameter is used to paginate the results. It specifies the amount of offset from the first record returned. Vault returns 200 records per page by default. If you are viewing the first 200 results (page 1) and want to see the next page, set this to offset&#x3D;201. (optional, default to Sample)
		  // - parameter annotationTypes: (query) The type(s) of annotations to retrieve. For example, note__sys,anchor__sys. If omitted, Vault returns all annotations. Valid annotation types include: &#x60;note__sys&#x60; &#x60;line__sys&#x60; &#x60;document_link__sys&#x60; &#x60;permalink_link__sys&#x60; &#x60;anchor__sys&#x60; &#x60;reply__sys&#x60; &#x60;external_link__sys&#x60;  The following annotation types are only valid in PromoMats Vaults:  &#x60;suggested_link__sys&#x60; &#x60;approved_link__sys&#x60; &#x60;auto_link__sys&#x60; &#x60;keyword_link__sys&#x60;  (optional, default to Sample)
		  // - parameter paginationId: (query) A unique identifier used to load requests with paginated results. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If limit <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("limit") + "=" + EncodeURLComponent(limit)
		  
		  If offset <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("offset") + "=" + EncodeURLComponent(offset)
		  
		  If annotationTypes <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("annotation_types") + "=" + EncodeURLComponent(annotationTypes)
		  
		  If paginationId <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("pagination_id") + "=" + EncodeURLComponent(paginationId)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGet(, docId As String, majorVersion As String, minorVersion As String, attachmentId As String, attachmentVersion As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Document Version Attachment Version
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter attachmentId: (path) The id field value of the attachment. 
		  // - parameter attachmentVersion: (path) The version of the attachment. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/attachments/{attachment_id}/versions/{attachment_version}/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/attachments/{attachment_id}/versions/{attachment_version}/file"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  Dim localVarPathStringattachmentVersion As String = attachmentVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_version}", localVarPathStringattachmentVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGet(, docId As String, majorVersion As String, minorVersion As String, attachmentId As String, attachmentVersion As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Version Attachment Versions
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter attachmentId: (path) The id of the document attachment to retrieve. 
		  // - parameter attachmentVersion: (path) Optional: The version of the attachment to retrieve. If omitted, the endpoint retrieves all versions of the specified attachment. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/attachments/{attachment_id}/versions/{attachment_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/attachments/{attachment_id}/versions/{attachment_version}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  Dim localVarPathStringattachmentVersion As String = attachmentVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_version}", localVarPathStringattachmentVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDelete(, docId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Single Document Version
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/{doc_id}/versions/{major_version}/{minor_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGet(, docId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Version Notes as CSV
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/doc-export-annotations-to-csv
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/doc-export-annotations-to-csv"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPost(, docId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Document Event
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPostCallback() on completion. 
		  //
		  // - POST /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/events
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/events"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGet(, docId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Video Annotations
		  // - parameter docId: (path) The video document id field value. 
		  // - parameter majorVersion: (path) The video document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The video document minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header) This &#x60;Accept&#x60; header only changes the format of the response in the case of an error. On &#x60;SUCCESS&#x60;, the HTTP Response Header &#x60;Content-Type&#x60; is set to &#x60;text/plain;charset&#x3D;UnicodeLittle&#x60;. (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/export-video-annotations
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/export-video-annotations"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGet(, docId As String, majorVersion As String, minorVersion As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Document Version File
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/file"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionGet(, docId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Version
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionPut(, docId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIMigrationMode As Xoson.O.OptionalBoolean, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Document Version
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIMigrationMode: (header) When set to true, Vault allows you to manually set the document number. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;&quot;https://platform.veevavault.help/en/gr/54028&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to False)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionPutCallback() on completion. 
		  //
		  // - PUT /objects/documents/{doc_id}/versions/{major_version}/{minor_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIMigrationMode <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-MigrationMode"), EncodeURLComponent(xVaultAPIMigrationMode.ToString))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGet(, docId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Relationships
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPost(, docId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Single Document Relationship
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPostCallback() on completion. 
		  //
		  // - POST /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete(, docId As String, majorVersion As String, minorVersion As String, relationshipId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Single Document Relationship
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter relationshipId: (path) The relationship id field value. See Retrieve Document Relationships. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringrelationshipId As String = relationshipId
		  
		  localVarPath = localVarPath.ReplaceAllB("{relationship_id}", localVarPathStringrelationshipId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet(, docId As String, majorVersion As String, minorVersion As String, relationshipId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Relationship
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter relationshipId: (path) The relationship id field value. See Retrieve Document Relationships. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringrelationshipId As String = relationshipId
		  
		  localVarPath = localVarPath.ReplaceAllB("{relationship_id}", localVarPathStringrelationshipId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGet(, docId As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Version Renditions
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDelete(, docId As String, majorVersion As String, minorVersion As String, renditionType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Document Version Rendition
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter renditionType: (path) The document rendition type. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringrenditionType As String = renditionType
		  
		  localVarPath = localVarPath.ReplaceAllB("{rendition_type}", localVarPathStringrenditionType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGet(, docId As String, majorVersion As String, minorVersion As String, renditionType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Document Version Rendition File
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter renditionType: (path) The document rendition type. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringrenditionType As String = renditionType
		  
		  localVarPath = localVarPath.ReplaceAllB("{rendition_type}", localVarPathStringrenditionType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePost(, docId As String, majorVersion As String, minorVersion As String, renditionType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Upload Document Version Rendition
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter renditionType: (path) The document rendition type. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePostCallback() on completion. 
		  //
		  // - POST /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringrenditionType As String = renditionType
		  
		  localVarPath = localVarPath.ReplaceAllB("{rendition_type}", localVarPathStringrenditionType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePut(, docId As String, majorVersion As String, minorVersion As String, renditionType As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Replace Document Version Rendition
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter renditionType: (path) The document rendition type. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePutCallback() on completion. 
		  //
		  // - PUT /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringrenditionType As String = renditionType
		  
		  localVarPath = localVarPath.ReplaceAllB("{rendition_type}", localVarPathStringrenditionType)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGet(, docId As String, majorVersion As String, minorVersion As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Document Version Thumbnail File
		  // - parameter docId: (path) The document id field value. 
		  // - parameter majorVersion: (path) The document major_version_number__v field value. 
		  // - parameter minorVersion: (path) The document minor_version_number__v field value. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{doc_id}/versions/{major_version}/{minor_version}/thumbnail
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/thumbnail"
		  
		  Dim localVarPathStringdocId As String = docId
		  
		  localVarPath = localVarPath.ReplaceAllB("{doc_id}", localVarPathStringdocId)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsGet(, Optional namedFilter As Xoson.O.OptionalString, Optional scope As Xoson.O.OptionalString, Optional versionscope As Xoson.O.OptionalString, Optional search As Xoson.O.OptionalString, Optional limit As Xoson.O.OptionalString, Optional sort As Xoson.O.OptionalString, Optional start As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Documents
		  // - parameter namedFilter: (query) Retrieves only documents which you have created. (optional, default to Sample)
		  // - parameter scope: (query) Searches only within the document content. (optional, default to Sample)
		  // - parameter versionscope: (query) Retrieves all document versions, rather than only the latest version. (optional, default to Sample)
		  // - parameter search: (query) Search for documents based on a {keyword} in searchable document fields. (optional, default to Sample)
		  // - parameter limit: (query) See VQL documentation for more information. (optional, default to Sample)
		  // - parameter sort: (query) See VQL documentation for more information. (optional, default to Sample)
		  // - parameter start: (query) See VQL documentation for more information. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsGetCallback() on completion. 
		  //
		  // - GET /objects/documents
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If namedFilter <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("named_filter") + "=" + EncodeURLComponent(namedFilter)
		  
		  If scope <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("scope") + "=" + EncodeURLComponent(scope)
		  
		  If versionscope <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("versionscope") + "=" + EncodeURLComponent(versionscope)
		  
		  If search <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("search") + "=" + EncodeURLComponent(search)
		  
		  If limit <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("limit") + "=" + EncodeURLComponent(limit)
		  
		  If sort <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("sort") + "=" + EncodeURLComponent(sort)
		  
		  If start <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("start") + "=" + EncodeURLComponent(start)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsIdRolesGet(, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Document Roles
		  // - parameter id: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsIdRolesGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{id}/roles
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{id}/roles"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsIdRolesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsIdRolesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdRolesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsIdRolesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdRolesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsIdRolesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsIdRolesPost(, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Assign Users & Groups to Roles on a Single Document
		  // - parameter id: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsIdRolesPostCallback() on completion. 
		  //
		  // - POST /objects/documents/{id}/roles
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{id}/roles"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsIdRolesPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsIdRolesPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdRolesPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsIdRolesPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdRolesPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsIdRolesPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsIdRolesRoleNameGet(, id As String, roleName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Role
		  // - parameter id: (path) The document &#x60;id&#x60;. 
		  // - parameter roleName: (path) The name of the role to retrieve. For example, &#x60;owner__v&#x60;. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsIdRolesRoleNameGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{id}/roles/{role_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{id}/roles/{role_name}"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  Dim localVarPathStringroleName As String = roleName
		  
		  localVarPath = localVarPath.ReplaceAllB("{role_name}", localVarPathStringroleName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsIdRolesRoleNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsIdRolesRoleNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdRolesRoleNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsIdRolesRoleNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdRolesRoleNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsIdRolesRoleNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGet(, id As String, majorVersion As String, minorVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document User Actions
		  // - parameter id: (path) The document id field value from which to retrieve available user actions. 
		  // - parameter majorVersion: (path) The major version number of the document. 
		  // - parameter minorVersion: (path) The minor version number of the document. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet(, id As String, majorVersion As String, minorVersion As String, nameV As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Entry Criteria
		  // - parameter id: (path) The document id field value from which to retrieve available user actions. 
		  // - parameter majorVersion: (path) The major version number of the document. 
		  // - parameter minorVersion: (path) The minor version number of the document. 
		  // - parameter nameV: (path) The lifecycle name__v field value from which to retrieve entry criteria. This is retrieved from the Retrieve User Actions request above. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGetCallback() on completion. 
		  //
		  // - GET /objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}/entry_requirements
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}/entry_requirements"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringnameV As String = nameV
		  
		  localVarPath = localVarPath.ReplaceAllB("{name__v}", localVarPathStringnameV)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut(, id As String, majorVersion As String, minorVersion As String, nameV As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Initiate Document User Action
		  // - parameter id: (path) The document id field value from which to retrieve available user actions. 
		  // - parameter majorVersion: (path) The major version number of the document. 
		  // - parameter minorVersion: (path) The minor version number of the document. 
		  // - parameter nameV: (path) The action name__v field value to initiate. This is retrieved from the Retrieve User Action request. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPutCallback() on completion. 
		  //
		  // - PUT /objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  Dim localVarPathStringmajorVersion As String = majorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{major_version}", localVarPathStringmajorVersion)
		  Dim localVarPathStringminorVersion As String = minorVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{minor_version}", localVarPathStringminorVersion)
		  Dim localVarPathStringnameV As String = nameV
		  
		  localVarPath = localVarPath.ReplaceAllB("{name__v}", localVarPathStringnameV)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsLifecycleActionsPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve User Actions on Multiple Documents
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsLifecycleActionsPostCallback() on completion. 
		  //
		  // - POST /objects/documents/lifecycle_actions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/lifecycle_actions"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsLifecycleActionsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsLifecycleActionsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsLifecycleActionsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsLifecycleActionsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsLifecycleActionsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsLifecycleActionsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsLifecycleActionsUserActionNamePut(, userActionName As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Initiate Bulk Document User Actions
		  // - parameter userActionName: (path) The user action name__v field value. Find this value with the Retrieve User Actions on Multiple Documents endpoint. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsLifecycleActionsUserActionNamePutCallback() on completion. 
		  //
		  // - PUT /objects/documents/lifecycle_actions/{user_action_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/lifecycle_actions/{user_action_name}"
		  
		  Dim localVarPathStringuserActionName As String = userActionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{user_action_name}", localVarPathStringuserActionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsLifecycleActionsUserActionNamePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsLifecycleActionsUserActionNamePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsLifecycleActionsUserActionNamePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsLifecycleActionsUserActionNamePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsLifecycleActionsUserActionNamePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsLifecycleActionsUserActionNamePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIMigrationMode As Xoson.O.OptionalBoolean, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Single Document
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIMigrationMode: (header) When set to true,  you can use the status__v field to create documents in any lifecycle state. Additionally, you can manually set the name, document number, and version number. Vault also bypasses entry criteria, entry actions, and event actions. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;&quot;https://platform.veevavault.help/en/gr/54028&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to False)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsPostCallback() on completion. 
		  //
		  // - POST /objects/documents
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIMigrationMode <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-MigrationMode"), EncodeURLComponent(xVaultAPIMigrationMode.ToString))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsRelationshipsBatchDelete(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Multiple Document Relationships
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsRelationshipsBatchDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/relationships/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/relationships/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsRelationshipsBatchDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsRelationshipsBatchDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRelationshipsBatchDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsRelationshipsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRelationshipsBatchDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsRelationshipsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsRelationshipsBatchPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Multiple Document Relationships
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsRelationshipsBatchPostCallback() on completion. 
		  //
		  // - POST /objects/documents/relationships/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/relationships/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsRelationshipsBatchPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsRelationshipsBatchPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRelationshipsBatchPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsRelationshipsBatchPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRelationshipsBatchPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsRelationshipsBatchPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsRenditionsBatchDelete(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Multiple Document Renditions
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsRenditionsBatchDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/renditions/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/renditions/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsRenditionsBatchDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsRenditionsBatchDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRenditionsBatchDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsRenditionsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRenditionsBatchDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsRenditionsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsRenditionsBatchPost(, Optional idParam As Xoson.O.OptionalString, Optional largeSizeAsset As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIMigrationMode As Xoson.O.OptionalBoolean, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Add Multiple Document Renditions
		  // - parameter idParam: (query) If you’re identifying documents in your input by their external ID (optional, default to Sample)
		  // - parameter largeSizeAsset: (query) If set to true, indicates that the renditions to add are of the Large Size Asset (large_size_asset__v) rendition type. Vault applies Document Migration Mode limitations to renditions created with the request, but Document Migration permission is not required and your vault need not be in Migration Mode to use the parameter. Note that the request results in an error if the CSV contains any rendition type other than large_size_asset__v. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIMigrationMode: (header) Must be set to true when importing any rendition type other than large_size_asset__v. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;&quot;https://platform.veevavault.help/en/gr/54028&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to False)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsRenditionsBatchPostCallback() on completion. 
		  //
		  // - POST /objects/documents/renditions/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If idParam <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("idParam") + "=" + EncodeURLComponent(idParam)
		  
		  If largeSizeAsset <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("largeSizeAsset") + "=" + EncodeURLComponent(largeSizeAsset)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIMigrationMode <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-MigrationMode"), EncodeURLComponent(xVaultAPIMigrationMode.ToString))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/renditions/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsRenditionsBatchPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsRenditionsBatchPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRenditionsBatchPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsRenditionsBatchPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRenditionsBatchPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsRenditionsBatchPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsRolesBatchDelete(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Remove Users and Groups from Roles on Multiple Documents & Binders
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsRolesBatchDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/roles/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/roles/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsRolesBatchDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsRolesBatchDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRolesBatchDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsRolesBatchDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRolesBatchDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsRolesBatchDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsRolesBatchPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Assign Users & Groups to Roles on Multiple Documents & Binders
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsRolesBatchPostCallback() on completion. 
		  //
		  // - POST /objects/documents/roles/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/roles/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsRolesBatchPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsRolesBatchPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRolesBatchPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsRolesBatchPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsRolesBatchPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsRolesBatchPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsTemplatesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Template Collection
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsTemplatesGetCallback() on completion. 
		  //
		  // - GET /objects/documents/templates
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/templates"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsTemplatesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsTemplatesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsTemplatesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsTemplatesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsTemplatesPost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Single Document Template
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsTemplatesPostCallback() on completion. 
		  //
		  // - POST /objects/documents/templates
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/templates"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsTemplatesPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsTemplatesPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsTemplatesPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsTemplatesPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsTemplatesPut(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Multiple Document Templates
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsTemplatesPutCallback() on completion. 
		  //
		  // - PUT /objects/documents/templates
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/templates"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsTemplatesPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsTemplatesPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsTemplatesPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsTemplatesPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsTemplatesTemplateNameDelete(, templateName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Basic Document Template
		  // - parameter templateName: (path) The document template name__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsTemplatesTemplateNameDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/templates/{template_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/templates/{template_name}"
		  
		  Dim localVarPathStringtemplateName As String = templateName
		  
		  localVarPath = localVarPath.ReplaceAllB("{template_name}", localVarPathStringtemplateName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsTemplatesTemplateNameDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsTemplatesTemplateNameDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesTemplateNameDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsTemplatesTemplateNameDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesTemplateNameDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsTemplatesTemplateNameDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsTemplatesTemplateNameFileGet(, templateName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Document Template File
		  // - parameter templateName: (path) The document template name__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsTemplatesTemplateNameFileGetCallback() on completion. 
		  //
		  // - GET /objects/documents/templates/{template_name}/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/templates/{template_name}/file"
		  
		  Dim localVarPathStringtemplateName As String = templateName
		  
		  localVarPath = localVarPath.ReplaceAllB("{template_name}", localVarPathStringtemplateName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsTemplatesTemplateNameFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsTemplatesTemplateNameFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesTemplateNameFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsTemplatesTemplateNameFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesTemplateNameFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsTemplatesTemplateNameFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsTemplatesTemplateNameGet(, templateName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Document Template Attributes
		  // - parameter templateName: (path) The document template name__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsTemplatesTemplateNameGetCallback() on completion. 
		  //
		  // - GET /objects/documents/templates/{template_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/templates/{template_name}"
		  
		  Dim localVarPathStringtemplateName As String = templateName
		  
		  localVarPath = localVarPath.ReplaceAllB("{template_name}", localVarPathStringtemplateName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsTemplatesTemplateNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsTemplatesTemplateNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesTemplateNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsTemplatesTemplateNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesTemplateNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsTemplatesTemplateNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsTemplatesTemplateNamePut(, templateName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Single Document Template
		  // - parameter templateName: (path) The document template name__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsTemplatesTemplateNamePutCallback() on completion. 
		  //
		  // - PUT /objects/documents/templates/{template_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/templates/{template_name}"
		  
		  Dim localVarPathStringtemplateName As String = templateName
		  
		  localVarPath = localVarPath.ReplaceAllB("{template_name}", localVarPathStringtemplateName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsTemplatesTemplateNamePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsTemplatesTemplateNamePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesTemplateNamePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsTemplatesTemplateNamePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTemplatesTemplateNamePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsTemplatesTemplateNamePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsTokensPost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Document Tokens
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsTokensPostCallback() on completion. 
		  //
		  // - POST /objects/documents/tokens
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/tokens"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsTokensPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsTokensPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTokensPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsTokensPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsTokensPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsTokensPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsVersionsBatchActionsFileextractPost(, Optional source As Xoson.O.OptionalBoolean, Optional renditions As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Export Document Versions
		  // - parameter source: (query) Optional: To exclude source files, include a query parameter source&#x3D;false. If omitted, defaults to true. (optional, default to False)
		  // - parameter renditions: (query) Optional: To include renditions, include a query parameter renditions&#x3D;true. If omitted, defaults to false. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsVersionsBatchActionsFileextractPostCallback() on completion. 
		  //
		  // - POST /objects/documents/versions/batch/actions/fileextract
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If source <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("source") + "=" + EncodeURLComponent(source.ToString)
		  
		  If renditions <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("renditions") + "=" + EncodeURLComponent(renditions.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/versions/batch/actions/fileextract"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsVersionsBatchActionsFileextractPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsVersionsBatchActionsFileextractPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsVersionsBatchActionsFileextractPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsVersionsBatchActionsFileextractPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsVersionsBatchActionsFileextractPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsVersionsBatchActionsFileextractPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsVersionsBatchDelete(, Optional idParam As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Multiple Document Versions
		  // - parameter idParam: (query) If you’re identifying documents in your input by their external ID (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsVersionsBatchDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/documents/versions/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If idParam <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("idParam") + "=" + EncodeURLComponent(idParam)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/versions/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsVersionsBatchDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsVersionsBatchDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsVersionsBatchDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsVersionsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsVersionsBatchDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsVersionsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDocumentsVersionsBatchPost(, Optional idParam As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIMigrationMode As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Multiple Document Versions
		  // - parameter idParam: (query) If you’re identifying documents in your input by their external ID (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIMigrationMode: (header) Must be set to true. Vault allows you to manually set the name and version number and to create documents in any lifecycle state using the &#x60;status__v&#x60; field, but does not allow you to change the document number. Vault also bypasses entry criteria, entry actions, and event actions. You must have the Document Migration permission to use this header. Learn more about &lt;a href&#x3D;&quot;https://platform.veevavault.help/en/gr/54028&quot;&gt;Document Migration Mode in Vault Help.&lt;/a&gt; (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDocumentsVersionsBatchPostCallback() on completion. 
		  //
		  // - POST /objects/documents/versions/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If idParam <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("idParam") + "=" + EncodeURLComponent(idParam)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIMigrationMode <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-MigrationMode"), EncodeURLComponent(xVaultAPIMigrationMode))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/documents/versions/batch"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDocumentsVersionsBatchPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDocumentsVersionsBatchPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsVersionsBatchPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDocumentsVersionsBatchPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDocumentsVersionsBatchPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDocumentsVersionsBatchPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDomainGet(, Optional includeApplication As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Domain Information
		  // - parameter includeApplication: (query) To include Vault application type information in the response, set include_application to true. If omitted, defaults to false and application information is not included. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDomainGetCallback() on completion. 
		  //
		  // - GET /objects/domain
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If includeApplication <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("include_application") + "=" + EncodeURLComponent(includeApplication.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/domain"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDomainGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDomainGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDomainGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDomainGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDomainGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDomainGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsDomainsGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Domains
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsDomainsGetCallback() on completion. 
		  //
		  // - GET /objects/domains
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/domains"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsDomainsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsDomainsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsDomainsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsDomainsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsDomainsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsDomainsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsEdlMatchedDocumentsBatchActionsAddPost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Add EDL Matched Documents
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsEdlMatchedDocumentsBatchActionsAddPostCallback() on completion. 
		  //
		  // - POST /objects/edl_matched_documents/batch/actions/add
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/edl_matched_documents/batch/actions/add"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsEdlMatchedDocumentsBatchActionsAddPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsEdlMatchedDocumentsBatchActionsAddPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsEdlMatchedDocumentsBatchActionsAddPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsEdlMatchedDocumentsBatchActionsAddPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsEdlMatchedDocumentsBatchActionsAddPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsEdlMatchedDocumentsBatchActionsAddPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsEdlMatchedDocumentsBatchActionsRemovePost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Remove EDL Matched Documents
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsEdlMatchedDocumentsBatchActionsRemovePostCallback() on completion. 
		  //
		  // - POST /objects/edl_matched_documents/batch/actions/remove
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/edl_matched_documents/batch/actions/remove"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsEdlMatchedDocumentsBatchActionsRemovePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsEdlMatchedDocumentsBatchActionsRemovePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsEdlMatchedDocumentsBatchActionsRemovePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsEdlMatchedDocumentsBatchActionsRemovePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsEdlMatchedDocumentsBatchActionsRemovePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsEdlMatchedDocumentsBatchActionsRemovePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsGroupsAutoGet(, Optional limit As Xoson.O.OptionalString, Optional offset As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Auto Managed Groups
		  // - parameter limit: (query) Paginate the results by specifying the maximum number of records per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 1000.  (optional, default to Sample)
		  // - parameter offset: (query) Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. If omitted, defaults to 0. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsGroupsAutoGetCallback() on completion. 
		  //
		  // - GET /objects/groups/auto
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If limit <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("limit") + "=" + EncodeURLComponent(limit)
		  
		  If offset <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("offset") + "=" + EncodeURLComponent(offset)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/groups/auto"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsGroupsAutoGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsGroupsAutoGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsAutoGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsGroupsAutoGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsAutoGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsGroupsAutoGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsGroupsGet(, Optional includeImplied As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Groups
		  // - parameter includeImplied: (query) When true, the response includes the implied_members__v field. These users are automatically added to the group when their security_profiles__v are added to the group. If omitted, the response includes only the members__v field. These users are individually added to a group by an Admin. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsGroupsGetCallback() on completion. 
		  //
		  // - GET /objects/groups
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If includeImplied <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("includeImplied") + "=" + EncodeURLComponent(includeImplied)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/groups"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsGroupsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsGroupsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsGroupsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsGroupsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsGroupsGroupIdDelete(, groupId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Group
		  // - parameter groupId: (path) The group id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsGroupsGroupIdDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/groups/{group_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/groups/{group_id}"
		  
		  Dim localVarPathStringgroupId As String = groupId
		  
		  localVarPath = localVarPath.ReplaceAllB("{group_id}", localVarPathStringgroupId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsGroupsGroupIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsGroupsGroupIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsGroupIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsGroupsGroupIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsGroupIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsGroupsGroupIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsGroupsGroupIdGet(, groupId As String, Optional includeImplied As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Group
		  // - parameter groupId: (path) The group id field value. 
		  // - parameter includeImplied: (query) When true, the response includes the implied_members__v field. These users are automatically added to the group when their security_profiles__v are added to the group. When not used, the response includes only the members__v field. These users are individually added to a group by Admin. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsGroupsGroupIdGetCallback() on completion. 
		  //
		  // - GET /objects/groups/{group_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If includeImplied <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("includeImplied") + "=" + EncodeURLComponent(includeImplied.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/groups/{group_id}"
		  
		  Dim localVarPathStringgroupId As String = groupId
		  
		  localVarPath = localVarPath.ReplaceAllB("{group_id}", localVarPathStringgroupId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsGroupsGroupIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsGroupsGroupIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsGroupIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsGroupsGroupIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsGroupIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsGroupsGroupIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsGroupsGroupIdPut(, groupId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Group
		  // - parameter groupId: (path) The group id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsGroupsGroupIdPutCallback() on completion. 
		  //
		  // - PUT /objects/groups/{group_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/groups/{group_id}"
		  
		  Dim localVarPathStringgroupId As String = groupId
		  
		  localVarPath = localVarPath.ReplaceAllB("{group_id}", localVarPathStringgroupId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsGroupsGroupIdPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsGroupsGroupIdPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsGroupIdPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsGroupsGroupIdPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsGroupIdPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsGroupsGroupIdPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsGroupsPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Group 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsGroupsPostCallback() on completion. 
		  //
		  // - POST /objects/groups
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/groups"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsGroupsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsGroupsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsGroupsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsGroupsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsGroupsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsLicensesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Application License Usage
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsLicensesGetCallback() on completion. 
		  //
		  // - GET /objects/licenses
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/licenses"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsLicensesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsLicensesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsLicensesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsLicensesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsLicensesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsLicensesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsActionsGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Multi-Record Workflows
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsActionsGetCallback() on completion. 
		  //
		  // - GET /objects/objectworkflows/actions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/actions"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsActionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsActionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsActionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsActionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsActionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsActionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsActionsWorkflowNameGet(, workflowName As String, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Multi-Record Workflow Details
		  // - parameter workflowName: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsActionsWorkflowNameGetCallback() on completion. 
		  //
		  // - GET /objects/objectworkflows/actions/{workflow_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/actions/{workflow_name}"
		  
		  Dim localVarPathStringworkflowName As String = workflowName
		  
		  localVarPath = localVarPath.ReplaceAllB("{workflow_name}", localVarPathStringworkflowName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsActionsWorkflowNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsActionsWorkflowNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsActionsWorkflowNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsActionsWorkflowNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsActionsWorkflowNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsActionsWorkflowNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsActionsWorkflowNamePost(, workflowName As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Initiate Multi-Record Workflow
		  // - parameter workflowName: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsActionsWorkflowNamePostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/actions/{workflow_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/actions/{workflow_name}"
		  
		  Dim localVarPathStringworkflowName As String = workflowName
		  
		  localVarPath = localVarPath.ReplaceAllB("{workflow_name}", localVarPathStringworkflowName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsActionsWorkflowNamePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsActionsWorkflowNamePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsActionsWorkflowNamePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsActionsWorkflowNamePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsActionsWorkflowNamePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsActionsWorkflowNamePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsGet(, Optional objectV As Xoson.O.OptionalString, Optional recordIdV As Xoson.O.OptionalString, Optional participant As Xoson.O.OptionalString, Optional statusV As Xoson.O.OptionalString, Optional offset As Xoson.O.OptionalString, Optional pageSize As Xoson.O.OptionalString, Optional loc As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Workflows
		  // - parameter objectV: (query) To retrieve all workflows configured on an object, include the Vault object name__v and object record id field values as ?object__v&#x3D;{name__v}&amp;record_id__v&#x3D;{id}. These two parameters are required when the participant parameter is not used.  (optional, default to Sample)
		  // - parameter recordIdV: (query) To retrieve all workflows configured on an object, include the Vault object name__v and object record id field values as ?object__v&#x3D;{name__v}&amp;record_id__v&#x3D;{id}. These two parameters are required when the participant parameter is not used.  (optional, default to Sample)
		  // - parameter participant: (query) To retrieve all workflows available to a particular user, include the user id field value as ?participant&#x3D;{id}. To retrieve your own workflows, set this value to ?participant&#x3D;me. This parameter is required when the object__v and record_id__v parameters are not used.  (optional, default to Sample)
		  // - parameter statusV: (query) To retrieve all workflows with specific statuses, include one or more status name__v field values. For example: status__v&#x3D;active__v, status__v&#x3D;active__v,completed__v. Workflows with &#x60;status__v&#x3D;active__v&#x60; are in progress for the indicated object record. Valid statuses include: active__v completed__v cancelled__v (optional, default to Sample)
		  // - parameter offset: (query) This parameter is used to paginate the results. It specifies the amount of offset from the first record returned. Vault returns 200 records per page by default. If you are viewing the first 200 results (page 1) and want to see the next page, set this to ?offset&#x3D;201.  (optional, default to Sample)
		  // - parameter pageSize: (query) This parameter is used to paginate the results. It specifies the size number of records to display per page. Vault returns 200 records per page by default. You can set this value lower or as high as 1000 records per page. For example: ?page_size&#x3D;1000.  (optional, default to Sample)
		  // - parameter loc: (query) When localized (translated) strings are available, retrieve them by including ?loc&#x3D;true.  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsGetCallback() on completion. 
		  //
		  // - GET /objects/objectworkflows
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If objectV <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("object__v") + "=" + EncodeURLComponent(objectV)
		  
		  If recordIdV <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("record_id__v") + "=" + EncodeURLComponent(recordIdV)
		  
		  If participant <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("participant") + "=" + EncodeURLComponent(participant)
		  
		  If statusV <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("status__v") + "=" + EncodeURLComponent(statusV)
		  
		  If offset <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("offset") + "=" + EncodeURLComponent(offset)
		  
		  If pageSize <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("page_size") + "=" + EncodeURLComponent(pageSize)
		  
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksGet(, Optional objectV As Xoson.O.OptionalString, Optional recordIdV As Xoson.O.OptionalString, Optional assigneeV As Xoson.O.OptionalString, Optional statusV As Xoson.O.OptionalString, Optional offset As Xoson.O.OptionalString, Optional pageSize As Xoson.O.OptionalString, Optional loc As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Workflow Tasks
		  // - parameter objectV: (query) To retrieve all workflow tasks configured on an object, include the Vault object name__v and object record id field values as ?object__v&#x3D;{name__v}&amp;record_id__v&#x3D;{id}. These two parameters are required when the assignee__v parameter is not used. (optional, default to Sample)
		  // - parameter recordIdV: (query) To retrieve all workflow tasks configured on an object, include the Vault object name__v and object record id field values as ?object__v&#x3D;{name__v}&amp;record_id__v&#x3D;{id}. These two parameters are required when the assignee__v parameter is not used. (optional, default to Sample)
		  // - parameter assigneeV: (query) To retrieve all workflow tasks available to a particular user, include the user id field value as ?assignee__v&#x3D;{id}. To retrieve your own workflow tasks, set this value to ?assignee__v&#x3D;me. This parameter is required when the object__v and record_id__v parameters are not used.  (optional, default to Sample)
		  // - parameter statusV: (query) To retrieve all workflow tasks with specific statuses, include one or more status name__v field values. For example: ?status__v&#x3D;available__v or ?status__v&#x3D;available__v,completed__v.  (optional, default to Sample)
		  // - parameter offset: (query) This parameter is used to paginate the results. It specifies the amount of offset from the first record returned. Vault returns 200 records per page by default. If you are viewing the first 200 results (page 1) and want to see the next page, set this to ?offset&#x3D;201.  (optional, default to Sample)
		  // - parameter pageSize: (query) This parameter is used to paginate the results. It specifies the size number of records to display per page. Vault returns 200 records per page by default. You can set this value lower or as high as 1000 records per page. For example: ?page_size&#x3D;1000.  (optional, default to Sample)
		  // - parameter loc: (query) When localized (translated) strings are available, retrieve them by including ?loc&#x3D;true.  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksGetCallback() on completion. 
		  //
		  // - GET /objects/objectworkflows/tasks
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If objectV <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("object__v") + "=" + EncodeURLComponent(objectV)
		  
		  If recordIdV <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("record_id__v") + "=" + EncodeURLComponent(recordIdV)
		  
		  If assigneeV <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("assignee__v") + "=" + EncodeURLComponent(assigneeV)
		  
		  If statusV <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("status__v") + "=" + EncodeURLComponent(statusV)
		  
		  If offset <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("offset") + "=" + EncodeURLComponent(offset)
		  
		  If pageSize <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("page_size") + "=" + EncodeURLComponent(pageSize)
		  
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsAcceptPost(, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Accept Single Record Workflow Task
		  // - parameter taskId: (path) The task id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsAcceptPostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/tasks/{task_id}/actions/accept
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions/accept"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsAcceptPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsAcceptPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsAcceptPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsAcceptPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsAcceptPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsAcceptPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsCancelPost(, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Cancel Workflow Task
		  // - parameter taskId: (path) The task id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsCancelPostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/tasks/{task_id}/actions/cancel
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions/cancel"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsCancelPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsCancelPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsCancelPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsCancelPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsCancelPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsCancelPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsCompletePost(, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Complete Single Record Workflow Task
		  // - parameter taskId: (path) The task id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsCompletePostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/tasks/{task_id}/actions/complete
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions/complete"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsCompletePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsCompletePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsCompletePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsCompletePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsCompletePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsCompletePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsGet(, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Workflow Task Actions
		  // - parameter taskId: (path) The task id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsGetCallback() on completion. 
		  //
		  // - GET /objects/objectworkflows/tasks/{task_id}/actions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwacceptPost(, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Accept Multi-item Workflow Task
		  // - parameter taskId: (path) The task id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwacceptPostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/tasks/{task_id}/actions/mdwaccept
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions/mdwaccept"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsMdwacceptPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsMdwacceptPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwacceptPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwacceptPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwacceptPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwacceptPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwcompletePost(, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Complete Multi-item Workflow Task
		  // - parameter taskId: (path) The task id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwcompletePostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/tasks/{task_id}/actions/mdwcomplete
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions/mdwcomplete"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsMdwcompletePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsMdwcompletePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwcompletePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwcompletePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwcompletePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwcompletePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPost(, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Manage Multi-Item Workflow Content
		  // - parameter taskId: (path) The task id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/tasks/{task_id}/actions/mdwmanagecontent
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions/mdwmanagecontent"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwreassignPost(, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Reassign Multi-item Workflow Task
		  // - parameter taskId: (path) The id of the task to reassign. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwreassignPostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/tasks/{task_id}/actions/mdwreassign
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions/mdwreassign"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsMdwreassignPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsMdwreassignPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwreassignPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwreassignPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsMdwreassignPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsMdwreassignPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsReassignPost(, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Reassign Single Record Workflow Task
		  // - parameter taskId: (path) The id of the task to reassign. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsReassignPostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/tasks/{task_id}/actions/reassign
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions/reassign"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsReassignPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsReassignPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsReassignPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsReassignPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsReassignPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsReassignPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsTaskActionGet(, taskId As String, taskAction As String, Optional loc As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Workflow Task Action Details
		  // - parameter taskId: (path) The task id field value. 
		  // - parameter taskAction: (path) The name of the task action retrieved from Retrieve Workflow Task Actions. 
		  // - parameter loc: (query) When localized (translated) strings are available, retrieve them by including loc&#x3D;true.  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsTaskActionGetCallback() on completion. 
		  //
		  // - GET /objects/objectworkflows/tasks/{task_id}/actions/{task_action}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions/{task_action}"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  Dim localVarPathStringtaskAction As String = taskAction
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_action}", localVarPathStringtaskAction)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsTaskActionGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsTaskActionGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsTaskActionGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsTaskActionGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsTaskActionGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsTaskActionGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsUndoacceptPost(, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Undo Workflow Task Acceptance
		  // - parameter taskId: (path) The task id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsUndoacceptPostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/tasks/{task_id}/actions/undoaccept
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions/undoaccept"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsUndoacceptPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsUndoacceptPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsUndoacceptPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsUndoacceptPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsUndoacceptPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsUndoacceptPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdActionsUpdateduedatePost(, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Workflow Task Due Date
		  // - parameter taskId: (path) The id of the task. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsUpdateduedatePostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/tasks/{task_id}/actions/updateduedate
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}/actions/updateduedate"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsUpdateduedatePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdActionsUpdateduedatePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsUpdateduedatePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsUpdateduedatePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdActionsUpdateduedatePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdActionsUpdateduedatePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsTasksTaskIdGet(, taskId As String, Optional loc As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Workflow Task Details
		  // - parameter taskId: (path) The task id field value. 
		  // - parameter loc: (query) When localized (translated) strings are available, retrieve them by including loc&#x3D;true. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsTasksTaskIdGetCallback() on completion. 
		  //
		  // - GET /objects/objectworkflows/tasks/{task_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/tasks/{task_id}"
		  
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsTasksTaskIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsTasksTaskIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsTasksTaskIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsTasksTaskIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsWorkflowIdActionsGet(, workflowId As String, Optional loc As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Workflow Actions
		  // - parameter workflowId: (path) The workflow id field value. 
		  // - parameter loc: (query) When localized (translated) strings are available, retrieve them by including loc&#x3D;true.  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsWorkflowIdActionsGetCallback() on completion. 
		  //
		  // - GET /objects/objectworkflows/{workflow_id}/actions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/{workflow_id}/actions"
		  
		  Dim localVarPathStringworkflowId As String = workflowId
		  
		  localVarPath = localVarPath.ReplaceAllB("{workflow_id}", localVarPathStringworkflowId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsWorkflowIdActionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsWorkflowIdActionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsWorkflowIdActionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsWorkflowIdActionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsWorkflowIdActionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsWorkflowIdActionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionGet(, workflowId As String, workflowAction As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Workflow Action Details
		  // - parameter workflowId: (path) The workflow id field value. 
		  // - parameter workflowAction: (path) The workflow action name retrieved from Retrieve Workflow Actions. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionGetCallback() on completion. 
		  //
		  // - GET /objects/objectworkflows/{workflow_id}/actions/{workflow_action}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/{workflow_id}/actions/{workflow_action}"
		  
		  Dim localVarPathStringworkflowId As String = workflowId
		  
		  localVarPath = localVarPath.ReplaceAllB("{workflow_id}", localVarPathStringworkflowId)
		  Dim localVarPathStringworkflowAction As String = workflowAction
		  
		  localVarPath = localVarPath.ReplaceAllB("{workflow_action}", localVarPathStringworkflowAction)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionPost(, workflowId As String, workflowAction As String, Optional documentsSys As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Initiate Workflow Action
		  // - parameter workflowId: (path) The workflow id field value. 
		  // - parameter workflowAction: (path) The workflow action name retrieved from Retrieve Workflow Actions. 
		  // - parameter documentsSys: (query) Include the id or ids as a comma-separated list of the document(s) to be removed from a document workflow when using the removecontent action. If your workflow_action is remove_content, include the id of the document to remove the workflow. To remove multiple documents, use a comma-separated list of ids. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionPostCallback() on completion. 
		  //
		  // - POST /objects/objectworkflows/{workflow_id}/actions/{workflow_action}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If documentsSys <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("documents__sys") + "=" + EncodeURLComponent(documentsSys)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/{workflow_id}/actions/{workflow_action}"
		  
		  Dim localVarPathStringworkflowId As String = workflowId
		  
		  localVarPath = localVarPath.ReplaceAllB("{workflow_id}", localVarPathStringworkflowId)
		  Dim localVarPathStringworkflowAction As String = workflowAction
		  
		  localVarPath = localVarPath.ReplaceAllB("{workflow_action}", localVarPathStringworkflowAction)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsWorkflowIdActionsWorkflowActionPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsObjectworkflowsWorkflowIdGet(, workflowId As String, Optional loc As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Workflow Details
		  // - parameter workflowId: (path) The workflow id field value. 
		  // - parameter loc: (query) When localized (translated) strings are available, retrieve them by including loc&#x3D;true. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsObjectworkflowsWorkflowIdGetCallback() on completion. 
		  //
		  // - GET /objects/objectworkflows/{workflow_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/objectworkflows/{workflow_id}"
		  
		  Dim localVarPathStringworkflowId As String = workflowId
		  
		  localVarPath = localVarPath.ReplaceAllB("{workflow_id}", localVarPathStringworkflowId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsObjectworkflowsWorkflowIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsObjectworkflowsWorkflowIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsWorkflowIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsObjectworkflowsWorkflowIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsObjectworkflowsWorkflowIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsObjectworkflowsWorkflowIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsPicklistsGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Picklists
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsPicklistsGetCallback() on completion. 
		  //
		  // - GET /objects/picklists
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/picklists"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsPicklistsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsPicklistsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsPicklistsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsPicklistsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsPicklistsPicklistNameGet(, picklistName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Picklist Values
		  // - parameter picklistName: (path) The picklist name field value (license_type__v, product_family__c, region__c, etc.) 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsPicklistsPicklistNameGetCallback() on completion. 
		  //
		  // - GET /objects/picklists/{picklist_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/picklists/{picklist_name}"
		  
		  Dim localVarPathStringpicklistName As String = picklistName
		  
		  localVarPath = localVarPath.ReplaceAllB("{picklist_name}", localVarPathStringpicklistName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsPicklistsPicklistNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsPicklistsPicklistNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsPicklistNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsPicklistsPicklistNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsPicklistNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsPicklistsPicklistNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsPicklistsPicklistNamePicklistValueNameDelete(, picklistName As String, picklistValueName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Inactivate Picklist Value
		  // - parameter picklistName: (path) The picklist name field value (license_type__v, product_family__c, region__c, etc.) 
		  // - parameter picklistValueName: (path) The picklist value name field value (north_america__c, south_america__c, etc.) 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsPicklistsPicklistNamePicklistValueNameDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/picklists/{picklist_name}/{picklist_value_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/picklists/{picklist_name}/{picklist_value_name}"
		  
		  Dim localVarPathStringpicklistName As String = picklistName
		  
		  localVarPath = localVarPath.ReplaceAllB("{picklist_name}", localVarPathStringpicklistName)
		  Dim localVarPathStringpicklistValueName As String = picklistValueName
		  
		  localVarPath = localVarPath.ReplaceAllB("{picklist_value_name}", localVarPathStringpicklistValueName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsPicklistsPicklistNamePicklistValueNameDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsPicklistsPicklistNamePicklistValueNameDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsPicklistNamePicklistValueNameDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsPicklistsPicklistNamePicklistValueNameDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsPicklistNamePicklistValueNameDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsPicklistsPicklistNamePicklistValueNameDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsPicklistsPicklistNamePicklistValueNamePut(, picklistName As String, picklistValueName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Picklist Value
		  // - parameter picklistName: (path) The picklist name field value (license_type__v, product_family__c, region__c, etc.) 
		  // - parameter picklistValueName: (path) The picklist value name field value (north_america__c, south_america__c, etc.) 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsPicklistsPicklistNamePicklistValueNamePutCallback() on completion. 
		  //
		  // - PUT /objects/picklists/{picklist_name}/{picklist_value_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/picklists/{picklist_name}/{picklist_value_name}"
		  
		  Dim localVarPathStringpicklistName As String = picklistName
		  
		  localVarPath = localVarPath.ReplaceAllB("{picklist_name}", localVarPathStringpicklistName)
		  Dim localVarPathStringpicklistValueName As String = picklistValueName
		  
		  localVarPath = localVarPath.ReplaceAllB("{picklist_value_name}", localVarPathStringpicklistValueName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsPicklistsPicklistNamePicklistValueNamePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsPicklistsPicklistNamePicklistValueNamePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsPicklistNamePicklistValueNamePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsPicklistsPicklistNamePicklistValueNamePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsPicklistNamePicklistValueNamePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsPicklistsPicklistNamePicklistValueNamePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsPicklistsPicklistNamePost(, picklistName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Picklist Values
		  // - parameter picklistName: (path) The picklist name field value (license_type__v, product_family__c, region__c, etc.) 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsPicklistsPicklistNamePostCallback() on completion. 
		  //
		  // - POST /objects/picklists/{picklist_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/picklists/{picklist_name}"
		  
		  Dim localVarPathStringpicklistName As String = picklistName
		  
		  localVarPath = localVarPath.ReplaceAllB("{picklist_name}", localVarPathStringpicklistName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsPicklistsPicklistNamePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsPicklistsPicklistNamePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsPicklistNamePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsPicklistsPicklistNamePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsPicklistNamePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsPicklistsPicklistNamePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsPicklistsPicklistNamePut(, picklistName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Picklist Value Label
		  // - parameter picklistName: (path) The picklist name field value (license_type__v, product_family__c, region__c, etc.) 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsPicklistsPicklistNamePutCallback() on completion. 
		  //
		  // - PUT /objects/picklists/{picklist_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/picklists/{picklist_name}"
		  
		  Dim localVarPathStringpicklistName As String = picklistName
		  
		  localVarPath = localVarPath.ReplaceAllB("{picklist_name}", localVarPathStringpicklistName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsPicklistsPicklistNamePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsPicklistsPicklistNamePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsPicklistNamePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsPicklistsPicklistNamePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsPicklistsPicklistNamePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsPicklistsPicklistNamePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxActionsBuildproductionPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Build Production Vault
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxActionsBuildproductionPostCallback() on completion. 
		  //
		  // - POST /objects/sandbox/actions/buildproduction
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/actions/buildproduction"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxActionsBuildproductionPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxActionsBuildproductionPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxActionsBuildproductionPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxActionsBuildproductionPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxActionsBuildproductionPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxActionsBuildproductionPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxActionsPromoteproductionPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Promote to Production
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxActionsPromoteproductionPostCallback() on completion. 
		  //
		  // - POST /objects/sandbox/actions/promoteproduction
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/actions/promoteproduction"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxActionsPromoteproductionPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxActionsPromoteproductionPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxActionsPromoteproductionPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxActionsPromoteproductionPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxActionsPromoteproductionPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxActionsPromoteproductionPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxActionsRecheckusagePost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Recheck Sandbox Usage Limit
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxActionsRecheckusagePostCallback() on completion. 
		  //
		  // - POST /objects/sandbox/actions/recheckusage
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/actions/recheckusage"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxActionsRecheckusagePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxActionsRecheckusagePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxActionsRecheckusagePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxActionsRecheckusagePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxActionsRecheckusagePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxActionsRecheckusagePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxBatchChangesizePost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Change Sandbox Size
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxBatchChangesizePostCallback() on completion. 
		  //
		  // - POST /objects/sandbox/batch/changesize
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/batch/changesize"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxBatchChangesizePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxBatchChangesizePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxBatchChangesizePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxBatchChangesizePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxBatchChangesizePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxBatchChangesizePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxEntitlementsSetPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Set Sandbox Entitlements
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxEntitlementsSetPostCallback() on completion. 
		  //
		  // - POST /objects/sandbox/entitlements/set
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/entitlements/set"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxEntitlementsSetPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxEntitlementsSetPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxEntitlementsSetPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxEntitlementsSetPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxEntitlementsSetPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxEntitlementsSetPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Sandboxes
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxGetCallback() on completion. 
		  //
		  // - GET /objects/sandbox
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxNameDelete(, name As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Sandbox
		  // - parameter name: (path) The name of the sandbox vault to delete. This is the name which appears on the My Vaults page. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxNameDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/sandbox/{name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/{name}"
		  
		  Dim localVarPathStringname As String = name
		  
		  localVarPath = localVarPath.ReplaceAllB("{name}", localVarPathStringname)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxNameDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxNameDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxNameDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxNameDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxNameDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxNameDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create or Refresh Sandbox
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxPostCallback() on completion. 
		  //
		  // - POST /objects/sandbox
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxSnapshotApiNameActionsUpdatePost(, apiName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Sandbox Snapshot
		  // - parameter apiName: (path) The Vault ID of the sandbox. Obtain this from the Retrieve Sandbox Snapshots request. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxSnapshotApiNameActionsUpdatePostCallback() on completion. 
		  //
		  // - POST /objects/sandbox/snapshot/{api_name}/actions/update
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/snapshot/{api_name}/actions/update"
		  
		  Dim localVarPathStringapiName As String = apiName
		  
		  localVarPath = localVarPath.ReplaceAllB("{api_name}", localVarPathStringapiName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxSnapshotApiNameActionsUpdatePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxSnapshotApiNameActionsUpdatePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxSnapshotApiNameActionsUpdatePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxSnapshotApiNameActionsUpdatePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxSnapshotApiNameActionsUpdatePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxSnapshotApiNameActionsUpdatePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxSnapshotApiNameActionsUpgradePost(, apiName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Upgrade Sandbox Snapshot
		  // - parameter apiName: (path) The Vault ID of the sandbox. Obtain this from the Retrieve Sandbox Snapshots request. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxSnapshotApiNameActionsUpgradePostCallback() on completion. 
		  //
		  // - POST /objects/sandbox/snapshot/{api_name}/actions/upgrade
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/snapshot/{api_name}/actions/upgrade"
		  
		  Dim localVarPathStringapiName As String = apiName
		  
		  localVarPath = localVarPath.ReplaceAllB("{api_name}", localVarPathStringapiName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxSnapshotApiNameActionsUpgradePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxSnapshotApiNameActionsUpgradePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxSnapshotApiNameActionsUpgradePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxSnapshotApiNameActionsUpgradePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxSnapshotApiNameActionsUpgradePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxSnapshotApiNameActionsUpgradePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxSnapshotApiNameDelete(, apiName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Sandbox Snapshot
		  // - parameter apiName: (path) The Vault ID of the sandbox. Obtain this from the Retrieve Sandbox Snapshots request. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxSnapshotApiNameDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/sandbox/snapshot/{api_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/snapshot/{api_name}"
		  
		  Dim localVarPathStringapiName As String = apiName
		  
		  localVarPath = localVarPath.ReplaceAllB("{api_name}", localVarPathStringapiName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxSnapshotApiNameDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxSnapshotApiNameDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxSnapshotApiNameDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxSnapshotApiNameDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxSnapshotApiNameDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxSnapshotApiNameDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxSnapshotGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Sandbox Snapshots
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxSnapshotGetCallback() on completion. 
		  //
		  // - GET /objects/sandbox/snapshot
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/snapshot"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxSnapshotGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxSnapshotGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxSnapshotGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxSnapshotGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxSnapshotGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxSnapshotGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxSnapshotPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Sandbox Snapshot
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxSnapshotPostCallback() on completion. 
		  //
		  // - POST /objects/sandbox/snapshot
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/snapshot"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxSnapshotPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxSnapshotPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxSnapshotPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxSnapshotPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxSnapshotPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxSnapshotPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxVaultIdActionsRefreshPost(, vaultId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Refresh Sandbox from Snapshot
		  // - parameter vaultId: (path) The Vault ID of the sandbox to be refreshed. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxVaultIdActionsRefreshPostCallback() on completion. 
		  //
		  // - POST /objects/sandbox/{vault_id}/actions/refresh
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/{vault_id}/actions/refresh"
		  
		  Dim localVarPathStringvaultId As String = vaultId
		  
		  localVarPath = localVarPath.ReplaceAllB("{vault_id}", localVarPathStringvaultId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxVaultIdActionsRefreshPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxVaultIdActionsRefreshPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxVaultIdActionsRefreshPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxVaultIdActionsRefreshPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxVaultIdActionsRefreshPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxVaultIdActionsRefreshPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSandboxVaultIdGet(, vaultId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Sandbox Details by ID
		  // - parameter vaultId: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSandboxVaultIdGetCallback() on completion. 
		  //
		  // - GET /objects/sandbox/{vault_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/sandbox/{vault_id}"
		  
		  Dim localVarPathStringvaultId As String = vaultId
		  
		  localVarPath = localVarPath.ReplaceAllB("{vault_id}", localVarPathStringvaultId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSandboxVaultIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSandboxVaultIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxVaultIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSandboxVaultIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSandboxVaultIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSandboxVaultIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSecuritypoliciesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Security Policies
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSecuritypoliciesGetCallback() on completion. 
		  //
		  // - GET /objects/securitypolicies
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/securitypolicies"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSecuritypoliciesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSecuritypoliciesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSecuritypoliciesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSecuritypoliciesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSecuritypoliciesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSecuritypoliciesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsSecuritypoliciesSecurityPolicyNameGet(, securityPolicyName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Security Policy
		  // - parameter securityPolicyName: (path) Security policy name__v field value (retrieved from previous request). This is typically a numeric value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsSecuritypoliciesSecurityPolicyNameGetCallback() on completion. 
		  //
		  // - GET /objects/securitypolicies/{security_policy_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/securitypolicies/{security_policy_name}"
		  
		  Dim localVarPathStringsecurityPolicyName As String = securityPolicyName
		  
		  localVarPath = localVarPath.ReplaceAllB("{security_policy_name}", localVarPathStringsecurityPolicyName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsSecuritypoliciesSecurityPolicyNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsSecuritypoliciesSecurityPolicyNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsSecuritypoliciesSecurityPolicyNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsSecuritypoliciesSecurityPolicyNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsSecuritypoliciesSecurityPolicyNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsSecuritypoliciesSecurityPolicyNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersGet(, Optional vaults As Xoson.O.OptionalString, Optional excludeVaultMembership As Xoson.O.OptionalString, Optional excludeAppLicensing As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Users
		  // - parameter vaults: (query) Retrieve all users assigned to all Vaults in your domain. (optional, default to Sample)
		  // - parameter excludeVaultMembership: (query) Optional: Set to false to include vault_membership fields. If true or omitted, vault_membership fields are not included in the response. (optional, default to Sample)
		  // - parameter excludeAppLicensing: (query) Optional: Set to false to include app_licensing fields. If true or omitted, app_licensing fields are not included in the response. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersGetCallback() on completion. 
		  //
		  // - GET /objects/users/
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If vaults <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("vaults") + "=" + EncodeURLComponent(vaults)
		  
		  If excludeVaultMembership <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("exclude_vault_membership") + "=" + EncodeURLComponent(excludeVaultMembership)
		  
		  If excludeAppLicensing <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("exclude_app_licensing") + "=" + EncodeURLComponent(excludeAppLicensing)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users/"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersIdGet(, id As String, Optional excludeVaultMembership As Xoson.O.OptionalString, Optional excludeAppLicensing As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve User
		  // - parameter id: (path) The user id field value. Use the value me to get information for the currently authenticated user. 
		  // - parameter excludeVaultMembership: (query) Optional: Set to true to omit vault_membership fields. If you don’t need these fields, this may increase performance. If omitted, vault_membership fields are included in the response. (optional, default to Sample)
		  // - parameter excludeAppLicensing: (query) Optional: Set to true to omit app_licensing fields. If you don’t need these fields, this may increase performance. If omitted, app_licensing fields are included in the response. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersIdGetCallback() on completion. 
		  //
		  // - GET /objects/users/{id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If excludeVaultMembership <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("exclude_vault_membership") + "=" + EncodeURLComponent(excludeVaultMembership)
		  
		  If excludeAppLicensing <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("exclude_app_licensing") + "=" + EncodeURLComponent(excludeAppLicensing)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users/{id}"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersIdPermissionsGet(, id As String, Optional filter As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve User Permissions
		  // - parameter id: (path) The ID of the user. Use the value me to retrieve information for the currently authenticated user. 
		  // - parameter filter: (query) Filter the results to show only one specific name__v, which is in the format object.{object name}.{object or field}_actions. Wildcards are not supported. See example below. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersIdPermissionsGetCallback() on completion. 
		  //
		  // - GET /objects/users/{id}/permissions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If filter <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("filter") + "=" + EncodeURLComponent(filter)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users/{id}/permissions"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersIdPermissionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersIdPermissionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersIdPermissionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersIdPermissionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersIdPermissionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersIdPermissionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersIdPut(, id As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Single User
		  // - parameter id: (path) The user id field value. Use the value me to get information for the currently authenticated user. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersIdPutCallback() on completion. 
		  //
		  // - PUT /objects/users/{id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users/{id}"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersIdPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersIdPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersIdPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersIdPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersIdPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersIdPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersMeGet(, Optional excludeVaultMembership As Xoson.O.OptionalString, Optional excludeAppLicensing As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Validate Session User
		  // - parameter excludeVaultMembership: (query) Optional: Set to true to omit vault_membership fields. If you don’t need these fields, this may increase performance. If omitted, vault_membership fields are included in the response. (optional, default to Sample)
		  // - parameter excludeAppLicensing: (query) Optional: Set to true to omit app_licensing fields. If you don’t need these fields, this may increase performance. If omitted, app_licensing fields are included in the response. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersMeGetCallback() on completion. 
		  //
		  // - GET /objects/users/me
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If excludeVaultMembership <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("exclude_vault_membership") + "=" + EncodeURLComponent(excludeVaultMembership)
		  
		  If excludeAppLicensing <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("exclude_app_licensing") + "=" + EncodeURLComponent(excludeAppLicensing)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users/me"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersMeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersMeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersMeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersMeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersMeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersMeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersMePasswordPost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Change My Password
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersMePasswordPostCallback() on completion. 
		  //
		  // - POST /objects/users/me/password
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users/me/password"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersMePasswordPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersMePasswordPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersMePasswordPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersMePasswordPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersMePasswordPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersMePasswordPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersMePermissionsGet(, Optional filter As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve My User Permissions
		  // - parameter filter: (query) Filter the results to show only one specific name__v, which is in the format object.{object name}.{object or field}_actions. Wildcards are not supported. See example below. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersMePermissionsGetCallback() on completion. 
		  //
		  // - GET /objects/users/me/permissions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If filter <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("filter") + "=" + EncodeURLComponent(filter)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users/me/permissions"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersMePermissionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersMePermissionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersMePermissionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersMePermissionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersMePermissionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersMePermissionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersMePut(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update My User
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersMePutCallback() on completion. 
		  //
		  // - PUT /objects/users/me
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users/me"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersMePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersMePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersMePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersMePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersMePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersMePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Single User
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersPostCallback() on completion. 
		  //
		  // - POST /objects/users
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersPut(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Multiple Users
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersPutCallback() on completion. 
		  //
		  // - PUT /objects/users
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersUserIdDelete(, userId As String, Optional domain As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Disable User
		  // - parameter userId: (path) The user id field value.  
		  // - parameter domain: (query) When true, this disables the user account in all vaults in the domain. (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersUserIdDeleteCallback() on completion. 
		  //
		  // - DELETE /objects/users/{user_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If domain <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("domain") + "=" + EncodeURLComponent(domain.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users/{user_id}"
		  
		  Dim localVarPathStringuserId As String = userId
		  
		  localVarPath = localVarPath.ReplaceAllB("{user_id}", localVarPathStringuserId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersUserIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersUserIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersUserIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersUserIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersUserIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersUserIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsUsersUserIdVaultMembershipVaultIdPut(, userId As String, vaultId As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Vault Membership
		  // - parameter userId: (path) The user id field value. 
		  // - parameter vaultId: (path) The system-managed id field value assigned to each vault in the domain. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsUsersUserIdVaultMembershipVaultIdPutCallback() on completion. 
		  //
		  // - PUT /objects/users/{user_id}/vault_membership/{vault_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/users/{user_id}/vault_membership/{vault_id}"
		  
		  Dim localVarPathStringuserId As String = userId
		  
		  localVarPath = localVarPath.ReplaceAllB("{user_id}", localVarPathStringuserId)
		  Dim localVarPathStringvaultId As String = vaultId
		  
		  localVarPath = localVarPath.ReplaceAllB("{vault_id}", localVarPathStringvaultId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsUsersUserIdVaultMembershipVaultIdPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsUsersUserIdVaultMembershipVaultIdPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsUsersUserIdVaultMembershipVaultIdPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsUsersUserIdVaultMembershipVaultIdPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsUsersUserIdVaultMembershipVaultIdPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsUsersUserIdVaultMembershipVaultIdPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsVaultActionsComparePost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Vault Compare
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsVaultActionsComparePostCallback() on completion. 
		  //
		  // - POST /objects/vault/actions/compare
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/vault/actions/compare"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsVaultActionsComparePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsVaultActionsComparePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsVaultActionsComparePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsVaultActionsComparePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsVaultActionsComparePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsVaultActionsComparePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ObjectsVaultActionsConfigreportPost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Vault Configuration Report
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ObjectsVaultActionsConfigreportPostCallback() on completion. 
		  //
		  // - POST /objects/vault/actions/configreport
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/objects/vault/actions/configreport"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ObjectsVaultActionsConfigreportPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ObjectsVaultActionsConfigreportPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ObjectsVaultActionsConfigreportPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ObjectsVaultActionsConfigreportPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ObjectsVaultActionsConfigreportPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ObjectsVaultActionsConfigreportPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub QueryComponentsPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Component Definition Query
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.QueryComponentsPostCallback() on completion. 
		  //
		  // - POST /query/components
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/query/components"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.QueryComponentsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.QueryComponentsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub QueryComponentsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.QueryComponentsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub QueryComponentsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.QueryComponentsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub QueryNextPagePost(, nextPage As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIDescribeQuery As Xoson.O.OptionalBoolean, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Next Page URL
		  // - parameter nextPage: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIDescribeQuery: (header)  (optional, default to False)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.QueryNextPagePostCallback() on completion. 
		  //
		  // - POST /query/{next_page}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIDescribeQuery <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-DescribeQuery"), EncodeURLComponent(xVaultAPIDescribeQuery.ToString))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/query/{next_page}"
		  
		  Dim localVarPathStringnextPage As String = nextPage
		  
		  localVarPath = localVarPath.ReplaceAllB("{next_page}", localVarPathStringnextPage)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.QueryNextPagePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.QueryNextPagePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub QueryNextPagePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.QueryNextPagePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub QueryNextPagePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.QueryNextPagePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub QueryPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIDescribeQuery As Xoson.O.OptionalBoolean, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Submitting a Query
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIDescribeQuery: (header)  (optional, default to False)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.QueryPostCallback() on completion. 
		  //
		  // - POST /query
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIDescribeQuery <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-DescribeQuery"), EncodeURLComponent(xVaultAPIDescribeQuery.ToString))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/query"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.QueryPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.QueryPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub QueryPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.QueryPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub QueryPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.QueryPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub QueryPreviousPagePost(, previousPage As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIDescribeQuery As Xoson.O.OptionalBoolean, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Previous Page URL
		  // - parameter previousPage: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIDescribeQuery: (header)  (optional, default to False)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.QueryPreviousPagePostCallback() on completion. 
		  //
		  // - POST /query/{previous_page}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIDescribeQuery <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-DescribeQuery"), EncodeURLComponent(xVaultAPIDescribeQuery.ToString))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/query/{previous_page}"
		  
		  Dim localVarPathStringpreviousPage As String = previousPage
		  
		  localVarPath = localVarPath.ReplaceAllB("{previous_page}", localVarPathStringpreviousPage)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.QueryPreviousPagePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.QueryPreviousPagePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub QueryPreviousPagePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.QueryPreviousPagePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub QueryPreviousPagePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.QueryPreviousPagePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2MeGet(, Optional Escapedattributes As Xoson.O.OptionalString, Optional excludedAttributes As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Current User with SCIM
		  // - parameter Escapedattributes: (query) Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to Sample)
		  // - parameter excludedAttributes: (query) Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2MeGetCallback() on completion. 
		  //
		  // - GET /scim/v2/Me
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If Escapedattributes <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("attributes") + "=" + EncodeURLComponent(Escapedattributes)
		  
		  If excludedAttributes <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("excludedAttributes") + "=" + EncodeURLComponent(excludedAttributes)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/Me"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2MeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2MeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2MeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2MeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2MeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2MeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2MePut(, Optional Escapedattributes As Xoson.O.OptionalString, Optional excludedAttributes As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Current User with SCIM
		  // - parameter Escapedattributes: (query) Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to Sample)
		  // - parameter excludedAttributes: (query) Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2MePutCallback() on completion. 
		  //
		  // - PUT /scim/v2/Me
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If Escapedattributes <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("attributes") + "=" + EncodeURLComponent(Escapedattributes)
		  
		  If excludedAttributes <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("excludedAttributes") + "=" + EncodeURLComponent(excludedAttributes)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/Me"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2MePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2MePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2MePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2MePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2MePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2MePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2ResourceTypesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All SCIM Resource Types
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2ResourceTypesGetCallback() on completion. 
		  //
		  // - GET /scim/v2/ResourceTypes
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/ResourceTypes"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2ResourceTypesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2ResourceTypesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2ResourceTypesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2ResourceTypesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2ResourceTypesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2ResourceTypesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2ResourceTypesTypeGet(, type As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Single SCIM Resource Type
		  // - parameter type: (path) A specific resource type. You can retrieve all available types from the Retrieve All SCIM Resource Types endpoint, where the value for this parameter is the id value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2ResourceTypesTypeGetCallback() on completion. 
		  //
		  // - GET /scim/v2/ResourceTypes/{type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/ResourceTypes/{type}"
		  
		  Dim localVarPathStringtype As String = type
		  
		  localVarPath = localVarPath.ReplaceAllB("{type}", localVarPathStringtype)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2ResourceTypesTypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2ResourceTypesTypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2ResourceTypesTypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2ResourceTypesTypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2ResourceTypesTypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2ResourceTypesTypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2SchemasGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All SCIM Schema Information
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2SchemasGetCallback() on completion. 
		  //
		  // - GET /scim/v2/Schemas
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/Schemas"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2SchemasGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2SchemasGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2SchemasGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2SchemasGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2SchemasGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2SchemasGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2SchemasIdGet(, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Single SCIM Schema Information
		  // - parameter id: (path) The ID of a specific schema. For example, urn:ietf:params:scim:schemas:extension:veevavault:2.0:User. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2SchemasIdGetCallback() on completion. 
		  //
		  // - GET /scim/v2/Schemas/{id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/Schemas/{id}"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2SchemasIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2SchemasIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2SchemasIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2SchemasIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2SchemasIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2SchemasIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2ServiceProviderConfigGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve SCIM Provider
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2ServiceProviderConfigGetCallback() on completion. 
		  //
		  // - GET /scim/v2/ServiceProviderConfig
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/ServiceProviderConfig"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2ServiceProviderConfigGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2ServiceProviderConfigGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2ServiceProviderConfigGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2ServiceProviderConfigGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2ServiceProviderConfigGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2ServiceProviderConfigGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2TypeGet(, type As String, Optional filter As Xoson.O.OptionalString, Optional Escapedattributes As Xoson.O.OptionalString, Optional excludedAttributes As Xoson.O.OptionalString, Optional sortBy As Xoson.O.OptionalString, Optional sortOrder As Xoson.O.OptionalString, Optional startIndex As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve SCIM Resources
		  // - parameter type: (path) The resource type to retrieve. You can retrieve all available types from the Retrieve All SCIM Resource Types endpoint, where the value for this parameter is the endpoint value. 
		  // - parameter filter: (query) Optional: Filter for a specific attribute value. Must be in the format {attribute} eq &quot;{value}&quot;. For example, to filter for a particular user name, userName eq &quot;john&quot;. Complex expressions are not supported, and eq is the only supported operator. (optional, default to Sample)
		  // - parameter Escapedattributes: (query) Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to Sample)
		  // - parameter excludedAttributes: (query) Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to Sample)
		  // - parameter sortBy: (query) Optional: Specify an attribute or sub-attribute to order the response. For example, you can sort by the displayName attribute, or the name.familyName sub-attribute. If omitted, the response is sorted by id. Note that the following attributes are not supported: securityPolicy securityProfile locale preferredLanguage (optional, default to Sample)
		  // - parameter sortOrder: (query) Optional: Specify the number of query results per page, for example, 10. Negative values are treated as 0, and 0 returns no results except for totalResults. If omitted, defaults to 1000. (optional, default to Sample)
		  // - parameter startIndex: (query) Optional: Specify the index of the first result. For example, 10 would omit the first 9 results and begin on result 10. Omission, negative values, and 0 is treated as 1. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2TypeGetCallback() on completion. 
		  //
		  // - GET /scim/v2/{type}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If filter <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("filter") + "=" + EncodeURLComponent(filter)
		  
		  If Escapedattributes <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("attributes") + "=" + EncodeURLComponent(Escapedattributes)
		  
		  If excludedAttributes <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("excludedAttributes") + "=" + EncodeURLComponent(excludedAttributes)
		  
		  If sortBy <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("sortBy") + "=" + EncodeURLComponent(sortBy)
		  
		  If sortOrder <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("sortOrder") + "=" + EncodeURLComponent(sortOrder)
		  
		  If startIndex <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("startIndex") + "=" + EncodeURLComponent(startIndex)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/{type}"
		  
		  Dim localVarPathStringtype As String = type
		  
		  localVarPath = localVarPath.ReplaceAllB("{type}", localVarPathStringtype)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2TypeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2TypeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2TypeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2TypeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2TypeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2TypeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2TypeIdGet(, type As String, id As String, Optional Escapedattributes As Xoson.O.OptionalString, Optional excludedAttributes As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Single SCIM Resource
		  // - parameter type: (path) The resource type to retrieve. You can retrieve all available types from the Retrieve All SCIM Resource Types endpoint, where the value for this parameter is the endpoint value. 
		  // - parameter id: (path) The ID of the resource to retrieve. You can retrieve all resource IDs from a particular resource type with the Retrieve SCIM Resources endpoint. For example, business_admin__v. 
		  // - parameter Escapedattributes: (query) Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to Sample)
		  // - parameter excludedAttributes: (query) Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2TypeIdGetCallback() on completion. 
		  //
		  // - GET /scim/v2/{type}/{id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If Escapedattributes <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("attributes") + "=" + EncodeURLComponent(Escapedattributes)
		  
		  If excludedAttributes <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("excludedAttributes") + "=" + EncodeURLComponent(excludedAttributes)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/{type}/{id}"
		  
		  Dim localVarPathStringtype As String = type
		  
		  localVarPath = localVarPath.ReplaceAllB("{type}", localVarPathStringtype)
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2TypeIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2TypeIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2TypeIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2TypeIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2TypeIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2TypeIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2UsersGet(, Optional filter As Xoson.O.OptionalString, Optional Escapedattributes As Xoson.O.OptionalString, Optional excludedAttributes As Xoson.O.OptionalString, Optional sortBy As Xoson.O.OptionalString, Optional sortOrder As Xoson.O.OptionalString, Optional count As Xoson.O.OptionalString, Optional startIndex As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Users with SCIM
		  // - parameter filter: (query) Optional: Filter for a specific attribute value. Must be in the format {attribute} eq &quot;{value}&quot;. For example, to filter for a particular user name, userName eq &quot;john&quot;. Complex expressions are not supported, and eq is the only supported operator. (optional, default to Sample)
		  // - parameter Escapedattributes: (query) Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to Sample)
		  // - parameter excludedAttributes: (query) Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to Sample)
		  // - parameter sortBy: (query) Optional: Specify an attribute or sub-attribute to order the response. For example, you can sort by the displayName attribute, or the name.familyName sub-attribute. If omitted, the response is sorted by id. Note that the following attributes are not supported: securityPolicy securityProfile locale preferredLanguage (optional, default to Sample)
		  // - parameter sortOrder: (query) Optional: Specify the order in which the sortBy parameter is applied. Allowed values are ascending or descending. If omitted, defaults to ascending. (optional, default to Sample)
		  // - parameter count: (query) Optional: Specify the number of query results per page, for example, 10. Negative values are treated as 0, and 0 returns no results except for totalResults. If omitted, defaults to 1000. (optional, default to Sample)
		  // - parameter startIndex: (query) Optional: Specify the index of the first result. For example, 10 would omit the first 9 results and begin on result 10. Omission, negative values, and 0 is treated as 1. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2UsersGetCallback() on completion. 
		  //
		  // - GET /scim/v2/Users
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If filter <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("filter") + "=" + EncodeURLComponent(filter)
		  
		  If Escapedattributes <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("attributes") + "=" + EncodeURLComponent(Escapedattributes)
		  
		  If excludedAttributes <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("excludedAttributes") + "=" + EncodeURLComponent(excludedAttributes)
		  
		  If sortBy <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("sortBy") + "=" + EncodeURLComponent(sortBy)
		  
		  If sortOrder <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("sortOrder") + "=" + EncodeURLComponent(sortOrder)
		  
		  If count <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("count") + "=" + EncodeURLComponent(count)
		  
		  If startIndex <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("startIndex") + "=" + EncodeURLComponent(startIndex)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/Users"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2UsersGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2UsersGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2UsersGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2UsersGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2UsersGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2UsersGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2UsersIdGet(, id As String, Optional filter As Xoson.O.OptionalString, Optional Escapedattributes As Xoson.O.OptionalString, Optional excludedAttributes As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Single User with SCIM
		  // - parameter id: (path) The id of the user you wish to update. 
		  // - parameter filter: (query) Optional: Filter for a specific attribute value. Must be in the format {attribute} eq &quot;{value}&quot;. For example, to filter for a particular user name, userName eq &quot;john&quot;. Complex expressions are not supported, and eq is the only supported operator. (optional, default to Sample)
		  // - parameter Escapedattributes: (query) Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned. (optional, default to Sample)
		  // - parameter excludedAttributes: (query) Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes&#x3D;userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2UsersIdGetCallback() on completion. 
		  //
		  // - GET /scim/v2/Users/{id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If filter <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("filter") + "=" + EncodeURLComponent(filter)
		  
		  If Escapedattributes <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("attributes") + "=" + EncodeURLComponent(Escapedattributes)
		  
		  If excludedAttributes <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("excludedAttributes") + "=" + EncodeURLComponent(excludedAttributes)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/Users/{id}"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2UsersIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2UsersIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2UsersIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2UsersIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2UsersIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2UsersIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2UsersIdPut(, id As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update User with SCIM
		  // - parameter id: (path) The id of the user you wish to update. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2UsersIdPutCallback() on completion. 
		  //
		  // - PUT /scim/v2/Users/{id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/Users/{id}"
		  
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2UsersIdPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2UsersIdPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2UsersIdPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2UsersIdPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2UsersIdPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2UsersIdPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ScimV2UsersPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create User with SCIM
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ScimV2UsersPostCallback() on completion. 
		  //
		  // - POST /scim/v2/Users
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/scim/v2/Users"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ScimV2UsersPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ScimV2UsersPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ScimV2UsersPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ScimV2UsersPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ScimV2UsersPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ScimV2UsersPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesCertificateCertIdGet(, certId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Signing Certificate
		  // - parameter certId: (path) The cert_id is provided in each Spark message in the X-VaultAPISignature-CertificateId header. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesCertificateCertIdGetCallback() on completion. 
		  //
		  // - GET /services/certificate/{cert_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/certificate/{cert_id}"
		  
		  Dim localVarPathStringcertId As String = certId
		  
		  localVarPath = localVarPath.ReplaceAllB("{cert_id}", localVarPathStringcertId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesCertificateCertIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesCertificateCertIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesCertificateCertIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesCertificateCertIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesCertificateCertIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesCertificateCertIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesConfigurationModeActionsDisablePost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Disable Configuration Mode
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesConfigurationModeActionsDisablePostCallback() on completion. 
		  //
		  // - POST /services/configuration_mode/actions/disable
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/configuration_mode/actions/disable"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesConfigurationModeActionsDisablePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesConfigurationModeActionsDisablePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesConfigurationModeActionsDisablePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesConfigurationModeActionsDisablePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesConfigurationModeActionsDisablePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesConfigurationModeActionsDisablePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesConfigurationModeActionsEnablePost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Enable Configuration Mode
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesConfigurationModeActionsEnablePostCallback() on completion. 
		  //
		  // - POST /services/configuration_mode/actions/enable
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/configuration_mode/actions/enable"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesConfigurationModeActionsEnablePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesConfigurationModeActionsEnablePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesConfigurationModeActionsEnablePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesConfigurationModeActionsEnablePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesConfigurationModeActionsEnablePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesConfigurationModeActionsEnablePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesDirectdataFilesGet(, Optional extractType As Xoson.O.OptionalString, Optional startTime As Xoson.O.OptionalInteger, Optional stopTime As Xoson.O.OptionalInteger, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Available Direct Data Files
		  // - parameter extractType: (query) The Direct Data file type: incremental_directdata, full_directdata, or log_directdata. If omitted, returns all files. (optional, default to Sample)
		  // - parameter startTime: (query) Specify a time in YYYY-MM-DDTHH:MM:SSZ format. For example, 7AM on January 15, 2024 would use 2024-01-15T07:00:00Z. If omitted, defaults to the Vault’s creation date and time. (optional, default to 0)
		  // - parameter stopTime: (query) Specify a time in YYYY-MM-DDTHH:MM:SSZ format. For example, 9AM on January 15, 2024 would use 2024-01-15T09:00:00Z. If omitted, defaults to today’s date and current time. (optional, default to 0)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesDirectdataFilesGetCallback() on completion. 
		  //
		  // - GET /services/directdata/files
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If extractType <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("extract_type") + "=" + EncodeURLComponent(extractType)
		  
		  If startTime <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("start_time") + "=" + EncodeURLComponent(startTime.ToString)
		  
		  If stopTime <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("stop_time") + "=" + EncodeURLComponent(stopTime.ToString)
		  
		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/directdata/files"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesDirectdataFilesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesDirectdataFilesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesDirectdataFilesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesDirectdataFilesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesDirectdataFilesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesDirectdataFilesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesDirectdataFilesNameGet(, name As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Direct Data File
		  // - parameter name: (path) The name of the Direct Data file part. Obtain this from the Retrieve Available Direct Data Files request. For example, 146478-20240213-0000-F.001. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesDirectdataFilesNameGetCallback() on completion. 
		  //
		  // - GET /services/directdata/files/{name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/directdata/files/{name}"
		  
		  Dim localVarPathStringname As String = name
		  
		  localVarPath = localVarPath.ReplaceAllB("{name}", localVarPathStringname)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesDirectdataFilesNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesDirectdataFilesNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesDirectdataFilesNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesDirectdataFilesNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesDirectdataFilesNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesDirectdataFilesNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingItemsContentItemGet(, item As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional range As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Item Content
		  // - parameter item: (path) The absolute path to a file or folder. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter range: (header) Optional: Specifies a partial range of bytes to include in the upload. Maximum 50 MB. Must be in the format &#x60;bytes&#x3D;{min}-{max}&#x60;. For example, &#x60;bytes&#x3D;0-1000&#x60;. (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingItemsContentItemGetCallback() on completion. 
		  //
		  // - GET /services/file_staging/items/content/{item}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If range <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Range"), EncodeURLComponent(range))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/items/content/{item}"
		  
		  Dim localVarPathStringitem As String = item
		  
		  localVarPath = localVarPath.ReplaceAllB("{item}", localVarPathStringitem)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingItemsContentItemGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingItemsContentItemGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingItemsContentItemGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingItemsContentItemGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingItemsContentItemGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingItemsContentItemGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingItemsItemDelete(, item As String, Optional recursive As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete File or Folder
		  // - parameter item: (path) The absolute path to the file or folder to delete. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory. 
		  // - parameter recursive: (query) Applicable to deleting folders only. If true, the request will delete the contents of a folder and all subfolders. The default is false. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingItemsItemDeleteCallback() on completion. 
		  //
		  // - DELETE /services/file_staging/items/{item}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If recursive <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("recursive") + "=" + EncodeURLComponent(recursive)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/items/{item}"
		  
		  Dim localVarPathStringitem As String = item
		  
		  localVarPath = localVarPath.ReplaceAllB("{item}", localVarPathStringitem)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingItemsItemDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingItemsItemDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingItemsItemDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingItemsItemDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingItemsItemDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingItemsItemDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingItemsItemGet(, item As String, Optional recursive As Xoson.O.OptionalString, Optional limit As Xoson.O.OptionalString, Optional formatResult As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // List Items at a Path
		  // - parameter item: (path) The absolute path to the file or folder to delete. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory. 
		  // - parameter recursive: (query) If true, the response will contain the contents of all subfolders. If not specified, the default value is false. (optional, default to Sample)
		  // - parameter limit: (query) Optional: The maximum number of items per page in the response. This can be any value between 1 and 1000. If omitted, the default value is 1000. (optional, default to Sample)
		  // - parameter formatResult: (query) If set to csv, the response includes a job_id. Use the Job ID value to retrieve the status and results of the request. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingItemsItemGetCallback() on completion. 
		  //
		  // - GET /services/file_staging/items/{item}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If recursive <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("recursive") + "=" + EncodeURLComponent(recursive)
		  
		  If limit <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("limit") + "=" + EncodeURLComponent(limit)
		  
		  If formatResult <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("format_result") + "=" + EncodeURLComponent(formatResult)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/items/{item}"
		  
		  Dim localVarPathStringitem As String = item
		  
		  localVarPath = localVarPath.ReplaceAllB("{item}", localVarPathStringitem)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingItemsItemGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingItemsItemGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingItemsItemGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingItemsItemGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingItemsItemGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingItemsItemGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingItemsItemPut(, item As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Folder or File
		  // - parameter item: (path) The absolute path to the file or folder to delete. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingItemsItemPutCallback() on completion. 
		  //
		  // - PUT /services/file_staging/items/{item}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/items/{item}"
		  
		  Dim localVarPathStringitem As String = item
		  
		  localVarPath = localVarPath.ReplaceAllB("{item}", localVarPathStringitem)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingItemsItemPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingItemsItemPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingItemsItemPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingItemsItemPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingItemsItemPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingItemsItemPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingItemsPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentMD5 As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Folder or File
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentMD5: (header) Optional: The MD5 checksum of the file being uploaded. (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingItemsPostCallback() on completion. 
		  //
		  // - POST /services/file_staging/items
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentMD5 <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-MD5"), EncodeURLComponent(contentMD5))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/items"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingItemsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingItemsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingItemsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingItemsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingItemsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingItemsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingUploadGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // List Upload Sessions
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingUploadGetCallback() on completion. 
		  //
		  // - GET /services/file_staging/upload/
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/upload/"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingUploadGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingUploadGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingUploadGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingUploadGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingUploadPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Resumable Upload Session
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingUploadPostCallback() on completion. 
		  //
		  // - POST /services/file_staging/upload
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/upload"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingUploadPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingUploadPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingUploadPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingUploadPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingUploadUploadSessionIdDelete(, uploadSessionId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Abort Upload Session
		  // - parameter uploadSessionId: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingUploadUploadSessionIdDeleteCallback() on completion. 
		  //
		  // - DELETE /services/file_staging/upload/{upload_session_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/upload/{upload_session_id}"
		  
		  Dim localVarPathStringuploadSessionId As String = uploadSessionId
		  
		  localVarPath = localVarPath.ReplaceAllB("{upload_session_id}", localVarPathStringuploadSessionId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingUploadUploadSessionIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingUploadUploadSessionIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadUploadSessionIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingUploadUploadSessionIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadUploadSessionIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingUploadUploadSessionIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingUploadUploadSessionIdGet(, uploadSessionId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Get Upload Session Details
		  // - parameter uploadSessionId: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingUploadUploadSessionIdGetCallback() on completion. 
		  //
		  // - GET /services/file_staging/upload/{upload_session_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/upload/{upload_session_id}"
		  
		  Dim localVarPathStringuploadSessionId As String = uploadSessionId
		  
		  localVarPath = localVarPath.ReplaceAllB("{upload_session_id}", localVarPathStringuploadSessionId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingUploadUploadSessionIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingUploadUploadSessionIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadUploadSessionIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingUploadUploadSessionIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadUploadSessionIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingUploadUploadSessionIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingUploadUploadSessionIdPartsGet(, uploadSessionId As String, Optional limit As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // List File Parts Uploaded to Session
		  // - parameter uploadSessionId: (path)  
		  // - parameter limit: (query) Optional: The maximum number of items per page in the response. This can be any value between 1 and 1000. If omitted, the default value is 1000. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingUploadUploadSessionIdPartsGetCallback() on completion. 
		  //
		  // - GET /services/file_staging/upload/{upload_session_id}/parts
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If limit <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("limit") + "=" + EncodeURLComponent(limit)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/upload/{upload_session_id}/parts"
		  
		  Dim localVarPathStringuploadSessionId As String = uploadSessionId
		  
		  localVarPath = localVarPath.ReplaceAllB("{upload_session_id}", localVarPathStringuploadSessionId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingUploadUploadSessionIdPartsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingUploadUploadSessionIdPartsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadUploadSessionIdPartsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingUploadUploadSessionIdPartsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadUploadSessionIdPartsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingUploadUploadSessionIdPartsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingUploadUploadSessionIdPost(, uploadSessionId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Commit Upload Session
		  // - parameter uploadSessionId: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingUploadUploadSessionIdPostCallback() on completion. 
		  //
		  // - POST /services/file_staging/upload/{upload_session_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/upload/{upload_session_id}"
		  
		  Dim localVarPathStringuploadSessionId As String = uploadSessionId
		  
		  localVarPath = localVarPath.ReplaceAllB("{upload_session_id}", localVarPathStringuploadSessionId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingUploadUploadSessionIdPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingUploadUploadSessionIdPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadUploadSessionIdPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingUploadUploadSessionIdPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadUploadSessionIdPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingUploadUploadSessionIdPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesFileStagingUploadUploadSessionIdPut(, uploadSessionId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIFilePartNumber As Xoson.O.OptionalString, Optional contentMD5 As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Upload to a Session
		  // - parameter uploadSessionId: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIFilePartNumber: (header) The part number, which uniquely identifies a file part and defines its position within the file as a whole. If a part is uploaded using a part number that has already been used, Vault overwrites the previously uploaded file part. You must upload parts in numerical order. For example, you cannot upload part 3 without first uploading parts 1 and 2. (optional, default to Sample)
		  // - parameter contentMD5: (header) Optional: The MD5 checksum of the file part being uploaded. (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesFileStagingUploadUploadSessionIdPutCallback() on completion. 
		  //
		  // - PUT /services/file_staging/upload/{upload_session_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIFilePartNumber <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-FilePartNumber"), EncodeURLComponent(xVaultAPIFilePartNumber))
		  		  If contentMD5 <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-MD5"), EncodeURLComponent(contentMD5))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/file_staging/upload/{upload_session_id}"
		  
		  Dim localVarPathStringuploadSessionId As String = uploadSessionId
		  
		  localVarPath = localVarPath.ReplaceAllB("{upload_session_id}", localVarPathStringuploadSessionId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesFileStagingUploadUploadSessionIdPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesFileStagingUploadUploadSessionIdPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadUploadSessionIdPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesFileStagingUploadUploadSessionIdPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesFileStagingUploadUploadSessionIdPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesFileStagingUploadUploadSessionIdPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesJobsHistoriesGet(, Optional startDate As Xoson.O.OptionalString, Optional endDate As Xoson.O.OptionalString, Optional status As Xoson.O.OptionalString, Optional limit As Xoson.O.OptionalString, Optional offset As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Job Histories
		  // - parameter startDate: (query) Sets the date to start retrieving completed jobs, in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the first completed job. (optional, default to Sample)
		  // - parameter endDate: (query) Sets the date to end retrieving completed jobs, in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the current date and time. (optional, default to Sample)
		  // - parameter status: (query) Filter to only retrieve jobs in a certain status. Allowed values are success, errors_encountered, failed_to_run, missed_schedule, cancelled. If omitted, retrieves all statuses. (optional, default to Sample)
		  // - parameter limit: (query) Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 200. If omitted, defaults to 50. (optional, default to Sample)
		  // - parameter offset: (query) Paginate the results displayed per page by specifying the amount of offset from the first job history returned. If omitted, defaults to 0. If you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesJobsHistoriesGetCallback() on completion. 
		  //
		  // - GET /services/jobs/histories
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If startDate <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("start_date") + "=" + EncodeURLComponent(startDate)
		  
		  If endDate <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("end_date") + "=" + EncodeURLComponent(endDate)
		  
		  If status <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("status") + "=" + EncodeURLComponent(status)
		  
		  If limit <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("limit") + "=" + EncodeURLComponent(limit)
		  
		  If offset <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("offset") + "=" + EncodeURLComponent(offset)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/jobs/histories"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesJobsHistoriesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesJobsHistoriesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesJobsHistoriesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesJobsHistoriesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesJobsHistoriesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesJobsHistoriesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesJobsJobIdErrorsGet(, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Import Bulk Translation File Job Errors
		  // - parameter jobId: (path) The id value of the requested import job. This was returned from the Import Bulk Translation File request. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesJobsJobIdErrorsGetCallback() on completion. 
		  //
		  // - GET /services/jobs/{job_id}/errors
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/jobs/{job_id}/errors"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesJobsJobIdErrorsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesJobsJobIdErrorsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesJobsJobIdErrorsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesJobsJobIdErrorsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesJobsJobIdErrorsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesJobsJobIdErrorsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesJobsJobIdGet(, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Job Status
		  // - parameter jobId: (path) The ID of the job, returned from the original job request. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesJobsJobIdGetCallback() on completion. 
		  //
		  // - GET /services/jobs/{job_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/jobs/{job_id}"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesJobsJobIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesJobsJobIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesJobsJobIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesJobsJobIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesJobsJobIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesJobsJobIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesJobsJobIdSummaryGet(, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Import Bulk Translation File Job Summary
		  // - parameter jobId: (path) The id value of the requested import job. This was returned from the Import Bulk Translation File request. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesJobsJobIdSummaryGetCallback() on completion. 
		  //
		  // - GET /services/jobs/{job_id}/summary
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/jobs/{job_id}/summary"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesJobsJobIdSummaryGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesJobsJobIdSummaryGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesJobsJobIdSummaryGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesJobsJobIdSummaryGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesJobsJobIdSummaryGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesJobsJobIdSummaryGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesJobsJobIdTasksGet(, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve SDK Job Tasks
		  // - parameter jobId: (path) The ID of the SDK job, returned from the original job request. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesJobsJobIdTasksGetCallback() on completion. 
		  //
		  // - GET /services/jobs/{job_id}/tasks
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/jobs/{job_id}/tasks"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesJobsJobIdTasksGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesJobsJobIdTasksGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesJobsJobIdTasksGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesJobsJobIdTasksGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesJobsJobIdTasksGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesJobsJobIdTasksGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesJobsMonitorsGet(, Optional startDate As Xoson.O.OptionalString, Optional endDate As Xoson.O.OptionalString, Optional status As Xoson.O.OptionalString, Optional limit As Xoson.O.OptionalString, Optional offset As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Job Monitors
		  // - parameter startDate: (query) Sets the date to start retrieving uncompleted jobs, based on the date and time the job instance was created. Value must be in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the first completed job. (optional, default to Sample)
		  // - parameter endDate: (query) Sets the date to end retrieving uncompleted jobs, based on the date and time the job instance was created. Value must be in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the current date and time. (optional, default to Sample)
		  // - parameter status: (query) Filter to only retrieve jobs in a certain status. Allowed values are scheduled, queued, running. If omitted, retrieves all statuses. (optional, default to Sample)
		  // - parameter limit: (query) Paginate the results by specifying the maximum number of jobs per page in the response. This can be any value between 1 and 200. If omitted, defaults to 50. (optional, default to Sample)
		  // - parameter offset: (query) Paginate the results displayed per page by specifying the amount of offset from the first job instance returned. If omitted, defaults to 0. If you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesJobsMonitorsGetCallback() on completion. 
		  //
		  // - GET /services/jobs/monitors
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If startDate <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("start_date") + "=" + EncodeURLComponent(startDate)
		  
		  If endDate <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("end_date") + "=" + EncodeURLComponent(endDate)
		  
		  If status <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("status") + "=" + EncodeURLComponent(status)
		  
		  If limit <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("limit") + "=" + EncodeURLComponent(limit)
		  
		  If offset <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("offset") + "=" + EncodeURLComponent(offset)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/jobs/monitors"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesJobsMonitorsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesJobsMonitorsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesJobsMonitorsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesJobsMonitorsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesJobsMonitorsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesJobsMonitorsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesJobsStartNowJobIdPost(, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Start Job
		  // - parameter jobId: (path) The ID of the scheduled job instance to start. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesJobsStartNowJobIdPostCallback() on completion. 
		  //
		  // - POST /services/jobs/start_now/{job_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/jobs/start_now/{job_id}"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesJobsStartNowJobIdPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesJobsStartNowJobIdPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesJobsStartNowJobIdPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesJobsStartNowJobIdPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesJobsStartNowJobIdPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesJobsStartNowJobIdPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesLoaderExtractPost(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Extract Data Files
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesLoaderExtractPostCallback() on completion. 
		  //
		  // - POST /services/loader/extract
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/loader/extract"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesLoaderExtractPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesLoaderExtractPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesLoaderExtractPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesLoaderExtractPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesLoaderExtractPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesLoaderExtractPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesLoaderJobIdTasksTaskIdFailurelogGet(, jobId As String, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Load Failure Log Results
		  // - parameter jobId: (path) The id value of the requested extract job. 
		  // - parameter taskId: (path) The id value of the requested extract task. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesLoaderJobIdTasksTaskIdFailurelogGetCallback() on completion. 
		  //
		  // - GET /services/loader/{job_id}/tasks/{task_id}/failurelog
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/loader/{job_id}/tasks/{task_id}/failurelog"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesLoaderJobIdTasksTaskIdFailurelogGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesLoaderJobIdTasksTaskIdFailurelogGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesLoaderJobIdTasksTaskIdFailurelogGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesLoaderJobIdTasksTaskIdFailurelogGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesLoaderJobIdTasksTaskIdFailurelogGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesLoaderJobIdTasksTaskIdFailurelogGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesLoaderJobIdTasksTaskIdResultsGet(, jobId As String, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Loader Extract Results
		  // - parameter jobId: (path) The id value of the requested extract job. 
		  // - parameter taskId: (path) The id value of the requested extract task. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesLoaderJobIdTasksTaskIdResultsGetCallback() on completion. 
		  //
		  // - GET /services/loader/{job_id}/tasks/{task_id}/results
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/loader/{job_id}/tasks/{task_id}/results"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesLoaderJobIdTasksTaskIdResultsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesLoaderJobIdTasksTaskIdResultsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesLoaderJobIdTasksTaskIdResultsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesLoaderJobIdTasksTaskIdResultsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesLoaderJobIdTasksTaskIdResultsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesLoaderJobIdTasksTaskIdResultsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesLoaderJobIdTasksTaskIdResultsRenditionsGet(, jobId As String, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Loader Extract Renditions Results
		  // - parameter jobId: (path) The id value of the requested extract job. 
		  // - parameter taskId: (path) The id value of the requested extract task. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesLoaderJobIdTasksTaskIdResultsRenditionsGetCallback() on completion. 
		  //
		  // - GET /services/loader/{job_id}/tasks/{task_id}/results/renditions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/loader/{job_id}/tasks/{task_id}/results/renditions"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesLoaderJobIdTasksTaskIdResultsRenditionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesLoaderJobIdTasksTaskIdResultsRenditionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesLoaderJobIdTasksTaskIdResultsRenditionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesLoaderJobIdTasksTaskIdResultsRenditionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesLoaderJobIdTasksTaskIdResultsRenditionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesLoaderJobIdTasksTaskIdResultsRenditionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesLoaderJobIdTasksTaskIdSuccesslogGet(, jobId As String, taskId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Load Success Log Results
		  // - parameter jobId: (path) The id value of the requested extract job. 
		  // - parameter taskId: (path) The id value of the requested extract task. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesLoaderJobIdTasksTaskIdSuccesslogGetCallback() on completion. 
		  //
		  // - GET /services/loader/{job_id}/tasks/{task_id}/successlog
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/loader/{job_id}/tasks/{task_id}/successlog"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  Dim localVarPathStringtaskId As String = taskId
		  
		  localVarPath = localVarPath.ReplaceAllB("{task_id}", localVarPathStringtaskId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesLoaderJobIdTasksTaskIdSuccesslogGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesLoaderJobIdTasksTaskIdSuccesslogGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesLoaderJobIdTasksTaskIdSuccesslogGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesLoaderJobIdTasksTaskIdSuccesslogGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesLoaderJobIdTasksTaskIdSuccesslogGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesLoaderJobIdTasksTaskIdSuccesslogGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesLoaderLoadPost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Load Data Objects
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesLoaderLoadPostCallback() on completion. 
		  //
		  // - POST /services/loader/load
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/loader/load"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesLoaderLoadPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesLoaderLoadPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesLoaderLoadPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesLoaderLoadPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesLoaderLoadPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesLoaderLoadPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesPackageActionsValidatePost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Validate Package
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesPackageActionsValidatePostCallback() on completion. 
		  //
		  // - POST /services/package/actions/validate
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/package/actions/validate"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesPackageActionsValidatePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesPackageActionsValidatePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesPackageActionsValidatePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesPackageActionsValidatePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesPackageActionsValidatePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesPackageActionsValidatePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesPackagePost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Export Package
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesPackagePostCallback() on completion. 
		  //
		  // - POST /services/package
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/package"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesPackagePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesPackagePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesPackagePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesPackagePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesPackagePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesPackagePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesPackagePut(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Import Package
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesPackagePutCallback() on completion. 
		  //
		  // - PUT /services/package
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/package"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesPackagePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesPackagePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesPackagePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesPackagePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesPackagePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesPackagePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesQueuesGet(, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Queues
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesQueuesGetCallback() on completion. 
		  //
		  // - GET /services/queues
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/queues"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesQueuesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesQueuesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesQueuesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesQueuesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesQueuesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesQueuesGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesQueuesQueueNameActionsDisableDeliveryPut(, queueName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Disable Delivery
		  // - parameter queueName: (path) The name of a specific Queue. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesQueuesQueueNameActionsDisableDeliveryPutCallback() on completion. 
		  //
		  // - PUT /services/queues/{queue_name}/actions/disable_delivery
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/queues/{queue_name}/actions/disable_delivery"
		  
		  Dim localVarPathStringqueueName As String = queueName
		  
		  localVarPath = localVarPath.ReplaceAllB("{queue_name}", localVarPathStringqueueName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesQueuesQueueNameActionsDisableDeliveryPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesQueuesQueueNameActionsDisableDeliveryPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesQueuesQueueNameActionsDisableDeliveryPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesQueuesQueueNameActionsDisableDeliveryPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesQueuesQueueNameActionsDisableDeliveryPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesQueuesQueueNameActionsDisableDeliveryPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesQueuesQueueNameActionsEnableDeliveryPut(, queueName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Enable Delivery
		  // - parameter queueName: (path) The name of a specific Queue. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesQueuesQueueNameActionsEnableDeliveryPutCallback() on completion. 
		  //
		  // - PUT /services/queues/{queue_name}/actions/enable_delivery
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/queues/{queue_name}/actions/enable_delivery"
		  
		  Dim localVarPathStringqueueName As String = queueName
		  
		  localVarPath = localVarPath.ReplaceAllB("{queue_name}", localVarPathStringqueueName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesQueuesQueueNameActionsEnableDeliveryPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesQueuesQueueNameActionsEnableDeliveryPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesQueuesQueueNameActionsEnableDeliveryPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesQueuesQueueNameActionsEnableDeliveryPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesQueuesQueueNameActionsEnableDeliveryPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesQueuesQueueNameActionsEnableDeliveryPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesQueuesQueueNameActionsResetPut(, queueName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Reset Queue
		  // - parameter queueName: (path) The name of a specific Queue. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesQueuesQueueNameActionsResetPutCallback() on completion. 
		  //
		  // - PUT /services/queues/{queue_name}/actions/reset
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/queues/{queue_name}/actions/reset"
		  
		  Dim localVarPathStringqueueName As String = queueName
		  
		  localVarPath = localVarPath.ReplaceAllB("{queue_name}", localVarPathStringqueueName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesQueuesQueueNameActionsResetPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesQueuesQueueNameActionsResetPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesQueuesQueueNameActionsResetPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesQueuesQueueNameActionsResetPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesQueuesQueueNameActionsResetPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesQueuesQueueNameActionsResetPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesQueuesQueueNameGet(, queueName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Queue Status
		  // - parameter queueName: (path) The name of a specific queue. For example, queue__c. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesQueuesQueueNameGetCallback() on completion. 
		  //
		  // - GET /services/queues/{queue_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/queues/{queue_name}"
		  
		  Dim localVarPathStringqueueName As String = queueName
		  
		  localVarPath = localVarPath.ReplaceAllB("{queue_name}", localVarPathStringqueueName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesQueuesQueueNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesQueuesQueueNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesQueuesQueueNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesQueuesQueueNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesQueuesQueueNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesQueuesQueueNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub ServicesVobjectVaultPackageVPackageIdActionsValidatePost(, packageId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Validate Imported Package
		  // - parameter packageId: (path) The ID of the package to validate. You can find this in the API response of a package import, or in the URL of package in the Vault UI. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.ServicesVobjectVaultPackageVPackageIdActionsValidatePostCallback() on completion. 
		  //
		  // - POST /services/vobject/vault_package__v/{package_id}/actions/validate
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/services/vobject/vault_package__v/{package_id}/actions/validate"
		  
		  Dim localVarPathStringpackageId As String = packageId
		  
		  localVarPath = localVarPath.ReplaceAllB("{package_id}", localVarPathStringpackageId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.ServicesVobjectVaultPackageVPackageIdActionsValidatePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.ServicesVobjectVaultPackageVPackageIdActionsValidatePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub ServicesVobjectVaultPackageVPackageIdActionsValidatePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.ServicesVobjectVaultPackageVPackageIdActionsValidatePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub ServicesVobjectVaultPackageVPackageIdActionsValidatePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.ServicesVobjectVaultPackageVPackageIdActionsValidatePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub SessionDelete(, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // End Session
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header) The Vault sessionId to end. (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.SessionDeleteCallback() on completion. 
		  //
		  // - DELETE /session
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/session"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.SessionDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.SessionDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub SessionDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.SessionDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub SessionDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.SessionDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub UicodeDistributionsDistributionNameCodeGet(, distributionName As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Single Client Code Distribution
		  // - parameter distributionName: (path) The name attribute of the client code distribution to download. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.UicodeDistributionsDistributionNameCodeGetCallback() on completion. 
		  //
		  // - GET /uicode/distributions/{distribution_name}/code
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/uicode/distributions/{distribution_name}/code"
		  
		  Dim localVarPathStringdistributionName As String = distributionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{distribution_name}", localVarPathStringdistributionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.UicodeDistributionsDistributionNameCodeGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.UicodeDistributionsDistributionNameCodeGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub UicodeDistributionsDistributionNameCodeGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.UicodeDistributionsDistributionNameCodeGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub UicodeDistributionsDistributionNameCodeGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.UicodeDistributionsDistributionNameCodeGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub UicodeDistributionsDistributionNameDelete(, distributionName As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Single Client Code Distribution
		  // - parameter distributionName: (path) The name attribute of the client code distribution to delete. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.UicodeDistributionsDistributionNameDeleteCallback() on completion. 
		  //
		  // - DELETE /uicode/distributions/{distribution_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/uicode/distributions/{distribution_name}"
		  
		  Dim localVarPathStringdistributionName As String = distributionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{distribution_name}", localVarPathStringdistributionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.UicodeDistributionsDistributionNameDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.UicodeDistributionsDistributionNameDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub UicodeDistributionsDistributionNameDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.UicodeDistributionsDistributionNameDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub UicodeDistributionsDistributionNameDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.UicodeDistributionsDistributionNameDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub UicodeDistributionsDistributionNameGet(, distributionName As String, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Single Client Code Distribution Metadata
		  // - parameter distributionName: (path) The name attribute of the client code distribution to delete. 
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.UicodeDistributionsDistributionNameGetCallback() on completion. 
		  //
		  // - GET /uicode/distributions/{distribution_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/uicode/distributions/{distribution_name}"
		  
		  Dim localVarPathStringdistributionName As String = distributionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{distribution_name}", localVarPathStringdistributionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.UicodeDistributionsDistributionNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.UicodeDistributionsDistributionNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub UicodeDistributionsDistributionNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.UicodeDistributionsDistributionNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub UicodeDistributionsDistributionNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.UicodeDistributionsDistributionNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub UicodeDistributionsGet(, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve All Client Code Distribution Metadata
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.UicodeDistributionsGetCallback() on completion. 
		  //
		  // - GET /uicode/distributions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/uicode/distributions"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.UicodeDistributionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.UicodeDistributionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub UicodeDistributionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.UicodeDistributionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub UicodeDistributionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.UicodeDistributionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub UicodeDistributionsPost(, Optional accept As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Add or Replace Single Client Code Distribution
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.UicodeDistributionsPostCallback() on completion. 
		  //
		  // - POST /uicode/distributions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/uicode/distributions"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.UicodeDistributionsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.UicodeDistributionsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub UicodeDistributionsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.UicodeDistributionsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub UicodeDistributionsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.UicodeDistributionsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectVaultPackageVPackageIdActionsDeployPost(, packageId As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Deploy Package
		  // - parameter packageId: (path) The id field value of the vault_package__v object record used for deployment. See Import Package. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectVaultPackageVPackageIdActionsDeployPostCallback() on completion. 
		  //
		  // - POST /vobject/vault_package__v/{package_id}/actions/deploy
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobject/vault_package__v/{package_id}/actions/deploy"
		  
		  Dim localVarPathStringpackageId As String = packageId
		  
		  localVarPath = localVarPath.ReplaceAllB("{package_id}", localVarPathStringpackageId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectVaultPackageVPackageIdActionsDeployPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectVaultPackageVPackageIdActionsDeployPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectVaultPackageVPackageIdActionsDeployPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectVaultPackageVPackageIdActionsDeployPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectVaultPackageVPackageIdActionsDeployPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectVaultPackageVPackageIdActionsDeployPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectVaultPackageVPackageIdActionsDeployResultsGet(, packageId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Package Deploy Results
		  // - parameter packageId: (path) The id field value of the vault_package__v object record used for deployment. See Deploy Package. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectVaultPackageVPackageIdActionsDeployResultsGetCallback() on completion. 
		  //
		  // - GET /vobject/vault_package__v/{package_id}/actions/deploy/results
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobject/vault_package__v/{package_id}/actions/deploy/results"
		  
		  Dim localVarPathStringpackageId As String = packageId
		  
		  localVarPath = localVarPath.ReplaceAllB("{package_id}", localVarPathStringpackageId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectVaultPackageVPackageIdActionsDeployResultsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectVaultPackageVPackageIdActionsDeployResultsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectVaultPackageVPackageIdActionsDeployResultsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectVaultPackageVPackageIdActionsDeployResultsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectVaultPackageVPackageIdActionsDeployResultsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectVaultPackageVPackageIdActionsDeployResultsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsCascadedeleteResultsObjectNameJobStatusJobIdGet(, objectName As String, jobStatus As String, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Results of Cascade Delete Job
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter jobStatus: (path)  
		  // - parameter jobId: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsCascadedeleteResultsObjectNameJobStatusJobIdGetCallback() on completion. 
		  //
		  // - GET /vobjects/cascadedelete/results/{object_name}/{job_status}/{job_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/cascadedelete/results/{object_name}/{job_status}/{job_id}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringjobStatus As String = jobStatus
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_status}", localVarPathStringjobStatus)
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsCascadedeleteResultsObjectNameJobStatusJobIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsCascadedeleteResultsObjectNameJobStatusJobIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsCascadedeleteResultsObjectNameJobStatusJobIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsCascadedeleteResultsObjectNameJobStatusJobIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsCascadedeleteResultsObjectNameJobStatusJobIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsCascadedeleteResultsObjectNameJobStatusJobIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsDeepcopyResultsObjectNameJobStatusJobIdGet(, objectName As String, jobStatus As String, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Results of Deep Copy Job
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter jobStatus: (path) The ID of the job, retrieved from the response of the job request. 
		  // - parameter jobId: (path) Possible values are success or failure. Find if your job succeeded or failed by retrieving the job status. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsDeepcopyResultsObjectNameJobStatusJobIdGetCallback() on completion. 
		  //
		  // - GET /vobjects/deepcopy/results/{object_name}/{job_status}/{job_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/deepcopy/results/{object_name}/{job_status}/{job_id}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringjobStatus As String = jobStatus
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_status}", localVarPathStringjobStatus)
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsDeepcopyResultsObjectNameJobStatusJobIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsDeepcopyResultsObjectNameJobStatusJobIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsDeepcopyResultsObjectNameJobStatusJobIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsDeepcopyResultsObjectNameJobStatusJobIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsDeepcopyResultsObjectNameJobStatusJobIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsDeepcopyResultsObjectNameJobStatusJobIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsEdlItemVActionsCreateplaceholderPost(, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create a Placeholder from an EDL Item
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsEdlItemVActionsCreateplaceholderPostCallback() on completion. 
		  //
		  // - POST /vobjects/edl_item__v/actions/createplaceholder
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/edl_item__v/actions/createplaceholder"
		  
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsEdlItemVActionsCreateplaceholderPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsEdlItemVActionsCreateplaceholderPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsEdlItemVActionsCreateplaceholderPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsEdlItemVActionsCreateplaceholderPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsEdlItemVActionsCreateplaceholderPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsEdlItemVActionsCreateplaceholderPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsMergesJobIdLogGet(, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Merge Records Job Log
		  // - parameter jobId: (path) The job_id field value returned from the merge operation. You can start merge operations with the Initiate Record Merge API request or with the Vault Java SDK. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsMergesJobIdLogGetCallback() on completion. 
		  //
		  // - GET /vobjects/merges/{job_id}/log
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/merges/{job_id}/log"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsMergesJobIdLogGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsMergesJobIdLogGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsMergesJobIdLogGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsMergesJobIdLogGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsMergesJobIdLogGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsMergesJobIdLogGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsMergesJobIdResultsGet(, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Record Merge Results
		  // - parameter jobId: (path) The job_id field value returned from the merge operation. You can start merge operations with the Initiate Record Merge API request or with the Vault Java SDK. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsMergesJobIdResultsGetCallback() on completion. 
		  //
		  // - GET /vobjects/merges/{job_id}/results
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/merges/{job_id}/results"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsMergesJobIdResultsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsMergesJobIdResultsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsMergesJobIdResultsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsMergesJobIdResultsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsMergesJobIdResultsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsMergesJobIdResultsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsMergesJobIdStatusGet(, jobId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Record Merge Status
		  // - parameter jobId: (path) The job_id field value returned from the merge operation. You can start merge operations with the Initiate Record Merge API request or with the Vault Java SDK. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsMergesJobIdStatusGetCallback() on completion. 
		  //
		  // - GET /vobjects/merges/{job_id}/status
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/merges/{job_id}/status"
		  
		  Dim localVarPathStringjobId As String = jobId
		  
		  localVarPath = localVarPath.ReplaceAllB("{job_id}", localVarPathStringjobId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsMergesJobIdStatusGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsMergesJobIdStatusGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsMergesJobIdStatusGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsMergesJobIdStatusGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsMergesJobIdStatusGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsMergesJobIdStatusGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameActionsActionNamePost(, objectName As String, actionName As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Initiate Object Action on Multiple Records
		  // - parameter objectName: (path) The object name__v field value. 
		  // - parameter actionName: (path) Either the name of the Objectaction or Objectlifecyclestateuseraction to initiate. This is obtained from the Retrieve User Actions request. The format for action_name is Objectaction.vobject.action or Objectlifecyclestateuseraction.vobject.state.action. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameActionsActionNamePostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/actions/{action_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/actions/{action_name}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringactionName As String = actionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{action_name}", localVarPathStringactionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameActionsActionNamePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameActionsActionNamePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsActionNamePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameActionsActionNamePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsActionNamePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameActionsActionNamePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameActionsChangetypePost(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Change Object Type
		  // - parameter objectName: (path) The name of the object. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameActionsChangetypePostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/actions/changetype
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/actions/changetype"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameActionsChangetypePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameActionsChangetypePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsChangetypePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameActionsChangetypePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsChangetypePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameActionsChangetypePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameActionsMergePost(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString, vobjectsObjectNameActionsMergePostRequestInner() As OpenAPIClient.Models.VobjectsObjectNameActionsMergePostRequestInner)
		  // Operation 
		  // Initiate Record Merge
		  // - parameter objectName: (path) The object name__v field value. For example, account__v. This object must have Enable Merges configured. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  // - parameter vobjectsObjectNameActionsMergePostRequestInner: (body)  (optional)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameActionsMergePostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/actions/merge
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  localVarHTTPSocket.SetRequestContent(Xoson.toJSON(vobjectsObjectNameActionsMergePostRequestInner), "application/json")
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/actions/merge"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameActionsMergePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameActionsMergePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsMergePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameActionsMergePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsMergePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameActionsMergePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameActionsRecalculaterollupsGet(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Roll-up Field Recalculation Status
		  // - parameter objectName: (path) The name of the object for which to check the status of a Roll-up field recalculation. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameActionsRecalculaterollupsGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/actions/recalculaterollups
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/actions/recalculaterollups"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameActionsRecalculaterollupsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameActionsRecalculaterollupsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsRecalculaterollupsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameActionsRecalculaterollupsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsRecalculaterollupsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameActionsRecalculaterollupsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameActionsRecalculaterollupsPost(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Recalculate Roll-up Fields
		  // - parameter objectName: (path) The name of the object for which to check the status of a Roll-up field recalculation. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameActionsRecalculaterollupsPostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/actions/recalculaterollups
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/actions/recalculaterollups"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameActionsRecalculaterollupsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameActionsRecalculaterollupsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsRecalculaterollupsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameActionsRecalculaterollupsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsRecalculaterollupsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameActionsRecalculaterollupsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameActionsUpdatecorporatecurrencyPut(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Corporate Currency Fields
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameActionsUpdatecorporatecurrencyPutCallback() on completion. 
		  //
		  // - PUT /vobjects/{object_name}/actions/updatecorporatecurrency
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/actions/updatecorporatecurrency"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameActionsUpdatecorporatecurrencyPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameActionsUpdatecorporatecurrencyPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsUpdatecorporatecurrencyPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameActionsUpdatecorporatecurrencyPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameActionsUpdatecorporatecurrencyPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameActionsUpdatecorporatecurrencyPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameAttachmentsBatchDelete(, objectName As String, Optional idParam As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Multiple Object Record Attachments
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter idParam: (query)  (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameAttachmentsBatchDeleteCallback() on completion. 
		  //
		  // - DELETE /vobjects/{object_name}/attachments/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If idParam <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("idParam") + "=" + EncodeURLComponent(idParam)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/attachments/batch"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameAttachmentsBatchDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameAttachmentsBatchDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameAttachmentsBatchDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameAttachmentsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameAttachmentsBatchDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameAttachmentsBatchDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameAttachmentsBatchPost(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Multiple Object Record Attachments
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameAttachmentsBatchPostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/attachments/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/attachments/batch"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameAttachmentsBatchPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameAttachmentsBatchPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameAttachmentsBatchPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameAttachmentsBatchPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameAttachmentsBatchPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameAttachmentsBatchPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameAttachmentsBatchPut(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Multiple Object Record Attachment Descriptions
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameAttachmentsBatchPutCallback() on completion. 
		  //
		  // - PUT /vobjects/{object_name}/attachments/batch
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/attachments/batch"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameAttachmentsBatchPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameAttachmentsBatchPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameAttachmentsBatchPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameAttachmentsBatchPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameAttachmentsBatchPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameAttachmentsBatchPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameDelete(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Object Records
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header) Can be text/csv or application/json (optional, default to Sample)
		  // - parameter accept: (header) Can be text/csv or application/json (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameDeleteCallback() on completion. 
		  //
		  // - DELETE /vobjects/{object_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameIdRolesRoleNameGet(, objectName As String, id As String, roleName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Object Record Roles
		  // - parameter objectName: (path) The object name. 
		  // - parameter id: (path) The id of the document, binder, or object record. 
		  // - parameter roleName: (path) Optional: Include a role name to filter for a specific role. For example, owner__v. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameIdRolesRoleNameGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{id}/roles/{role_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{id}/roles/{role_name}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringid As String = id
		  
		  localVarPath = localVarPath.ReplaceAllB("{id}", localVarPathStringid)
		  Dim localVarPathStringroleName As String = roleName
		  
		  localVarPath = localVarPath.ReplaceAllB("{role_name}", localVarPathStringroleName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameIdRolesRoleNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameIdRolesRoleNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameIdRolesRoleNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameIdRolesRoleNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameIdRolesRoleNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameIdRolesRoleNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdActionsActionNameGet(, objectName As String, objectRecordId As String, actionName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Object User Actions Details
		  // - parameter objectName: (path) The object name__v field value. 
		  // - parameter objectRecordId: (path) The object record id field value from which to retrieve user actions. 
		  // - parameter actionName: (path) The name of the Objectaction or Objectlifecyclestateuseraction to initiate. You can retrieve this from the Retrieve User Actions request. The format for action_name is Objectaction.vobject.action or Objectlifecyclestateuseraction.vobject.state.action. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdActionsActionNameGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}/actions/{action_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/actions/{action_name}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringactionName As String = actionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{action_name}", localVarPathStringactionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdActionsActionNameGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdActionsActionNameGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdActionsActionNameGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdActionsActionNameGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdActionsActionNameGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdActionsActionNameGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdActionsActionNamePost(, objectName As String, objectRecordId As String, actionName As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Initiate Object Action on a Single Record
		  // - parameter objectName: (path) The object name__v field value. 
		  // - parameter objectRecordId: (path) The object record id field value from which to retrieve user actions. 
		  // - parameter actionName: (path) The name of the Objectaction or Objectlifecyclestateuseraction to initiate. You can retrieve this from the Retrieve User Actions request. The format for action_name is Objectaction.vobject.action or Objectlifecyclestateuseraction.vobject.state.action. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdActionsActionNamePostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/{object_record_id}/actions/{action_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/actions/{action_name}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringactionName As String = actionName
		  
		  localVarPath = localVarPath.ReplaceAllB("{action_name}", localVarPathStringactionName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdActionsActionNamePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdActionsActionNamePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdActionsActionNamePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdActionsActionNamePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdActionsActionNamePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdActionsActionNamePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdActionsCascadedeletePost(, objectName As String, objectRecordId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Cascade Delete Object Record
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdActionsCascadedeletePostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/{object_record_id}/actions/cascadedelete
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/actions/cascadedelete"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdActionsCascadedeletePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdActionsCascadedeletePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdActionsCascadedeletePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdActionsCascadedeletePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdActionsCascadedeletePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdActionsCascadedeletePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdActionsDeepcopyPost(, objectName As String, objectRecordId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Deep Copy Object Record
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdActionsDeepcopyPostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/{object_record_id}/actions/deepcopy
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/actions/deepcopy"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdActionsDeepcopyPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdActionsDeepcopyPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdActionsDeepcopyPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdActionsDeepcopyPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdActionsDeepcopyPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdActionsDeepcopyPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdActionsGet(, objectName As String, objectRecordId As String, Optional loc As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Object Record User Actions
		  // - parameter objectName: (path) The object name__v field value. 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter loc: (query) Optional: When true, retrieves localized (translated) strings for the label.  (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdActionsGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}/actions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If loc <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("loc") + "=" + EncodeURLComponent(loc.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/actions"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdActionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdActionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdActionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdActionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdActionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdActionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGet(, objectName As String, objectRecordId As String, attachmentFieldName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Attachment Field File
		  // - parameter objectName: (path) The object name__v field value. For example, product__v. 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter attachmentFieldName: (path) The name of the Attachment field to update. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}/attachment_fields/{attachment_field_name}/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachment_fields/{attachment_field_name}/file"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringattachmentFieldName As String = attachmentFieldName
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_field_name}", localVarPathStringattachmentFieldName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePost(, objectName As String, objectRecordId As String, attachmentFieldName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Attachment Field File
		  // - parameter objectName: (path) The object name__v field value. For example, product__v. 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter attachmentFieldName: (path) The name of the Attachment field to update. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/{object_record_id}/attachment_fields/{attachment_field_name}/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachment_fields/{attachment_field_name}/file"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringattachmentFieldName As String = attachmentFieldName
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_field_name}", localVarPathStringattachmentFieldName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentFieldsFileGet(, objectName As String, objectRecordId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download All Attachment Field Files
		  // - parameter objectName: (path) The object name__v field value. For example, product__v. 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentFieldsFileGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}/attachment_fields/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachment_fields/file"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentFieldsFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentFieldsFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentFieldsFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentFieldsFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentFieldsFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentFieldsFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDelete(, objectName As String, objectRecordId As String, attachmentId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Object Record Attachment
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDeleteCallback() on completion. 
		  //
		  // - DELETE /vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGet(, objectName As String, objectRecordId As String, attachmentId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Object Record Attachment Metadata
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPut(, objectName As String, objectRecordId As String, attachmentId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Object Record Attachment Description
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPutCallback() on completion. 
		  //
		  // - PUT /vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete(, objectName As String, objectRecordId As String, attachmentId As String, attachmentVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Delete Object Record Attachment Version
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter attachmentVersion: (path) The attachment version__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDeleteCallback() on completion. 
		  //
		  // - DELETE /vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  Dim localVarPathStringattachmentVersion As String = attachmentVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_version}", localVarPathStringattachmentVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet(, objectName As String, objectRecordId As String, attachmentId As String, attachmentVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download Object Record Attachment File
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter attachmentVersion: (path)  
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}/file"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  Dim localVarPathStringattachmentVersion As String = attachmentVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_version}", localVarPathStringattachmentVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGet(, objectName As String, objectRecordId As String, attachmentId As String, attachmentVersion As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Object Record Attachment Version Metadata
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter attachmentVersion: (path) The attachment version__v field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  Dim localVarPathStringattachmentVersion As String = attachmentVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_version}", localVarPathStringattachmentVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPost(, objectName As String, objectRecordId As String, attachmentId As String, attachmentVersion As String, Optional restore As Xoson.O.OptionalBoolean, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Restore Object Record Attachment Version
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter attachmentVersion: (path) The attachment version__v field value. 
		  // - parameter restore: (query)  (optional, default to False)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If restore <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("restore") + "=" + EncodeURLComponent(restore.ToString)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  Dim localVarPathStringattachmentVersion As String = attachmentVersion
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_version}", localVarPathStringattachmentVersion)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGet(, objectName As String, objectRecordId As String, attachmentId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Object Record Attachment Versions
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter attachmentId: (path) The attachment id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  Dim localVarPathStringattachmentId As String = attachmentId
		  
		  localVarPath = localVarPath.ReplaceAllB("{attachment_id}", localVarPathStringattachmentId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentsFileGet(, objectName As String, objectRecordId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Download All Object Record Attachment Files
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsFileGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}/attachments/file
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachments/file"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsFileGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsFileGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsFileGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsFileGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsFileGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsFileGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentsGet(, objectName As String, objectRecordId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Object Record Attachments
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}/attachments
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachments"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAttachmentsPost(, objectName As String, objectRecordId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create Object Record Attachment
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsPostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/{object_record_id}/attachments
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/attachments"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAttachmentsPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAttachmentsPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAttachmentsPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdAudittrailGet(, objectName As String, objectRecordId As String, Optional startDate As Xoson.O.OptionalString, Optional endDate As Xoson.O.OptionalString, Optional formatResult As Xoson.O.OptionalString, Optional limit As Xoson.O.OptionalString, Optional offset As Xoson.O.OptionalString, Optional events As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Complete Audit History for a Single Object Record
		  // - parameter objectName: (path) The object name__v field value. 
		  // - parameter objectRecordId: (path) The object record id field value from which to retrieve user actions. 
		  // - parameter startDate: (query) Specify a start date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to the vVault’s creation date.  (optional, default to Sample)
		  // - parameter endDate: (query) Specify an end date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to today’s date.  (optional, default to Sample)
		  // - parameter formatResult: (query) To request a CSV file of your audit history, use csv.  (optional, default to Sample)
		  // - parameter limit: (query) Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200. (optional, default to Sample)
		  // - parameter offset: (query) Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset&#x3D;51. If omitted, defaults to 0. (optional, default to Sample)
		  // - parameter events: (query) Provide a comma-separated list of one or more audit events to retrieve their audit history. See Vault Help for a full list of object audit events. The values passed to this parameter are case sensitive. For example, events&#x3D;Copy,Edit,Delete. If omitted, defaults to all audit events. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdAudittrailGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}/audittrail
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If startDate <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("start_date") + "=" + EncodeURLComponent(startDate)
		  
		  If endDate <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("end_date") + "=" + EncodeURLComponent(endDate)
		  
		  If formatResult <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("format_result") + "=" + EncodeURLComponent(formatResult)
		  
		  If limit <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("limit") + "=" + EncodeURLComponent(limit)
		  
		  If offset <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("offset") + "=" + EncodeURLComponent(offset)
		  
		  If events <> nil Then localVarQueryParams = localVarQueryParams + "&" + EncodeURLComponent("events") + "=" + EncodeURLComponent(events)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}/audittrail"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdAudittrailGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdAudittrailGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAudittrailGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAudittrailGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdAudittrailGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdAudittrailGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameObjectRecordIdGet(, objectName As String, objectRecordId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Object Record
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter objectRecordId: (path) The object record id field value. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameObjectRecordIdGetCallback() on completion. 
		  //
		  // - GET /vobjects/{object_name}/{object_record_id}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/{object_record_id}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  Dim localVarPathStringobjectRecordId As String = objectRecordId
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_record_id}", localVarPathStringobjectRecordId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameObjectRecordIdGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameObjectRecordIdGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameObjectRecordIdGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameObjectRecordIdGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameObjectRecordIdGetCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNamePost(, objectName As String, Optional idParam As Xoson.O.OptionalString, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIMigrationMode As Xoson.O.OptionalBoolean, Optional xVaultAPINoTriggers As Xoson.O.OptionalBoolean, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Create & Upsert Object Records
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter idParam: (query) To upsert object records, add &#x60;idParam&#x3D;{field_name}&#x60; to the request endpoint. You can use any object field which has &#x60;unique&#x60; set to &#x60;true&#x60; in the object metadata. For example, &#x60;idParam&#x3D;external_id__v&#x60;. (optional, default to Sample)
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header) Can be text/csv or application/json (optional, default to Sample)
		  // - parameter accept: (header) Can be text/csv or application/json (optional, default to Sample)
		  // - parameter xVaultAPIMigrationMode: (header) If set to &#x60;true&#x60;, Vault allows you to create or update object records in a noninitial state and with minimal validation, create inactive records, and set standard and system-managed fields such as &#x60;created_by__v&#x60;. Does not bypass record triggers. Use the &#x60;X-VaultAPI-NoTriggers&#x60; header to bypass all standard and custom SDK triggers. You must have the Record Migration permission to use this header. (optional, default to False)
		  // - parameter xVaultAPINoTriggers: (header) If set to &#x60;true&#x60; and Record Migration Mode is enabled, it bypasses all standard and custom SDK triggers. (optional, default to False)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNamePostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  Dim localVarQueryParams As String = "?"
		  If idParam <> nil Then localVarQueryParams = localVarQueryParams + EncodeURLComponent("idParam") + "=" + EncodeURLComponent(idParam)
		  
		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIMigrationMode <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-MigrationMode"), EncodeURLComponent(xVaultAPIMigrationMode.ToString))
		  		  If xVaultAPINoTriggers <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-NoTriggers"), EncodeURLComponent(xVaultAPINoTriggers.ToString))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNamePost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNamePost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath + localVarQueryParams)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNamePost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNamePostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNamePost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNamePostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNamePut(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIMigrationMode As Xoson.O.OptionalBoolean, Optional xVaultAPINoTriggers As Xoson.O.OptionalBoolean, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Update Object Records
		  // - parameter objectName: (path) The object name__v field value (product__v, country__v, custom_object__c, etc.). 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter contentType: (header) Can be text/csv or application/json (optional, default to Sample)
		  // - parameter accept: (header) Can be text/csv or application/json (optional, default to Sample)
		  // - parameter xVaultAPIMigrationMode: (header) If set to &#x60;true&#x60;, Vault allows you to update object records in a noninitial state and with minimal validation, create inactive records, and set standard and system-managed fields such as &#x60;created_by__v&#x60;. Does not bypass record triggers. Use the &#x60;X-VaultAPI-NoTriggers&#x60; header to bypass all standard and custom SDK triggers. You must have the Record Migration permission to use this header. (optional, default to False)
		  // - parameter xVaultAPINoTriggers: (header) If set to &#x60;true&#x60; and Record Migration Mode is enabled, it bypasses all standard and custom SDK triggers. (optional, default to False)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNamePutCallback() on completion. 
		  //
		  // - PUT /vobjects/{object_name}
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIMigrationMode <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-MigrationMode"), EncodeURLComponent(xVaultAPIMigrationMode.ToString))
		  		  If xVaultAPINoTriggers <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-NoTriggers"), EncodeURLComponent(xVaultAPINoTriggers.ToString))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNamePut_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNamePut_error
		  
		  localVarHTTPSocket.SendRequest("PUT", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNamePut_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNamePutCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNamePut_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNamePutCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameRolesDelete(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Remove Users & Groups from Roles on Object Records
		  // - parameter objectName: (path) The name of the object where you want to remove roles. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameRolesDeleteCallback() on completion. 
		  //
		  // - DELETE /vobjects/{object_name}/roles
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/roles"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameRolesDelete_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameRolesDelete_error
		  
		  localVarHTTPSocket.SendRequest("DELETE", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameRolesDelete_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameRolesDeleteCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameRolesDelete_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameRolesDeleteCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsObjectNameRolesPost(, objectName As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional contentType As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Assign Users & Groups to Roles on Object Records
		  // - parameter objectName: (path) The name of the object where you want to remove roles. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter contentType: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsObjectNameRolesPostCallback() on completion. 
		  //
		  // - POST /vobjects/{object_name}/roles
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If contentType <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Content-Type"), EncodeURLComponent(contentType))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/{object_name}/roles"
		  
		  Dim localVarPathStringobjectName As String = objectName
		  
		  localVarPath = localVarPath.ReplaceAllB("{object_name}", localVarPathStringobjectName)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsObjectNameRolesPost_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsObjectNameRolesPost_error
		  
		  localVarHTTPSocket.SendRequest("POST", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameRolesPost_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsObjectNameRolesPostCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsObjectNameRolesPost_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsObjectNameRolesPostCallback(error)
		End Sub
	#tag EndMethod




	#tag Method, Flags = &h0
		Sub VobjectsOutboundPackageVPackageIdDependenciesGet(, packageId As String, Optional authorization As Xoson.O.OptionalString, Optional accept As Xoson.O.OptionalString, Optional xVaultAPIClientID As Xoson.O.OptionalString)
		  // Operation 
		  // Retrieve Outbound Package Dependencies
		  // - parameter packageId: (path) The ID of the outbound_package__v record from which to retrieve dependencies. 
		  // - parameter authorization: (header)  (optional, default to Sample)
		  // - parameter accept: (header)  (optional, default to Sample)
		  // - parameter xVaultAPIClientID: (header) Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin &gt; Logs &gt; API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as &#x60;unknown&#x60; in the API Usage Log. (optional, default to Sample)
		  //
		  // Invokes DefaultApiCallbackHandler.VobjectsOutboundPackageVPackageIdDependenciesGetCallback() on completion. 
		  //
		  // - GET /vobjects/outbound_package__v/{package_id}/dependencies
		  //
		  //
		  
		  Dim localVarHTTPSocket As New HTTPSecureSocket
		  Me.PrivateFuncPrepareSocket(localVarHTTPSocket)
		  
		  		  If authorization <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Authorization"), EncodeURLComponent(authorization))
		  		  If accept <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("Accept"), EncodeURLComponent(accept))
		  		  If xVaultAPIClientID <> nil Then localVarHTTPSocket.SetRequestHeader(EncodeURLComponent("X-VaultAPI-ClientID"), EncodeURLComponent(xVaultAPIClientID))
		  
		  


		  Dim localVarPath As String = "/vobjects/outbound_package__v/{package_id}/dependencies"
		  
		  Dim localVarPathStringpackageId As String = packageId
		  
		  localVarPath = localVarPath.ReplaceAllB("{package_id}", localVarPathStringpackageId)
		  
		  
		  AddHandler localVarHTTPSocket.PageReceived, addressof Me.VobjectsOutboundPackageVPackageIdDependenciesGet_handler
		  AddHandler localVarHTTPSocket.Error, addressof Me.VobjectsOutboundPackageVPackageIdDependenciesGet_error
		  
		  localVarHTTPSocket.SendRequest("GET", Me.BasePath + localVarPath)
		  if localVarHTTPSocket.LastErrorCode <> 0 then
		    Dim localVarException As New OpenAPIClient.OpenAPIClientException(localVarHTTPSocket.LastErrorCode)
			Raise localVarException
		  end if
		  
		End Sub
	#tag EndMethod


	#tag Method, Flags = &h21
		Private Sub VobjectsOutboundPackageVPackageIdDependenciesGet_error(sender As HTTPSecureSocket, Code As Integer)
		  If sender <> nil Then sender.Close()

		  Dim error As New OpenAPIClient.OpenAPIClientException(Code)
		  CallbackHandler.VobjectsOutboundPackageVPackageIdDependenciesGetCallback(error)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub VobjectsOutboundPackageVPackageIdDependenciesGet_handler(sender As HTTPSecureSocket, URL As String, HTTPStatus As Integer, Headers As InternetHeaders, Content As String)
		  #Pragma Unused URL
		  #Pragma Unused Headers
		  #Pragma Unused Content

		  If sender <> nil Then sender.Close()
		  
		  Dim error As New OpenAPIClient.OpenAPIClientException(HTTPStatus, "", "")
		  
		  
		  
		  CallbackHandler.VobjectsOutboundPackageVPackageIdDependenciesGetCallback(error)
		End Sub
	#tag EndMethod






	#tag Method, Flags = &h21
		Private Function AuthenticationRequired(Realm As String, Headers As InternetHeaders, ByRef Name As String, ByRef Password As String) As Boolean
		  #Pragma Unused Realm
		  #Pragma Unused Headers
		  Name = Me.BasicAuthUser
		  Password = Me.BasicAuthPassword
		  Return True
		End Function
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub PrivateFuncPrepareSocket(socket As HTTPSecureSocket)
		  socket.Secure = Me.useHTTPS
		  socket.ConnectionType = SSLSocket.TLSv12
		  socket.Port = Me.Port
		  socket.RequestHeaders.Delete("Accept")
		  socket.RequestHeaders.AppendHeader("Accept", "text/plain")
		  socket.RequestHeaders.AppendHeader("Accept", "application/json")
		  socket.RequestHeaders.AppendHeader("Content-Type", "application/json")

		  If Me.AdditionalHeaders <> Nil Then
		    For Each HeaderName As Variant In Me.AdditionalHeaders.Keys
		      Dim headerValueS As Variant = additionalHeaders.Value(HeaderName)
		      If headerValueS.IsArray Then
		        If headerValueS.ArrayElementType = Variant.TypeString Then
		          Dim values() As String = headerValueS
		          For Each value As String In values
		            socket.RequestHeaders.AppendHeader(HeaderName, value)
		          Next
		        Else
		          Raise New OpenAPIClient.OpenAPIClientException(kErrorInternal, "AdditionalHeaders only support Strings and String arrays as values.")
		        End If
		      Else
		        socket.RequestHeaders.AppendHeader(HeaderName, headerValueS.StringValue)
		      End If
		    Next
		  End If
		End Sub
	#tag EndMethod



	#tag Property, Flags = &h0
		AdditionalHeaders As Dictionary
	#tag EndProperty

	#tag Property, Flags = &h0
		BasePath As String = "http://}/api/v25.1"
	#tag EndProperty

	#tag Property, Flags = &h0
		BasicAuthPassword As String
	#tag EndProperty

	#tag Property, Flags = &h0
		BasicAuthUser As String
	#tag EndProperty

	#tag Property, Flags = &h0
		CallbackHandler As OpenAPIClient.APIs.DefaultApiCallbackHandler
	#tag EndProperty

	#tag Property, Flags = &h0
		Host As String = ""
	#tag EndProperty

	#tag Property, Flags = &h0
		Port As Integer
	#tag EndProperty

	#tag Property, Flags = &h0
		UseHTTPS As Boolean = true
	#tag EndProperty


	#tag ViewBehavior
		#tag ViewProperty
			Name="Name"
			Visible=true
			Group="ID"
			InitialValue=""
			Type="String"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="Index"
			Visible=true
			Group="ID"
			InitialValue="-2147483648"
			Type="Integer"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="Super"
			Visible=true
			Group="ID"
			InitialValue=""
			Type="String"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="Left"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="Top"
			Visible=true
			Group="Position"
			InitialValue="0"
			Type="Integer"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="BasePath"
			Visible=false
			Group="Behavior"
			InitialValue=""
			Type="String"
			EditorType="MultiLineEditor"
		#tag EndViewProperty
		#tag ViewProperty
			Name="BasicAuthUser"
			Visible=false
			Group="Behavior"
			InitialValue=""
			Type="String"
			EditorType="MultiLineEditor"
		#tag EndViewProperty
		#tag ViewProperty
			Name="BasicAuthPassword"
			Visible=false
			Group="Behavior"
			InitialValue=""
			Type="String"
			EditorType="MultiLineEditor"
		#tag EndViewProperty
		#tag ViewProperty
			Name="UseHTTPS"
			Visible=false
			Group="Behavior"
			InitialValue="true"
			Type="Boolean"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="Port"
			Visible=false
			Group="Behavior"
			InitialValue=""
			Type="Integer"
			EditorType=""
		#tag EndViewProperty
		#tag ViewProperty
			Name="Host"
			Visible=false
			Group="Behavior"
			InitialValue=""
			Type="String"
			EditorType="MultiLineEditor"
		#tag EndViewProperty
	#tag EndViewBehavior
End Class
#tag EndClass
