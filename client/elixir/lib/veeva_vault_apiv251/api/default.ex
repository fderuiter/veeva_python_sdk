# NOTE: This file is auto generated by OpenAPI Generator 7.14.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule VeevaVaultAPIV251.Api.Default do
  @moduledoc """
  API calls for all endpoints tagged `Default`.
  """

  alias VeevaVaultAPIV251.Connection
  import VeevaVaultAPIV251.RequestBuilder

  @doc """
  Retrieve API Versions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec api_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def api_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Content File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `component_type_and_record_name` (String.t): The component type of the record followed by the name of the record from which to retrieve the content file. The format is `{Componenttype}.{record_name}`. For example, `Formattedoutput.my_formatted_output__c`.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec api_mdl_components_component_type_and_record_name_files_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def api_mdl_components_component_type_and_record_name_files_get(connection, component_type_and_record_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/mdl/components/#{component_type_and_record_name}/files")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Component Record (MDL)

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `component_type_and_record_name` (String.t): The component type name (`Picklist`, `Docfield`, `Doctype`, etc.) followed by the name of the record from which to retrieve metadata. The format is `{Componenttype}.{record_name}`. For example, `Picklist.color__c`. Find this with the [Retrieve Component Record Collection](https://developer.veevavault.com/api/24.3#Retrieve_Component_Record_Collection) endpoint.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec api_mdl_components_component_type_and_record_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def api_mdl_components_component_type_and_record_name_get(connection, component_type_and_record_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/mdl/components/#{component_type_and_record_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Asynchronous MDL Script Results

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec api_mdl_execute_async_job_id_results_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def api_mdl_execute_async_job_id_results_get(connection, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/mdl/execute_async/#{job_id}/results")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Execute MDL Script Asynchronously

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec api_mdl_execute_async_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def api_mdl_execute_async_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/api/mdl/execute_async")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Execute MDL Script

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec api_mdl_execute_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def api_mdl_execute_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/api/mdl/execute")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Upload Content File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec api_mdl_files_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def api_mdl_files_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/api/mdl/files")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Audit Details

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `audit_trail_type` (String.t): The name of the specified audit type (document_audit_trail, object_audit_trail, etc). Use the Retrieve Audit Types API to retrieve types available in your Vault. Requests for login_audit_trail only accept one request per user at a time.
  - `opts` (keyword): Optional parameters
    - `:start_date` (String.t): Specify a start date to retrieve audit information. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z. If omitted, defaults to the last 30 days.
    - `:end_date` (String.t): Specify an end date to retrieve audit information. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z. If omitted, defaults to the last 30 days.
    - `:all_dates` (String.t): Set to true to request audit information for all dates. You must leave start_date and end_date blank when requesting an export of a full audit trail.
    - `:format_result` (String.t): To request a downloadable CSV file of your audit details, use csv. The response contains a jobId to retrieve the job status, which contains a link to download the CSV file. If omitted, the API returns a JSON response and does not start a job. If all_dates is true, this parameter is required.
    - `:limit` (String.t): Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200.
    - `:offset` (String.t): Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset=51. If omitted, defaults to 0.
    - `:objects` (String.t): This is an optional parameter when specifying object_audit_trail as the {audit_trail_type}. Provide a comma-separated list of one or more object names to retrieve their audit details. For example, objects=product__v,country__v. If omitted, defaults to all objects.
    - `:events` (String.t): This is an optional parameter when specifying object_audit_trail or document_audit_trail as the {audit_trail_type}. Provide a comma-separated list of one or more audit events to retrieve their audit details. For example, events=Edit,Delete,TaskAssignment. If omitted, defaults to all audit events. See Vault Help for full lists of object audit events and document audit events.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec audittrail_audit_trail_type_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def audittrail_audit_trail_type_get(connection, audit_trail_type, opts \\ []) do
    optional_params = %{
      :start_date => :query,
      :end_date => :query,
      :all_dates => :query,
      :format_result => :query,
      :limit => :query,
      :offset => :query,
      :objects => :query,
      :events => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/audittrail/#{audit_trail_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Authentication Type Discovery

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec auth_discovery_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def auth_discovery_post(connection, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/auth/discovery")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  OAuth 2.0 / OpenID Connect

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `oath_oidc_profile_id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec auth_oauth_session_oath_oidc_profile_id_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def auth_oauth_session_oath_oidc_profile_id_post(connection, oath_oidc_profile_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/auth/oauth/session/#{oath_oidc_profile_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  User Name and Password

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec auth_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def auth_post(connection, opts \\ []) do
    optional_params = %{
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/auth")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Single Source Code File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `class_name` (String.t): The fully qualified class name of your file.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec code_class_name_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def code_class_name_delete(connection, class_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/code/#{class_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Disable Vault Extension

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `class_name` (String.t): The fully qualified class name of your file.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec code_class_name_disable_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def code_class_name_disable_put(connection, class_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/code/#{class_name}/disable")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Enable Vault Extension

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `class_name` (String.t): The fully qualified class name of your file.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec code_class_name_enable_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def code_class_name_enable_put(connection, class_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/code/#{class_name}/enable")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Single Source Code File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `class_name` (String.t): The fully qualified class name of your file.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec code_class_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def code_class_name_get(connection, class_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/code/#{class_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Profiling Sessions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec code_profiler_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def code_profiler_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/code/profiler")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Profiling Session

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec code_profiler_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def code_profiler_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/code/profiler")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  End Profiling Session

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `session_name` (String.t): The name of the session, for example,  baseline__c.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec code_profiler_session_name_actions_end_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def code_profiler_session_name_actions_end_post(connection, session_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/code/profiler/#{session_name}/actions/end")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Profiling Session

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `session_name` (String.t): The name of the session, for example,  baseline__c.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec code_profiler_session_name_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def code_profiler_session_name_delete(connection, session_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/code/profiler/#{session_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Profiling Session

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `session_name` (String.t): The name of the session, for example,  baseline__c.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec code_profiler_session_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def code_profiler_session_name_get(connection, session_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/code/profiler/#{session_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Profiling Session Results

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `session_name` (String.t): The name of the session, for example,  baseline__c.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec code_profiler_session_name_results_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def code_profiler_session_name_results_get(connection, session_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/code/profiler/#{session_name}/results")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Add or Replace Single Source Code File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec code_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def code_put(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/code")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Specific Root Nodes

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `edl_hierarchy_or_template` (String.t): Choose to retrieve either edl_hierarchy__v or edl_template__v
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec composites_trees_edl_hierarchy_or_template_actions_listnodes_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def composites_trees_edl_hierarchy_or_template_actions_listnodes_post(connection, edl_hierarchy_or_template, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/composites/trees/#{edl_hierarchy_or_template}/actions/listnodes")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Root Nodes

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `edl_hierarchy_or_template` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec composites_trees_edl_hierarchy_or_template_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def composites_trees_edl_hierarchy_or_template_get(connection, edl_hierarchy_or_template, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/composites/trees/#{edl_hierarchy_or_template}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve a Node's Children

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `parent_node_id` (String.t): The ID of a parent node in the hierarchy.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec composites_trees_edl_hierarchy_v_parent_node_id_children_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def composites_trees_edl_hierarchy_v_parent_node_id_children_get(connection, parent_node_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/composites/trees/edl_hierarchy__v/#{parent_node_id}/children")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Node Order

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `parent_node_id` (String.t): The ID of a parent node in the hierarchy.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec composites_trees_edl_hierarchy_v_parent_node_id_children_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def composites_trees_edl_hierarchy_v_parent_node_id_children_put(connection, parent_node_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/composites/trees/edl_hierarchy__v/#{parent_node_id}/children")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Component Record (XML/JSON)

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `component_type_and_record_name` (String.t): The component type name (`Picklist`, `Docfield`, `Doctype`, etc.) followed by the name of the record from which to retrieve metadata. The format is `{Componenttype}.{record_name}`. For example, `Picklist.color__c`. Find this with the [Retrieve Component Record Collection](https://developer.veevavault.com/api/24.3#Retrieve_Component_Record_Collection) endpoint.
  - `opts` (keyword): Optional parameters
    - `:loc` (String.t): When localized (translated) strings are available, retrieve them by setting loc to true.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec configuration_component_type_and_record_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def configuration_component_type_and_record_name_get(connection, component_type_and_record_name, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/configuration/#{component_type_and_record_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Component Record Collection

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `component_type` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec configuration_component_type_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def configuration_component_type_get(connection, component_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/configuration/#{component_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Details from a Specific Object

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name_and_object_type` (String.t): The object name followed by the object type in the format `Objecttype.{object_name}.{object_type}`. For example, `Objecttype.product__v.base__v`.
  - `opts` (keyword): Optional parameters
    - `:loc` (String.t): When localized (translated) strings are available, retrieve them by setting loc to true.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec configuration_object_name_and_object_type_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def configuration_object_name_and_object_type_get(connection, object_name_and_object_type, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/configuration/#{object_name_and_object_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Details from All Object Types

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec configuration_objecttype_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def configuration_objecttype_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/configuration/Objecttype")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Lifecycle Role Assignment Override Rules

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec configuration_role_assignment_rule_delete(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def configuration_role_assignment_rule_delete(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/configuration/role_assignment_rule")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Lifecycle Role Assignment Rules (Default & Override)

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:lifecycle__v` (String.t): Include the name of the lifecycle from which to retrieve information. For example: lifecycle_v=general_lifecycle__c
    - `:role__v` (String.t): Include the name of the role from which to retrieve information. For example: role__v=editor__c
    - `:product__v` (String.t): Include the ID/name of a specific product to see product-based override rules to default users/allowed users for the lifecycle role. For example: product__v=0PR0011001 or product__v.name__v=CholeCap
    - `:country__v` (String.t): Include the ID/name of a specific country to see country-based override rules to default users/allowed users for the lifecycle role. For example: country__v=0CR0022002 or country__v.name__v=United States
    - `:study__v` (String.t): In eTMF Vaults only. Include the ID/name of a specific study to see study-based override rules to default users/allowed users for the lifecycle role. For example: study__v=0ST0021J01 or study__v.name__v=CholeCap Study
    - `:study_country__v` (String.t): In eTMF Vaults only. Include the ID/name of a specific study country to see study country-based override rules to default users/allowed users for the lifecycle role. For example: study_country__v=0SC0001001 or study_country__v.name__v=Germany
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec configuration_role_assignment_rule_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def configuration_role_assignment_rule_get(connection, opts \\ []) do
    optional_params = %{
      :lifecycle__v => :query,
      :role__v => :query,
      :product__v => :query,
      :country__v => :query,
      :study__v => :query,
      :study_country__v => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/configuration/role_assignment_rule")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Lifecycle Role Assignment Override Rules

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec configuration_role_assignment_rule_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def configuration_role_assignment_rule_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/configuration/role_assignment_rule")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Lifecycle Role Assignment Rules (Default & Override)

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec configuration_role_assignment_rule_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def configuration_role_assignment_rule_put(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/configuration/role_assignment_rule")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Delegated Session

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): The sessionId of the currently authenticated user who will initiate the delegated session. Cannot be a delegated_sessionid.
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec delegation_login_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def delegation_login_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/delegation/login")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Delegations

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec delegation_vaults_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def delegation_vaults_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/delegation/vaults")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Session Keep Alive

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec keep_alive_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def keep_alive_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/keep-alive")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Limits on Objects

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec limits_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def limits_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/limits")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Daily API Usage

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:date` (String.t): The day to retrieve the API Usage log. Date is in UTC and follows the format YYYY-MM-DD. Date cannot be more than 30 days in the past.
    - `:log_format` (String.t): Optional: Specify the format to download. Possible values are csv or logfile. If omitted, defaults to csv. Note that this call always downloads a ZIP file. This parameter only changes the format of the file contained within the ZIP. 
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec logs_api_usage_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def logs_api_usage_get(connection, opts \\ []) do
    optional_params = %{
      :date => :query,
      :log_format => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/logs/api_usage")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Debug Logs

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:user_id` (String.t): Filter results to retrieve the debug log for this user ID only. If omitted, this request retrieves debug logs for all users in the Vault.
    - `:include_inactive` (boolean()): Set to `true` to include debug log sessions with a status of `inactive__sys` in the response. If omitted, defaults to `false` and inactive sessions are not included in the response.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec logs_code_debug_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def logs_code_debug_get(connection, opts \\ []) do
    optional_params = %{
      :user_id => :query,
      :include_inactive => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/logs/code/debug")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Debug Log

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The ID of the debug log to delete.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec logs_code_debug_id_actions_reset_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def logs_code_debug_id_actions_reset_delete(connection, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/logs/code/debug/#{id}/actions/reset")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Reset Debug Log

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The ID of the debug log to delete.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec logs_code_debug_id_actions_reset_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def logs_code_debug_id_actions_reset_post(connection, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/logs/code/debug/#{id}/actions/reset")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Debug Log Files

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The ID of the debug log to download.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec logs_code_debug_id_files_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def logs_code_debug_id_files_get(connection, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/logs/code/debug/#{id}/files")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Single Debug Log

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The ID of the debug log to retrieve.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec logs_code_debug_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def logs_code_debug_id_get(connection, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/logs/code/debug/#{id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Debug Log

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec logs_code_debug_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def logs_code_debug_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/logs/code/debug")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download SDK Runtime Log

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:date` (String.t): 
    - `:log_format` (String.t): Optional: Specify the format to download. Possible values are csv or logfile. If omitted, defaults to csv. Note that this call always downloads a ZIP file. This parameter only changes the format of the file contained within the ZIP. 
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec logs_code_runtime_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def logs_code_runtime_get(connection, opts \\ []) do
    optional_params = %{
      :date => :query,
      :log_format => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/logs/code/runtime")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Import Bulk Translation File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `message_type` (String.t): The message type name: field_labels__sys, system_messages__sys, notification_template_messages__sys, or user_account_messages__sys.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec messages_message_type_actions_import_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def messages_message_type_actions_import_post(connection, message_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/messages/#{message_type}/actions/import")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Export Bulk Translation File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `message_type` (String.t): The message type name: field_labels__sys, system_messages__sys, notification_template_messages__sys, or user_account_messages__sys.
  - `lang` (String.t): A valid language code value, for example, en. Retrieve available values from the Admin Key (admin_key__sys) field on the Language (language__sys) object. Active and Inactive languages are both valid. 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec messages_message_type_language_lang_actions_export_post(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def messages_message_type_language_lang_actions_export_post(connection, message_type, lang, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/messages/#{message_type}/language/#{lang}/actions/export")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Audit Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `audit_trail_type` (String.t): The name of the specified audit type (document_audit_trail, object_audit_trail, etc).
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_audittrail_audit_trail_type_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_audittrail_audit_trail_type_get(connection, audit_trail_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/audittrail/#{audit_trail_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Audit Types

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_audittrail_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_audittrail_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/audittrail")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Component Type Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `component_type` (String.t): The component type name (Picklist, Docfield, Doctype, etc.).
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_components_component_type_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_components_component_type_get(connection, component_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/components/#{component_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Component Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_components_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_components_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/components")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder Template Node Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_binders_templates_bindernodes_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_binders_templates_bindernodes_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/binders/templates/bindernodes")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder Template Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_binders_templates_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_binders_templates_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/binders/templates")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Annotation Placemark Type Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `placemark_type` (String.t): The name of the placemark type. For example, sticky__sys.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_annotations_placemarks_types_placemark_type_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_annotations_placemarks_types_placemark_type_get(connection, placemark_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/annotations/placemarks/types/#{placemark_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Annotation Reference Type Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `reference_type` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_annotations_references_types_reference_type_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_annotations_references_types_reference_type_get(connection, reference_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/annotations/references/types/#{reference_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Annotation Type Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `annotation_type` (String.t): The name of the annotation type. Valid annotation types include: `note__sys` `line__sys` `document_link__sys` `permalink_link__sys` `anchor__sys` `reply__sys` `external_link__sys`  The following annotation types are only valid in Medical and PromoMats Vaults:  `suggested_link__sys` `approved_link__sys` `auto_link__sys` `keyword_link__sys`
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_annotations_types_annotation_type_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_annotations_types_annotation_type_get(connection, annotation_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/annotations/types/#{annotation_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Event SubType Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `event_type` (String.t): The event type. For example, distribution__v.
  - `event_subtype` (String.t): The event subtype. For example, approved_email__v.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_events_event_type_types_event_subtype_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_events_event_type_types_event_subtype_get(connection, event_type, event_subtype, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/events/#{event_type}/types/#{event_subtype}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Event Types and Subtypes

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_events_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_events_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/events")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Lock Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_lock_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_lock_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/lock")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Common Document Fields

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_properties_find_common_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_properties_find_common_post(connection, opts \\ []) do
    optional_params = %{
      :"Content-Type" => :headers,
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/metadata/objects/documents/properties/find_common")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Document Fields

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_properties_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_properties_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/properties")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Template Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_templates_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_templates_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/templates")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Document Types

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_types_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_types_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/types")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Type

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `type` (String.t): The document type. See Retrieve Document Types.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_types_type_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_types_type_get(connection, type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/types/#{type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Type Relationships

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `type` (String.t): The document type. See Retrieve Document Types.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_types_type_relationships_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_types_type_relationships_get(connection, type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/types/#{type}/relationships")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Classification

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `type` (String.t): The document type. See Retrieve Document Types.
  - `subtype` (String.t): The document subtype. See Retrieve Document Types.
  - `classification` (String.t): The document classification. See Retrieve Document Types.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get(connection, type, subtype, classification, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/types/#{type}/subtypes/#{subtype}/classifications/#{classification}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Subtype

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `type` (String.t): The document type. See Retrieve Document Types.
  - `subtype` (String.t): The document subtype. See Retrieve Document Types.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_documents_types_type_subtypes_subtype_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_documents_types_type_subtypes_subtype_get(connection, type, subtype, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/documents/types/#{type}/subtypes/#{subtype}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Group Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_groups_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_groups_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/groups")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Security Policy Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_securitypolicies_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_securitypolicies_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/securitypolicies")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve User Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_objects_users_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_objects_users_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/objects/users")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Archived Document Signature Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_query_archived_documents_relationships_document_signature_sysr_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_query_archived_documents_relationships_document_signature_sysr_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/query/archived_documents/relationships/document_signature__sysr")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Signature Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_query_documents_relationships_document_signature_sysr_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_query_documents_relationships_document_signature_sysr_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/query/documents/relationships/document_signature__sysr")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Object Collection

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:loc` (boolean()): To retrieve localized (translated) strings, include the parameter loc=true. See the next request below for details.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_vobjects_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_vobjects_get(connection, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/vobjects")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Cancel Raw Object Deployment

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_vobjects_object_name_actions_canceldeployment_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_vobjects_object_name_actions_canceldeployment_post(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/metadata/vobjects/#{object_name}/actions/canceldeployment")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Object Field Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_field_name` (String.t): The object field name value (id, name__v, external_id__v, etc.).
  - `opts` (keyword): Optional parameters
    - `:loc` (boolean()): To retrieve localized (translated) strings, include the parameter loc=true. See the next request below for details.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_vobjects_object_name_fields_object_field_name_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_vobjects_object_name_fields_object_field_name_get(connection, object_name, object_field_name, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/vobjects/#{object_name}/fields/#{object_field_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Object Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `opts` (keyword): Optional parameters
    - `:loc` (boolean()): To retrieve localized (translated) strings, include the parameter loc=true. See the next request below for details.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_vobjects_object_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_vobjects_object_name_get(connection, object_name, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/vobjects/#{object_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Page Layouts

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_vobjects_object_name_page_layouts_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_vobjects_object_name_page_layouts_get(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/vobjects/#{object_name}/page_layouts")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Page Layout Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The name of the object from which to retrieve page layout metadata.
  - `layout_name` (String.t): The name of the page layout from which to retrieve metadata.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec metadata_vobjects_object_name_page_layouts_layout_name_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def metadata_vobjects_object_name_page_layouts_layout_name_get(connection, object_name, layout_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/metadata/vobjects/#{object_name}/page_layouts/#{layout_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Email Notification Histories

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:start_date` (String.t): Specify a start date to retrieve notification history. This date cannot be more than 2 years ago. Dates must be in YYYY-MM-DD or YYYY-MM-DDTHH:mm:ssZ format. If time is omitted (THH:mm:ssZ), defaults to the start of the day. If start_date is omitted entirely, defaults to the start of the previous day. If you’ve specified a start_date, you must also specify an end_date.
    - `:end_date` (String.t): Specify an end date to retrieve notification history. This date cannot be more than 30 days away from the specified start_date. Dates must be in YYYY-MM-DD or YYYY-MM-DDTHH:mm:ssZ format. If time is omitted (THH:mm:ssZ), defaults to the time of the API request. If you’ve specified an end_date, you must also specify a start_date.
    - `:all_dates` (boolean()): Set to true to request notification history for all dates. This is the same as requesting a full CSV export from the Vault UI. When requesting a full notification history, you must leave start_date and end_date blank and set format_result to csv. You can request an export of notification history for all_dates once every 24 hours.
    - `:format_result` (String.t): To request a downloadable CSV file of your notification history, set this parameter to csv. The response contains a jobId to retrieve the job status, which provides a link to download the CSV file. If omitted, the API returns a JSON response with notification history and does not start a job. If all_dates is true, this parameter must be csv.
    - `:limit` (String.t): Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200.
    - `:offset` (String.t): Paginate the results displayed per page by specifying the amount of offset from the entry returned. If omitted, defaults to 0.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec notifications_histories_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def notifications_histories_get(connection, opts \\ []) do
    optional_params = %{
      :start_date => :query,
      :end_date => :query,
      :all_dates => :query,
      :format_result => :query,
      :limit => :query,
      :offset => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/notifications/histories")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Bulk Workflow Action Details

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `action` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec object_workflow_actions_action_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def object_workflow_actions_action_get(connection, action, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/object/workflow/actions/#{action}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Workflow Actions on Multiple Workflows

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `action` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec object_workflow_actions_action_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def object_workflow_actions_action_post(connection, action, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/object/workflow/actions/#{action}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Cancel Workflow Tasks

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec object_workflow_actions_canceltasks_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def object_workflow_actions_canceltasks_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/object/workflow/actions/canceltasks")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Cancel Workflows

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec object_workflow_actions_cancelworkflows_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def object_workflow_actions_cancelworkflows_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/object/workflow/actions/cancelworkflows")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Bulk Workflow Actions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec object_workflow_actions_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def object_workflow_actions_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/object/workflow/actions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Reassign Workflow Tasks

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec object_workflow_actions_reassigntasks_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def object_workflow_actions_reassigntasks_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/object/workflow/actions/reassigntasks")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Replace Workflow Owner

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec object_workflow_actions_replaceworkflowowner_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def object_workflow_actions_replaceworkflowowner_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/object/workflow/actions/replaceworkflowowner")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder Export Results

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The id value of the requested export job. This is returned with the export binder requests above.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_actions_export_job_id_results_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_actions_export_job_id_results_get(connection, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/actions/export/#{job_id}/results")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Export Binder (Latest Version)

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `opts` (keyword): Optional parameters
    - `:source` (boolean()): to include source content or not
    - `:renditiontype` (String.t): to include viewable renditions
    - `:docversion` (String.t): to include all major versions
    - `:attachments` (String.t): to include all versions of attachments
    - `:export` (String.t): configurable filename metadata
    - `:docfield` (boolean()): to exclude document metadata csv
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_actions_export_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_actions_export_post(connection, binder_id, opts \\ []) do
    optional_params = %{
      :source => :query,
      :renditiontype => :query,
      :docversion => :query,
      :attachments => :query,
      :export => :query,
      :docfield => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders/#{binder_id}/actions/export")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Refresh Binder Auto-Filing

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_actions_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_actions_post(connection, binder_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders/#{binder_id}/actions")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Binding Rule

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `opts` (keyword): Optional parameters
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_binding_rule_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_binding_rule_put(connection, binder_id, opts \\ []) do
    optional_params = %{
      :"Content-Type" => :headers,
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/binders/#{binder_id}/binding_rule")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Binder

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_delete(connection, binder_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/binders/#{binder_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Binder Document Binding Rule

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `node_id` (String.t): The binder node id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_documents_node_id_binding_rule_put(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_documents_node_id_binding_rule_put(connection, binder_id, node_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/binders/#{binder_id}/documents/#{node_id}/binding_rule")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Add Document to Binder

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_documents_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_documents_post(connection, binder_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders/#{binder_id}/documents")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Remove Document from Binder

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `section_id` (String.t): The binder node id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_documents_section_id_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_documents_section_id_delete(connection, binder_id, section_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/binders/#{binder_id}/documents/#{section_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Move Document in Binder

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `section_id` (String.t): The binder node id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_documents_section_id_put(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_documents_section_id_put(connection, binder_id, section_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/binders/#{binder_id}/documents/#{section_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `opts` (keyword): Optional parameters
    - `:depth` (String.t): To retrieve all information in all levels of the binder, set this to all. By default, only one level is returned.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_get(connection, binder_id, opts \\ []) do
    optional_params = %{
      :depth => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/#{binder_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Binder Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_post(connection, binder_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders/#{binder_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Binder

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_put(connection, binder_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/binders/#{binder_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Remove Users & Groups from Roles on a Single Binder

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The id value of the binder from which to remove roles.
  - `role_name_and_user_or_group` (String.t): The name of the role from which to remove the user or group followed by either `user` or `group`. The format is `{role_name}.{user_or_group}`. For example, `consumer__v.user`.
  - `id` (String.t): The id value of the user or group to remove from the role.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete(connection, binder_id, role_name_and_user_or_group, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/binders/#{binder_id}/roles/#{role_name_and_user_or_group}/#{id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Binder Section Binding Rule

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `node_id` (String.t): The binder node id field value.
  - `opts` (keyword): Optional parameters
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_sections_node_id_binding_rule_put(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_sections_node_id_binding_rule_put(connection, binder_id, node_id, opts \\ []) do
    optional_params = %{
      :"Content-Type" => :headers,
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/binders/#{binder_id}/sections/#{node_id}/binding_rule")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Binder Section

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `node_id` (String.t): The binder node id of the section.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_sections_node_id_put(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_sections_node_id_put(connection, binder_id, node_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/binders/#{binder_id}/sections/#{node_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Binder Section

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_sections_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_sections_post(connection, binder_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders/#{binder_id}/sections")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Binder Section

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `section_id` (String.t): The binder node id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_sections_section_id_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_sections_section_id_delete(connection, binder_id, section_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/binders/#{binder_id}/sections/#{section_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder Sections

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `section_id` (String.t): The binder node id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_sections_section_id_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_sections_section_id_get(connection, binder_id, section_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/#{binder_id}/sections/#{section_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Binder Versions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_versions_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_versions_get(connection, binder_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/#{binder_id}/versions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Export Binder (Specific Version)

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `major_version` (String.t): The binder major_version_number__v field value.
  - `minor_version` (String.t): The binder minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:source` (boolean()): to include source content or not
    - `:renditiontype` (String.t): to include viewable renditions
    - `:docversion` (String.t): to include all major versions
    - `:attachments` (String.t): to include all versions of attachments
    - `:export` (String.t): configurable filename metadata
    - `:docfield` (boolean()): to exclude document metadata csv
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_versions_major_version_minor_version_actions_export_post(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_versions_major_version_minor_version_actions_export_post(connection, binder_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :source => :query,
      :renditiontype => :query,
      :docversion => :query,
      :attachments => :query,
      :export => :query,
      :docfield => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders/#{binder_id}/versions/#{major_version}/#{minor_version}/actions/export")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Binder Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `major_version` (String.t): The binder major_version_number__v field value.
  - `minor_version` (String.t): The binder minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_versions_major_version_minor_version_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_versions_major_version_minor_version_delete(connection, binder_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/binders/#{binder_id}/versions/#{major_version}/#{minor_version}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `major_version` (String.t): The binder major_version_number__v field value.
  - `minor_version` (String.t): The binder minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_versions_major_version_minor_version_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_versions_major_version_minor_version_get(connection, binder_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/#{binder_id}/versions/#{major_version}/#{minor_version}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Binder Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `major_version` (String.t): The binder major_version_number__v field value.
  - `minor_version` (String.t): The binder minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_versions_major_version_minor_version_put(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_versions_major_version_minor_version_put(connection, binder_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/binders/#{binder_id}/versions/#{major_version}/#{minor_version}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Binder Relationship

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `major_version` (String.t): The binder major_version_number__v field value.
  - `minor_version` (String.t): The binder minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_versions_major_version_minor_version_relationships_post(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_versions_major_version_minor_version_relationships_post(connection, binder_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders/#{binder_id}/versions/#{major_version}/#{minor_version}/relationships")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Binder Relationship

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `major_version` (String.t): The binder major_version_number__v field value.
  - `minor_version` (String.t): The binder minor_version_number__v field value.
  - `relationship_id` (String.t): The binder relationship id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete(connection, binder_id, major_version, minor_version, relationship_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/binders/#{binder_id}/versions/#{major_version}/#{minor_version}/relationships/#{relationship_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder Relationship

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `major_version` (String.t): The binder major_version_number__v field value.
  - `minor_version` (String.t): The binder minor_version_number__v field value.
  - `relationship_id` (String.t): The binder relationship id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get(connection, binder_id, major_version, minor_version, relationship_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/#{binder_id}/versions/#{major_version}/#{minor_version}/relationships/#{relationship_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder Version Section

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `binder_id` (String.t): The binder id field value.
  - `major_version` (String.t): The binder major_version_number__v field value.
  - `minor_version` (String.t): The binder minor_version_number__v field value.
  - `section_id` (String.t): Retrieve all sections (documents and subsections) in a binder’s sub-level node. If not included, all sections from the binder’s top-level root node will be returned.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get(connection, binder_id, major_version, minor_version, section_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/#{binder_id}/versions/#{major_version}/#{minor_version}/sections/#{section_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Binder Roles

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_id_roles_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_id_roles_get(connection, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/#{id}/roles")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Assign Users & Groups to Roles on a Single Binder

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_id_roles_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_id_roles_post(connection, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders/#{id}/roles")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Role

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The binder `id`.
  - `role_name` (String.t): The name of the role to retrieve. For example, `owner__v`.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_id_roles_role_name_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_id_roles_role_name_get(connection, id, role_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/#{id}/roles/#{role_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder User Actions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The binder id field value from which to retrieve available user actions.
  - `major_version` (String.t): The major version number of the binder.
  - `minor_version` (String.t): The minor version number of the binder.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get(connection, id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/#{id}/versions/#{major_version}/#{minor_version}/lifecycle_actions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder Entry Criteria

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The binder id field value from which to retrieve available user actions.
  - `major_version` (String.t): The major version number of the binder.
  - `minor_version` (String.t): The minor version number of the binder.
  - `name_v` (String.t): The lifecycle name__v field value from which to retrieve entry criteria. This is retrieved from the Retrieve User Actions request above.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(connection, id, major_version, minor_version, name_v, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/#{id}/versions/#{major_version}/#{minor_version}/lifecycle_actions/#{name__v}/entry_requirements")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Binder User Action

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The binder id field value from which to retrieve available user actions.
  - `major_version` (String.t): The major version number of the binder.
  - `minor_version` (String.t): The minor version number of the binder.
  - `name_v` (String.t): The action name__v field value to initiate. This is retrieved from the Retrieve User Action request.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(connection, id, major_version, minor_version, name_v, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/binders/#{id}/versions/#{major_version}/#{minor_version}/lifecycle_actions/#{name__v}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve User Actions on Multiple Binders

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_lifecycle_actions_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_lifecycle_actions_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders/lifecycle_actions")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Bulk Binder User Actions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `user_action_name` (String.t): The user action name__v field value. Find this value with the Retrieve User Actions on Multiple Binders endpoint.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_lifecycle_actions_user_action_name_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_lifecycle_actions_user_action_name_put(connection, user_action_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/binders/lifecycle_actions/#{user_action_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Binder

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:async` (boolean()): When creating a binder, the binder metadata is indexed synchronously by default. To process the indexing asynchronously, include a query parameter async set to true (objects/binders?async=true). This helps speed up the response time from Vault when processing large amounts of data. 
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_post(connection, opts \\ []) do
    optional_params = %{
      :async => :query,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder Template Collection

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_templates_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_templates_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/templates")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Binder Template

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_templates_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_templates_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders/templates")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Binder Template

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_templates_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_templates_put(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/binders/templates")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder Template Node Attributes

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `template_name` (String.t): The binder template name__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_templates_template_name_bindernodes_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_templates_template_name_bindernodes_get(connection, template_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/templates/#{template_name}/bindernodes")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Binder Template Node

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `template_name` (String.t): The binder template name__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_templates_template_name_bindernodes_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_templates_template_name_bindernodes_post(connection, template_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/binders/templates/#{template_name}/bindernodes")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Replace Binder Template Nodes

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `template_name` (String.t): The binder template name__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_templates_template_name_bindernodes_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_templates_template_name_bindernodes_put(connection, template_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/binders/templates/#{template_name}/bindernodes")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Binder Template

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `template_name` (String.t): The binder template name__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_templates_template_name_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_templates_template_name_delete(connection, template_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/binders/templates/#{template_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Binder Template Attributes

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `template_name` (String.t): The binder template name__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_binders_templates_template_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_binders_templates_template_name_get(connection, template_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/binders/templates/#{template_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Deleted Document IDs

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:start_date` (String.t): Specify a date (no more than 30 days past) after which Vault will look for deleted documents. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z
    - `:end_date` (String.t): Specify a date (no more than 30 days past) before which Vault will look for deleted documents. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2016 would use 2016-01-15T07:00:00Z 
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_deletions_documents_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_deletions_documents_get(connection, opts \\ []) do
    optional_params = %{
      :start_date => :query,
      :end_date => :query,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/deletions/documents")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Deleted Object Record ID

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_deletions_vobjects_object_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_deletions_vobjects_object_name_get(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/deletions/vobjects/#{object_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Document Workflows

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:loc` (boolean()): When localized (translated) strings are available, retrieve them by setting loc to true.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_actions_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_actions_get(connection, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/actions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Controlled Copy Job Results

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `lifecycle_and_state_and_action` (String.t): The `name__v` values for the lifecycle, state, and action in the format `{lifecycle_name}.{state_name}.{action_name}`. To get this value, [Retrieve the Job Status](https://developer.veevavault.com/api/24.3#RetrieveJobStatus) and find the `href` under the `artifacts` link.
  - `job_id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get(connection, lifecycle_and_state_and_action, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/actions/#{lifecycle_and_state_and_action}/#{job_id}/results")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Workflow Details

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `workflow_name` (String.t): The document workflow name value.
  - `opts` (keyword): Optional parameters
    - `:loc` (boolean()): When localized (translated) strings are available, retrieve them by setting loc to true.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_actions_workflow_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_actions_workflow_name_get(connection, workflow_name, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/actions/#{workflow_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Document Workflow

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `workflow_name` (String.t): The document workflow name value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_actions_workflow_name_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_actions_workflow_name_post(connection, workflow_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/actions/#{workflow_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Annotations

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_annotations_batch_delete(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_annotations_batch_delete(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/annotations/batch")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Multiple Annotations

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `authorization` (String.t): 
  - `content_type` (String.t): 
  - `accept` (String.t): 
  - `x_vault_api_client_id` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_annotations_batch_post(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_annotations_batch_post(connection, authorization, content_type, accept, x_vault_api_client_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/annotations/batch")
      |> add_param(:headers, :Authorization, authorization)
      |> add_param(:headers, :"Content-Type", content_type)
      |> add_param(:headers, :Accept, accept)
      |> add_param(:headers, :"X-VaultAPI-ClientID", x_vault_api_client_id)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Annotations

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_annotations_batch_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_annotations_batch_put(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/annotations/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Add Annotation Replies

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_annotations_replies_batch_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_annotations_replies_batch_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/annotations/replies/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Multiple Document Attachments

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_attachments_batch_delete(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_attachments_batch_delete(connection, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/attachments/batch")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Multiple Document Attachments

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_attachments_batch_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_attachments_batch_post(connection, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/attachments/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Multiple Document Attachment Descriptions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_attachments_batch_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_attachments_batch_put(connection, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/attachments/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Export Results

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The id value of the requested export job. This is returned with the export document requests.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_batch_actions_fileextract_job_id_results_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_batch_actions_fileextract_job_id_results_get(connection, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/batch/actions/fileextract/#{job_id}/results")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Export Documents

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:source` (boolean()): Optional: To exclude source files, include a query parameter source=false. If omitted, defaults to true.
    - `:renditions` (boolean()): Optional: To include renditions, include a query parameter renditions=true. If omitted, defaults to false.
    - `:allversions` (boolean()): Optional: To include all versions or latest version, include a query parameter allversions=true. If omitted, defaults to false.
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_batch_actions_fileextract_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_batch_actions_fileextract_post(connection, opts \\ []) do
    optional_params = %{
      :source => :query,
      :renditions => :query,
      :allversions => :query,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/batch/actions/fileextract")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Reclassify Multiple Documents

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-MigrationMode"` (boolean()): When set to true, Vault allows you to manually set the document number and to update documents to any lifecycle state using the status__v field. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message.  You must have the Document Migration permission to use this header. Learn more about <a href=\"https://platform.veevavault.help/en/gr/54028\">Document Migration Mode in Vault Help.</a>
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_batch_actions_reclassify_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_batch_actions_reclassify_put(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-MigrationMode" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/batch/actions/reclassify")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Multiple Document Renditions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_batch_actions_rerender_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_batch_actions_rerender_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/batch/actions/rerender")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Multiple Documents

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:idParam` (String.t): If you’re identifying documents in your input by their external ID
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_batch_delete(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_batch_delete(connection, opts \\ []) do
    optional_params = %{
      :idParam => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/batch")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Undo Collaborative Authoring Checkout

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_batch_lock_delete(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_batch_lock_delete(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/batch/lock")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Multiple Documents

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-MigrationMode"` (boolean()): When set to true, Vault allows you to create documents in any lifecycle state using the status__v field, and to manually set the name, document number, and version number. Vault also bypasses entry criteria, entry actions, and event actions. You must have the Document Migration permission to use this header. Learn more about <a href=\"https://platform.veevavault.help/en/gr/54028\">Document Migration Mode in Vault Help.</a>
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_batch_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_batch_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-MigrationMode" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Multiple Documents

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-MigrationMode"` (boolean()): When set to true, Vault allows you to change the document number. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message. You must have the Document Migration permission to use this header.Learn more about <a href=\"https://platform.veevavault.help/en/gr/54028\">Document Migration Mode in Vault Help.</a>
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_batch_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_batch_put(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-MigrationMode" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Anchor IDs

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_anchors_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_anchors_get(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/anchors")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Export Document Annotations to PDF

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_annotations_file_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_annotations_file_get(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/annotations/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Import Document Annotations from PDF

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_annotations_file_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_annotations_file_post(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/#{doc_id}/annotations/file")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Single Document Attachment

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_attachment_id_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_attachment_id_delete(connection, doc_id, attachment_id, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/#{doc_id}/attachments/#{attachment_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Document Attachment

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_attachment_id_file_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_attachment_id_file_get(connection, doc_id, attachment_id, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/attachments/#{attachment_id}/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Attachment Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_attachment_id_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_attachment_id_get(connection, doc_id, attachment_id, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/attachments/#{attachment_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Document Attachment Description

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_attachment_id_put(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_attachment_id_put(connection, doc_id, attachment_id, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/#{doc_id}/attachments/#{attachment_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Single Document Attachment Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `attachment_version` (String.t): The attachment version__v field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete(connection, doc_id, attachment_id, attachment_version, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/#{doc_id}/attachments/#{attachment_id}/versions/#{attachment_version}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Document Attachment Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `attachment_version` (String.t): The attachment version__v field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get(connection, doc_id, attachment_id, attachment_version, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/attachments/#{attachment_id}/versions/#{attachment_version}/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Attachment Version Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `attachment_version` (String.t): The attachment version__v field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get(connection, doc_id, attachment_id, attachment_version, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/attachments/#{attachment_id}/versions/#{attachment_version}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Restore Document Attachment Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `attachment_version` (String.t): The attachment version__v field value.
  - `opts` (keyword): Optional parameters
    - `:restore` (boolean()): The parameter restore must be set to true. 
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post(connection, doc_id, attachment_id, attachment_version, opts \\ []) do
    optional_params = %{
      :restore => :query,
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/#{doc_id}/attachments/#{attachment_id}/versions/#{attachment_version}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Attachment Versions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_attachment_id_versions_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_attachment_id_versions_get(connection, doc_id, attachment_id, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/attachments/#{attachment_id}/versions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download All Document Attachments

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_file_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_file_get(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/attachments/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Attachments

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_get(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/attachments")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Document Attachment

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_attachments_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_attachments_post(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/#{doc_id}/attachments")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Complete Audit History for a Single Document

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document ID for which to retrieve audit history.
  - `opts` (keyword): Optional parameters
    - `:start_date` (String.t): Specify a start date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to the vault’s creation date. 
    - `:end_date` (String.t): Specify an end date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to today’s date. 
    - `:format_result` (String.t): To request a CSV file of your audit history, use csv. 
    - `:limit` (String.t): Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200.
    - `:offset` (String.t): Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset=51. If omitted, defaults to 0.
    - `:events` (String.t): Provide a comma-separated list of one or more audit events to retrieve their audit history. See Vault Help for a full list of document audit events. The values passed to this parameter are case sensitive. For example, events=WorkflowCompletion,TaskAssignment. If omitted, defaults to all audit events.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_audittrail_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_audittrail_get(connection, doc_id, opts \\ []) do
    optional_params = %{
      :start_date => :query,
      :end_date => :query,
      :format_result => :query,
      :limit => :query,
      :offset => :query,
      :events => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/audittrail")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Single Document

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_delete(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/#{doc_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Events

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_events_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_events_get(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/events")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Document File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:lockDocument` (boolean()): Set to true to Check Out this document before retrieval. If omitted, defaults to false.
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_file_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_file_get(connection, doc_id, opts \\ []) do
    optional_params = %{
      :lockDocument => :query,
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_get(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Document Lock

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_lock_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_lock_delete(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/#{doc_id}/lock")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Lock

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_lock_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_lock_get(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/lock")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Document Lock

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_lock_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_lock_post(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/#{doc_id}/lock")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download All Document Version Attachments

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_major_version_minor_version_attachments_file_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_major_version_minor_version_attachments_file_get(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/#{major_version}/#{minor_version}/attachments/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Single Document Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:suppressRendition` (String.t): Set to true to suppress automatic generation of the viewable rendition. If omitted, defaults to false
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_post(connection, doc_id, opts \\ []) do
    optional_params = %{
      :suppressRendition => :query,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/#{doc_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Single Document

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-MigrationMode"` (boolean()): When set to true, Vault allows you to change the document number. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message. You must have the Document Migration permission to use this header. Learn more about <a href=\"https://platform.veevavault.help/en/gr/54028\">Document Migration Mode in Vault Help.</a>
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_put(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-MigrationMode" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/#{doc_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Renditions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_renditions_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_renditions_get(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/renditions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Single Document Rendition

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `rendition_type` (String.t): The document rendition type.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_renditions_rendition_type_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_renditions_rendition_type_delete(connection, doc_id, rendition_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/#{doc_id}/renditions/#{rendition_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Document Rendition File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `rendition_type` (String.t): The document rendition type.
  - `opts` (keyword): Optional parameters
    - `:steadyState` (String.t): Set to true to download a rendition (file) from the latest steady state version (1.0, 2.0, etc.) of a document. 
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_renditions_rendition_type_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_renditions_rendition_type_get(connection, doc_id, rendition_type, opts \\ []) do
    optional_params = %{
      :steadyState => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/renditions/#{rendition_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Add Single Document Rendition

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `rendition_type` (String.t): The document rendition type.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_renditions_rendition_type_post(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_renditions_rendition_type_post(connection, doc_id, rendition_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/#{doc_id}/renditions/#{rendition_type}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Replace Document Rendition

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `rendition_type` (String.t): The document rendition type.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_renditions_rendition_type_put(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_renditions_rendition_type_put(connection, doc_id, rendition_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/#{doc_id}/renditions/#{rendition_type}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Remove Users & Groups from Roles on a Single Document

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The id value of the document from which to remove roles.
  - `role_name_and_user_or_group` (String.t): The name of the role from which to remove the user or group followed by either `user` or `group`. The format is `{role_name}.{user_or_group}`. For example, `consumer__v.user`.
  - `id` (String.t): The id value of the user or group to remove from the role.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete(connection, doc_id, role_name_and_user_or_group, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/#{doc_id}/roles/#{role_name_and_user_or_group}/#{id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Version Attachments

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_version_major_version_minor_version_attachments_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_version_major_version_minor_version_attachments_get(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/version/#{major_version}/#{minor_version}/attachments")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Versions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_get(connection, doc_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Read Annotations by ID

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `annotation_id` (String.t): The annotation ID, which can be retrieved with Read Annotations by Document Version and Type.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get(connection, doc_id, major_version, minor_version, annotation_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/annotations/#{annotation_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Read Replies of Parent Annotation

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `annotation_id` (String.t): The parent annotation ID, which can be retrieved with Read Annotations by Document Version and Type.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get(connection, doc_id, major_version, minor_version, annotation_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/annotations/#{annotation_id}/replies")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Export Document Version Annotations to PDF

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/annotations/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Import Document Version Annotations from PDF

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/annotations/file")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Read Annotations by Document Version and Type

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:limit` (String.t): Paginate the results by specifying the maximum number of records per page in the response. This can be any value between 1 and 500. If omitted, defaults to 500. Values greater than 500 are ignored.
    - `:offset` (String.t): This parameter is used to paginate the results. It specifies the amount of offset from the first record returned. Vault returns 200 records per page by default. If you are viewing the first 200 results (page 1) and want to see the next page, set this to offset=201.
    - `:annotation_types` (String.t): The type(s) of annotations to retrieve. For example, note__sys,anchor__sys. If omitted, Vault returns all annotations. Valid annotation types include: `note__sys` `line__sys` `document_link__sys` `permalink_link__sys` `anchor__sys` `reply__sys` `external_link__sys`  The following annotation types are only valid in PromoMats Vaults:  `suggested_link__sys` `approved_link__sys` `auto_link__sys` `keyword_link__sys` 
    - `:pagination_id` (String.t): A unique identifier used to load requests with paginated results.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_annotations_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_annotations_get(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :limit => :query,
      :offset => :query,
      :annotation_types => :query,
      :pagination_id => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/annotations")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Document Version Attachment Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `attachment_id` (String.t): The id field value of the attachment.
  - `attachment_version` (String.t): The version of the attachment.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get(connection, doc_id, major_version, minor_version, attachment_id, attachment_version, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/attachments/#{attachment_id}/versions/#{attachment_version}/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Version Attachment Versions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `attachment_id` (String.t): The id of the document attachment to retrieve.
  - `attachment_version` (String.t): Optional: The version of the attachment to retrieve. If omitted, the endpoint retrieves all versions of the specified attachment.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get(connection, doc_id, major_version, minor_version, attachment_id, attachment_version, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/attachments/#{attachment_id}/versions/#{attachment_version}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Single Document Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_delete(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Version Notes as CSV

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/doc-export-annotations-to-csv")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Document Event

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_events_post(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_events_post(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/events")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Video Annotations

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The video document id field value.
  - `major_version` (String.t): The video document major_version_number__v field value.
  - `minor_version` (String.t): The video document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): This `Accept` header only changes the format of the response in the case of an error. On `SUCCESS`, the HTTP Response Header `Content-Type` is set to `text/plain;charset=UnicodeLittle`.
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/export-video-annotations")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Document Version File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_file_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_file_get(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_get(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Document Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-MigrationMode"` (boolean()): When set to true, Vault allows you to manually set the document number. All other Document Migration Mode overrides available at document creation are ignored, but do not generate an error message. You must have the Document Migration permission to use this header. Learn more about <a href=\"https://platform.veevavault.help/en/gr/54028\">Document Migration Mode in Vault Help.</a>
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_put(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_put(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-MigrationMode" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Relationships

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_relationships_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_relationships_get(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/relationships")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Single Document Relationship

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_relationships_post(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_relationships_post(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/relationships")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Single Document Relationship

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `relationship_id` (String.t): The relationship id field value. See Retrieve Document Relationships.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete(connection, doc_id, major_version, minor_version, relationship_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/relationships/#{relationship_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Relationship

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `relationship_id` (String.t): The relationship id field value. See Retrieve Document Relationships.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get(connection, doc_id, major_version, minor_version, relationship_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/relationships/#{relationship_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Version Renditions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_renditions_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_renditions_get(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/renditions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Document Version Rendition

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `rendition_type` (String.t): The document rendition type.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete(connection, doc_id, major_version, minor_version, rendition_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/renditions/#{rendition_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Document Version Rendition File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `rendition_type` (String.t): The document rendition type.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get(connection, doc_id, major_version, minor_version, rendition_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/renditions/#{rendition_type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Upload Document Version Rendition

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `rendition_type` (String.t): The document rendition type.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post(connection, doc_id, major_version, minor_version, rendition_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/renditions/#{rendition_type}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Replace Document Version Rendition

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `rendition_type` (String.t): The document rendition type.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put(connection, doc_id, major_version, minor_version, rendition_type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/renditions/#{rendition_type}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Document Version Thumbnail File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `doc_id` (String.t): The document id field value.
  - `major_version` (String.t): The document major_version_number__v field value.
  - `minor_version` (String.t): The document minor_version_number__v field value.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get(connection, doc_id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{doc_id}/versions/#{major_version}/#{minor_version}/thumbnail")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Documents

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:named_filter` (String.t): Retrieves only documents which you have created.
    - `:scope` (String.t): Searches only within the document content.
    - `:versionscope` (String.t): Retrieves all document versions, rather than only the latest version.
    - `:search` (String.t): Search for documents based on a {keyword} in searchable document fields.
    - `:limit` (String.t): See VQL documentation for more information.
    - `:sort` (String.t): See VQL documentation for more information.
    - `:start` (String.t): See VQL documentation for more information.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_get(connection, opts \\ []) do
    optional_params = %{
      :named_filter => :query,
      :scope => :query,
      :versionscope => :query,
      :search => :query,
      :limit => :query,
      :sort => :query,
      :start => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Document Roles

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_id_roles_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_id_roles_get(connection, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{id}/roles")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Assign Users & Groups to Roles on a Single Document

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_id_roles_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_id_roles_post(connection, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/#{id}/roles")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Role

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The document `id`.
  - `role_name` (String.t): The name of the role to retrieve. For example, `owner__v`.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_id_roles_role_name_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_id_roles_role_name_get(connection, id, role_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{id}/roles/#{role_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document User Actions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The document id field value from which to retrieve available user actions.
  - `major_version` (String.t): The major version number of the document.
  - `minor_version` (String.t): The minor version number of the document.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get(connection, id, major_version, minor_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{id}/versions/#{major_version}/#{minor_version}/lifecycle_actions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Entry Criteria

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The document id field value from which to retrieve available user actions.
  - `major_version` (String.t): The major version number of the document.
  - `minor_version` (String.t): The minor version number of the document.
  - `name_v` (String.t): The lifecycle name__v field value from which to retrieve entry criteria. This is retrieved from the Retrieve User Actions request above.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get(connection, id, major_version, minor_version, name_v, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/#{id}/versions/#{major_version}/#{minor_version}/lifecycle_actions/#{name__v}/entry_requirements")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Document User Action

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The document id field value from which to retrieve available user actions.
  - `major_version` (String.t): The major version number of the document.
  - `minor_version` (String.t): The minor version number of the document.
  - `name_v` (String.t): The action name__v field value to initiate. This is retrieved from the Retrieve User Action request.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_put(connection, id, major_version, minor_version, name_v, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/#{id}/versions/#{major_version}/#{minor_version}/lifecycle_actions/#{name__v}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve User Actions on Multiple Documents

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_lifecycle_actions_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_lifecycle_actions_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/lifecycle_actions")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Bulk Document User Actions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `user_action_name` (String.t): The user action name__v field value. Find this value with the Retrieve User Actions on Multiple Documents endpoint.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_lifecycle_actions_user_action_name_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_lifecycle_actions_user_action_name_put(connection, user_action_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/lifecycle_actions/#{user_action_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Single Document

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-MigrationMode"` (boolean()): When set to true,  you can use the status__v field to create documents in any lifecycle state. Additionally, you can manually set the name, document number, and version number. Vault also bypasses entry criteria, entry actions, and event actions. You must have the Document Migration permission to use this header. Learn more about <a href=\"https://platform.veevavault.help/en/gr/54028\">Document Migration Mode in Vault Help.</a>
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-MigrationMode" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Multiple Document Relationships

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_relationships_batch_delete(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_relationships_batch_delete(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/relationships/batch")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Multiple Document Relationships

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_relationships_batch_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_relationships_batch_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/relationships/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Multiple Document Renditions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_renditions_batch_delete(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_renditions_batch_delete(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/renditions/batch")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Add Multiple Document Renditions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:idParam` (String.t): If you’re identifying documents in your input by their external ID
    - `:largeSizeAsset` (String.t): If set to true, indicates that the renditions to add are of the Large Size Asset (large_size_asset__v) rendition type. Vault applies Document Migration Mode limitations to renditions created with the request, but Document Migration permission is not required and your vault need not be in Migration Mode to use the parameter. Note that the request results in an error if the CSV contains any rendition type other than large_size_asset__v.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-MigrationMode"` (boolean()): Must be set to true when importing any rendition type other than large_size_asset__v. You must have the Document Migration permission to use this header. Learn more about <a href=\"https://platform.veevavault.help/en/gr/54028\">Document Migration Mode in Vault Help.</a>
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_renditions_batch_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_renditions_batch_post(connection, opts \\ []) do
    optional_params = %{
      :idParam => :query,
      :largeSizeAsset => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-MigrationMode" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/renditions/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Remove Users and Groups from Roles on Multiple Documents & Binders

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_roles_batch_delete(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_roles_batch_delete(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/roles/batch")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Assign Users & Groups to Roles on Multiple Documents & Binders

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_roles_batch_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_roles_batch_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/roles/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Template Collection

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_templates_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_templates_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/templates")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Single Document Template

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_templates_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_templates_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/templates")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Multiple Document Templates

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_templates_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_templates_put(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/templates")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Basic Document Template

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `template_name` (String.t): The document template name__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_templates_template_name_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_templates_template_name_delete(connection, template_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/templates/#{template_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Document Template File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `template_name` (String.t): The document template name__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_templates_template_name_file_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_templates_template_name_file_get(connection, template_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/templates/#{template_name}/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Document Template Attributes

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `template_name` (String.t): The document template name__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_templates_template_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_templates_template_name_get(connection, template_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/documents/templates/#{template_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Single Document Template

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `template_name` (String.t): The document template name__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_templates_template_name_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_templates_template_name_put(connection, template_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/documents/templates/#{template_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Document Tokens

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_tokens_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_tokens_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/tokens")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Export Document Versions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:source` (boolean()): Optional: To exclude source files, include a query parameter source=false. If omitted, defaults to true.
    - `:renditions` (boolean()): Optional: To include renditions, include a query parameter renditions=true. If omitted, defaults to false.
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_versions_batch_actions_fileextract_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_versions_batch_actions_fileextract_post(connection, opts \\ []) do
    optional_params = %{
      :source => :query,
      :renditions => :query,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/versions/batch/actions/fileextract")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Multiple Document Versions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:idParam` (String.t): If you’re identifying documents in your input by their external ID
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_versions_batch_delete(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_versions_batch_delete(connection, opts \\ []) do
    optional_params = %{
      :idParam => :query,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/documents/versions/batch")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Multiple Document Versions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:idParam` (String.t): If you’re identifying documents in your input by their external ID
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-MigrationMode"` (String.t): Must be set to true. Vault allows you to manually set the name and version number and to create documents in any lifecycle state using the `status__v` field, but does not allow you to change the document number. Vault also bypasses entry criteria, entry actions, and event actions. You must have the Document Migration permission to use this header. Learn more about <a href=\"https://platform.veevavault.help/en/gr/54028\">Document Migration Mode in Vault Help.</a>
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_documents_versions_batch_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_documents_versions_batch_post(connection, opts \\ []) do
    optional_params = %{
      :idParam => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-MigrationMode" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/documents/versions/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Domain Information

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:include_application` (boolean()): To include Vault application type information in the response, set include_application to true. If omitted, defaults to false and application information is not included.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_domain_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_domain_get(connection, opts \\ []) do
    optional_params = %{
      :include_application => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/domain")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Domains

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_domains_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_domains_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/domains")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Add EDL Matched Documents

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_edl_matched_documents_batch_actions_add_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_edl_matched_documents_batch_actions_add_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/edl_matched_documents/batch/actions/add")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Remove EDL Matched Documents

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_edl_matched_documents_batch_actions_remove_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_edl_matched_documents_batch_actions_remove_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/edl_matched_documents/batch/actions/remove")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Auto Managed Groups

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:limit` (String.t): Paginate the results by specifying the maximum number of records per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 1000. 
    - `:offset` (String.t): Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset=51. If omitted, defaults to 0.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_groups_auto_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_groups_auto_get(connection, opts \\ []) do
    optional_params = %{
      :limit => :query,
      :offset => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/groups/auto")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Groups

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:includeImplied` (String.t): When true, the response includes the implied_members__v field. These users are automatically added to the group when their security_profiles__v are added to the group. If omitted, the response includes only the members__v field. These users are individually added to a group by an Admin.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_groups_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_groups_get(connection, opts \\ []) do
    optional_params = %{
      :includeImplied => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/groups")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Group

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `group_id` (String.t): The group id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_groups_group_id_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_groups_group_id_delete(connection, group_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/groups/#{group_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Group

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `group_id` (String.t): The group id field value.
  - `opts` (keyword): Optional parameters
    - `:includeImplied` (boolean()): When true, the response includes the implied_members__v field. These users are automatically added to the group when their security_profiles__v are added to the group. When not used, the response includes only the members__v field. These users are individually added to a group by Admin.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_groups_group_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_groups_group_id_get(connection, group_id, opts \\ []) do
    optional_params = %{
      :includeImplied => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/groups/#{group_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Group

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `group_id` (String.t): The group id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_groups_group_id_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_groups_group_id_put(connection, group_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/groups/#{group_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Group 

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_groups_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_groups_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/groups")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Application License Usage

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_licenses_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_licenses_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/licenses")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Multi-Record Workflows

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_actions_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_actions_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/objectworkflows/actions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Multi-Record Workflow Details

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `workflow_name` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_actions_workflow_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_actions_workflow_name_get(connection, workflow_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/objectworkflows/actions/#{workflow_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Multi-Record Workflow

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `workflow_name` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_actions_workflow_name_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_actions_workflow_name_post(connection, workflow_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/actions/#{workflow_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Workflows

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:object__v` (String.t): To retrieve all workflows configured on an object, include the Vault object name__v and object record id field values as ?object__v={name__v}&record_id__v={id}. These two parameters are required when the participant parameter is not used. 
    - `:record_id__v` (String.t): To retrieve all workflows configured on an object, include the Vault object name__v and object record id field values as ?object__v={name__v}&record_id__v={id}. These two parameters are required when the participant parameter is not used. 
    - `:participant` (String.t): To retrieve all workflows available to a particular user, include the user id field value as ?participant={id}. To retrieve your own workflows, set this value to ?participant=me. This parameter is required when the object__v and record_id__v parameters are not used. 
    - `:status__v` (String.t): To retrieve all workflows with specific statuses, include one or more status name__v field values. For example: status__v=active__v, status__v=active__v,completed__v. Workflows with `status__v=active__v` are in progress for the indicated object record. Valid statuses include: active__v completed__v cancelled__v
    - `:offset` (String.t): This parameter is used to paginate the results. It specifies the amount of offset from the first record returned. Vault returns 200 records per page by default. If you are viewing the first 200 results (page 1) and want to see the next page, set this to ?offset=201. 
    - `:page_size` (String.t): This parameter is used to paginate the results. It specifies the size number of records to display per page. Vault returns 200 records per page by default. You can set this value lower or as high as 1000 records per page. For example: ?page_size=1000. 
    - `:loc` (String.t): When localized (translated) strings are available, retrieve them by including ?loc=true. 
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_get(connection, opts \\ []) do
    optional_params = %{
      :object__v => :query,
      :record_id__v => :query,
      :participant => :query,
      :status__v => :query,
      :offset => :query,
      :page_size => :query,
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/objectworkflows")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Workflow Tasks

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:object__v` (String.t): To retrieve all workflow tasks configured on an object, include the Vault object name__v and object record id field values as ?object__v={name__v}&record_id__v={id}. These two parameters are required when the assignee__v parameter is not used.
    - `:record_id__v` (String.t): To retrieve all workflow tasks configured on an object, include the Vault object name__v and object record id field values as ?object__v={name__v}&record_id__v={id}. These two parameters are required when the assignee__v parameter is not used.
    - `:assignee__v` (String.t): To retrieve all workflow tasks available to a particular user, include the user id field value as ?assignee__v={id}. To retrieve your own workflow tasks, set this value to ?assignee__v=me. This parameter is required when the object__v and record_id__v parameters are not used. 
    - `:status__v` (String.t): To retrieve all workflow tasks with specific statuses, include one or more status name__v field values. For example: ?status__v=available__v or ?status__v=available__v,completed__v. 
    - `:offset` (String.t): This parameter is used to paginate the results. It specifies the amount of offset from the first record returned. Vault returns 200 records per page by default. If you are viewing the first 200 results (page 1) and want to see the next page, set this to ?offset=201. 
    - `:page_size` (String.t): This parameter is used to paginate the results. It specifies the size number of records to display per page. Vault returns 200 records per page by default. You can set this value lower or as high as 1000 records per page. For example: ?page_size=1000. 
    - `:loc` (String.t): When localized (translated) strings are available, retrieve them by including ?loc=true. 
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_get(connection, opts \\ []) do
    optional_params = %{
      :object__v => :query,
      :record_id__v => :query,
      :assignee__v => :query,
      :status__v => :query,
      :offset => :query,
      :page_size => :query,
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/objectworkflows/tasks")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Accept Single Record Workflow Task

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The task id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_accept_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_accept_post(connection, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions/accept")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Cancel Workflow Task

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The task id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_cancel_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_cancel_post(connection, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions/cancel")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Complete Single Record Workflow Task

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The task id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_complete_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_complete_post(connection, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions/complete")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Workflow Task Actions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The task id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_get(connection, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Accept Multi-item Workflow Task

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The task id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_mdwaccept_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_mdwaccept_post(connection, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions/mdwaccept")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Complete Multi-item Workflow Task

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The task id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post(connection, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions/mdwcomplete")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Manage Multi-Item Workflow Content

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The task id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post(connection, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions/mdwmanagecontent")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Reassign Multi-item Workflow Task

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The id of the task to reassign.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_mdwreassign_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_mdwreassign_post(connection, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions/mdwreassign")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Reassign Single Record Workflow Task

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The id of the task to reassign.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_reassign_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_reassign_post(connection, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions/reassign")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Workflow Task Action Details

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The task id field value.
  - `task_action` (String.t): The name of the task action retrieved from Retrieve Workflow Task Actions.
  - `opts` (keyword): Optional parameters
    - `:loc` (String.t): When localized (translated) strings are available, retrieve them by including loc=true. 
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_task_action_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_task_action_get(connection, task_id, task_action, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions/#{task_action}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Undo Workflow Task Acceptance

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The task id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_undoaccept_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_undoaccept_post(connection, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions/undoaccept")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Workflow Task Due Date

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The id of the task.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_actions_updateduedate_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_actions_updateduedate_post(connection, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/tasks/#{task_id}/actions/updateduedate")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Workflow Task Details

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `task_id` (String.t): The task id field value.
  - `opts` (keyword): Optional parameters
    - `:loc` (boolean()): When localized (translated) strings are available, retrieve them by including loc=true.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_tasks_task_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_tasks_task_id_get(connection, task_id, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/objectworkflows/tasks/#{task_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Workflow Actions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `workflow_id` (String.t): The workflow id field value.
  - `opts` (keyword): Optional parameters
    - `:loc` (String.t): When localized (translated) strings are available, retrieve them by including loc=true. 
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_workflow_id_actions_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_workflow_id_actions_get(connection, workflow_id, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/objectworkflows/#{workflow_id}/actions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Workflow Action Details

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `workflow_id` (String.t): The workflow id field value.
  - `workflow_action` (String.t): The workflow action name retrieved from Retrieve Workflow Actions.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_workflow_id_actions_workflow_action_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_workflow_id_actions_workflow_action_get(connection, workflow_id, workflow_action, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/objectworkflows/#{workflow_id}/actions/#{workflow_action}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Workflow Action

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `workflow_id` (String.t): The workflow id field value.
  - `workflow_action` (String.t): The workflow action name retrieved from Retrieve Workflow Actions.
  - `opts` (keyword): Optional parameters
    - `:documents__sys` (String.t): Include the id or ids as a comma-separated list of the document(s) to be removed from a document workflow when using the removecontent action. If your workflow_action is remove_content, include the id of the document to remove the workflow. To remove multiple documents, use a comma-separated list of ids.
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_workflow_id_actions_workflow_action_post(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_workflow_id_actions_workflow_action_post(connection, workflow_id, workflow_action, opts \\ []) do
    optional_params = %{
      :documents__sys => :query,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/objectworkflows/#{workflow_id}/actions/#{workflow_action}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Workflow Details

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `workflow_id` (String.t): The workflow id field value.
  - `opts` (keyword): Optional parameters
    - `:loc` (boolean()): When localized (translated) strings are available, retrieve them by including loc=true.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_objectworkflows_workflow_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_objectworkflows_workflow_id_get(connection, workflow_id, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/objectworkflows/#{workflow_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Picklists

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_picklists_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_picklists_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/picklists")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Picklist Values

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `picklist_name` (String.t): The picklist name field value (license_type__v, product_family__c, region__c, etc.)
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_picklists_picklist_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_picklists_picklist_name_get(connection, picklist_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/picklists/#{picklist_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Inactivate Picklist Value

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `picklist_name` (String.t): The picklist name field value (license_type__v, product_family__c, region__c, etc.)
  - `picklist_value_name` (String.t): The picklist value name field value (north_america__c, south_america__c, etc.)
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_picklists_picklist_name_picklist_value_name_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_picklists_picklist_name_picklist_value_name_delete(connection, picklist_name, picklist_value_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/picklists/#{picklist_name}/#{picklist_value_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Picklist Value

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `picklist_name` (String.t): The picklist name field value (license_type__v, product_family__c, region__c, etc.)
  - `picklist_value_name` (String.t): The picklist value name field value (north_america__c, south_america__c, etc.)
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_picklists_picklist_name_picklist_value_name_put(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_picklists_picklist_name_picklist_value_name_put(connection, picklist_name, picklist_value_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/picklists/#{picklist_name}/#{picklist_value_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Picklist Values

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `picklist_name` (String.t): The picklist name field value (license_type__v, product_family__c, region__c, etc.)
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_picklists_picklist_name_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_picklists_picklist_name_post(connection, picklist_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/picklists/#{picklist_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Picklist Value Label

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `picklist_name` (String.t): The picklist name field value (license_type__v, product_family__c, region__c, etc.)
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_picklists_picklist_name_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_picklists_picklist_name_put(connection, picklist_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/picklists/#{picklist_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Build Production Vault

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_actions_buildproduction_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_actions_buildproduction_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/sandbox/actions/buildproduction")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Promote to Production

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_actions_promoteproduction_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_actions_promoteproduction_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/sandbox/actions/promoteproduction")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Recheck Sandbox Usage Limit

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_actions_recheckusage_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_actions_recheckusage_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/sandbox/actions/recheckusage")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Change Sandbox Size

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_batch_changesize_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_batch_changesize_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/sandbox/batch/changesize")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Set Sandbox Entitlements

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_entitlements_set_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_entitlements_set_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/sandbox/entitlements/set")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Sandboxes

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/sandbox")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Sandbox

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `name` (String.t): The name of the sandbox vault to delete. This is the name which appears on the My Vaults page.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_name_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_name_delete(connection, name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/sandbox/#{name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create or Refresh Sandbox

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/sandbox")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Sandbox Snapshot

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `api_name` (String.t): The Vault ID of the sandbox. Obtain this from the Retrieve Sandbox Snapshots request.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_snapshot_api_name_actions_update_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_snapshot_api_name_actions_update_post(connection, api_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/sandbox/snapshot/#{api_name}/actions/update")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Upgrade Sandbox Snapshot

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `api_name` (String.t): The Vault ID of the sandbox. Obtain this from the Retrieve Sandbox Snapshots request.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_snapshot_api_name_actions_upgrade_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_snapshot_api_name_actions_upgrade_post(connection, api_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/sandbox/snapshot/#{api_name}/actions/upgrade")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Sandbox Snapshot

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `api_name` (String.t): The Vault ID of the sandbox. Obtain this from the Retrieve Sandbox Snapshots request.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_snapshot_api_name_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_snapshot_api_name_delete(connection, api_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/sandbox/snapshot/#{api_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Sandbox Snapshots

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_snapshot_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_snapshot_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/sandbox/snapshot")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Sandbox Snapshot

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_snapshot_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_snapshot_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/sandbox/snapshot")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Refresh Sandbox from Snapshot

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `vault_id` (String.t): The Vault ID of the sandbox to be refreshed.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_vault_id_actions_refresh_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_vault_id_actions_refresh_post(connection, vault_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/sandbox/#{vault_id}/actions/refresh")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Sandbox Details by ID

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `vault_id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_sandbox_vault_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_sandbox_vault_id_get(connection, vault_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/sandbox/#{vault_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Security Policies

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_securitypolicies_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_securitypolicies_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/securitypolicies")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Security Policy

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `security_policy_name` (String.t): Security policy name__v field value (retrieved from previous request). This is typically a numeric value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_securitypolicies_security_policy_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_securitypolicies_security_policy_name_get(connection, security_policy_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/securitypolicies/#{security_policy_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Users

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:vaults` (String.t): Retrieve all users assigned to all Vaults in your domain.
    - `:exclude_vault_membership` (String.t): Optional: Set to false to include vault_membership fields. If true or omitted, vault_membership fields are not included in the response.
    - `:exclude_app_licensing` (String.t): Optional: Set to false to include app_licensing fields. If true or omitted, app_licensing fields are not included in the response.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_get(connection, opts \\ []) do
    optional_params = %{
      :vaults => :query,
      :exclude_vault_membership => :query,
      :exclude_app_licensing => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/users/")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve User

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The user id field value. Use the value me to get information for the currently authenticated user.
  - `opts` (keyword): Optional parameters
    - `:exclude_vault_membership` (String.t): Optional: Set to true to omit vault_membership fields. If you don’t need these fields, this may increase performance. If omitted, vault_membership fields are included in the response.
    - `:exclude_app_licensing` (String.t): Optional: Set to true to omit app_licensing fields. If you don’t need these fields, this may increase performance. If omitted, app_licensing fields are included in the response.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_id_get(connection, id, opts \\ []) do
    optional_params = %{
      :exclude_vault_membership => :query,
      :exclude_app_licensing => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/users/#{id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve User Permissions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The ID of the user. Use the value me to retrieve information for the currently authenticated user.
  - `opts` (keyword): Optional parameters
    - `:filter` (String.t): Filter the results to show only one specific name__v, which is in the format object.{object name}.{object or field}_actions. Wildcards are not supported. See example below.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_id_permissions_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_id_permissions_get(connection, id, opts \\ []) do
    optional_params = %{
      :filter => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/users/#{id}/permissions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Single User

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The user id field value. Use the value me to get information for the currently authenticated user.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_id_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_id_put(connection, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/users/#{id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Validate Session User

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:exclude_vault_membership` (String.t): Optional: Set to true to omit vault_membership fields. If you don’t need these fields, this may increase performance. If omitted, vault_membership fields are included in the response.
    - `:exclude_app_licensing` (String.t): Optional: Set to true to omit app_licensing fields. If you don’t need these fields, this may increase performance. If omitted, app_licensing fields are included in the response.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_me_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_me_get(connection, opts \\ []) do
    optional_params = %{
      :exclude_vault_membership => :query,
      :exclude_app_licensing => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/users/me")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Change My Password

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_me_password_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_me_password_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/users/me/password")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve My User Permissions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:filter` (String.t): Filter the results to show only one specific name__v, which is in the format object.{object name}.{object or field}_actions. Wildcards are not supported. See example below.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_me_permissions_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_me_permissions_get(connection, opts \\ []) do
    optional_params = %{
      :filter => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/objects/users/me/permissions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update My User

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_me_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_me_put(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/users/me")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Single User

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/users")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Multiple Users

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_put(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/users")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Disable User

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `user_id` (String.t): The user id field value. 
  - `opts` (keyword): Optional parameters
    - `:domain` (boolean()): When true, this disables the user account in all vaults in the domain.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_user_id_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_user_id_delete(connection, user_id, opts \\ []) do
    optional_params = %{
      :domain => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/objects/users/#{user_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Vault Membership

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `user_id` (String.t): The user id field value.
  - `vault_id` (String.t): The system-managed id field value assigned to each vault in the domain.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_users_user_id_vault_membership_vault_id_put(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_users_user_id_vault_membership_vault_id_put(connection, user_id, vault_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/objects/users/#{user_id}/vault_membership/#{vault_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Vault Compare

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_vault_actions_compare_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_vault_actions_compare_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/vault/actions/compare")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Vault Configuration Report

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec objects_vault_actions_configreport_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def objects_vault_actions_configreport_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/objects/vault/actions/configreport")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Component Definition Query

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec query_components_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def query_components_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/query/components")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Next Page URL

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `next_page` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-DescribeQuery"` (boolean()): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec query_next_page_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def query_next_page_post(connection, next_page, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-DescribeQuery" => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/query/#{next_page}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Submitting a Query

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-DescribeQuery"` (boolean()): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec query_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def query_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-DescribeQuery" => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/query")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Previous Page URL

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `previous_page` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-DescribeQuery"` (boolean()): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec query_previous_page_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def query_previous_page_post(connection, previous_page, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-DescribeQuery" => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/query/#{previous_page}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Current User with SCIM

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:attributes` (String.t): Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes=userName,emails. Note that the schemas and id attributes are always returned.
    - `:excludedAttributes` (String.t): Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes=userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_me_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_me_get(connection, opts \\ []) do
    optional_params = %{
      :attributes => :query,
      :excludedAttributes => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/scim/v2/Me")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Current User with SCIM

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:attributes` (String.t): Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes=userName,emails. Note that the schemas and id attributes are always returned.
    - `:excludedAttributes` (String.t): Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes=userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_me_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_me_put(connection, opts \\ []) do
    optional_params = %{
      :attributes => :query,
      :excludedAttributes => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/scim/v2/Me")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All SCIM Resource Types

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_resource_types_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_resource_types_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/scim/v2/ResourceTypes")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Single SCIM Resource Type

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `type` (String.t): A specific resource type. You can retrieve all available types from the Retrieve All SCIM Resource Types endpoint, where the value for this parameter is the id value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_resource_types_type_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_resource_types_type_get(connection, type, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/scim/v2/ResourceTypes/#{type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All SCIM Schema Information

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_schemas_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_schemas_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/scim/v2/Schemas")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Single SCIM Schema Information

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The ID of a specific schema. For example, urn:ietf:params:scim:schemas:extension:veevavault:2.0:User.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_schemas_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_schemas_id_get(connection, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/scim/v2/Schemas/#{id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve SCIM Provider

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_service_provider_config_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_service_provider_config_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/scim/v2/ServiceProviderConfig")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve SCIM Resources

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `type` (String.t): The resource type to retrieve. You can retrieve all available types from the Retrieve All SCIM Resource Types endpoint, where the value for this parameter is the endpoint value.
  - `opts` (keyword): Optional parameters
    - `:filter` (String.t): Optional: Filter for a specific attribute value. Must be in the format {attribute} eq \"{value}\". For example, to filter for a particular user name, userName eq \"john\". Complex expressions are not supported, and eq is the only supported operator.
    - `:attributes` (String.t): Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes=userName,emails. Note that the schemas and id attributes are always returned.
    - `:excludedAttributes` (String.t): Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes=userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded.
    - `:sortBy` (String.t): Optional: Specify an attribute or sub-attribute to order the response. For example, you can sort by the displayName attribute, or the name.familyName sub-attribute. If omitted, the response is sorted by id. Note that the following attributes are not supported: securityPolicy securityProfile locale preferredLanguage
    - `:sortOrder` (String.t): Optional: Specify the number of query results per page, for example, 10. Negative values are treated as 0, and 0 returns no results except for totalResults. If omitted, defaults to 1000.
    - `:startIndex` (String.t): Optional: Specify the index of the first result. For example, 10 would omit the first 9 results and begin on result 10. Omission, negative values, and 0 is treated as 1.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_type_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_type_get(connection, type, opts \\ []) do
    optional_params = %{
      :filter => :query,
      :attributes => :query,
      :excludedAttributes => :query,
      :sortBy => :query,
      :sortOrder => :query,
      :startIndex => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/scim/v2/#{type}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Single SCIM Resource

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `type` (String.t): The resource type to retrieve. You can retrieve all available types from the Retrieve All SCIM Resource Types endpoint, where the value for this parameter is the endpoint value.
  - `id` (String.t): The ID of the resource to retrieve. You can retrieve all resource IDs from a particular resource type with the Retrieve SCIM Resources endpoint. For example, business_admin__v.
  - `opts` (keyword): Optional parameters
    - `:attributes` (String.t): Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes=userName,emails. Note that the schemas and id attributes are always returned.
    - `:excludedAttributes` (String.t): Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes=userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_type_id_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_type_id_get(connection, type, id, opts \\ []) do
    optional_params = %{
      :attributes => :query,
      :excludedAttributes => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/scim/v2/#{type}/#{id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Users with SCIM

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:filter` (String.t): Optional: Filter for a specific attribute value. Must be in the format {attribute} eq \"{value}\". For example, to filter for a particular user name, userName eq \"john\". Complex expressions are not supported, and eq is the only supported operator.
    - `:attributes` (String.t): Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes=userName,emails. Note that the schemas and id attributes are always returned.
    - `:excludedAttributes` (String.t): Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes=userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded.
    - `:sortBy` (String.t): Optional: Specify an attribute or sub-attribute to order the response. For example, you can sort by the displayName attribute, or the name.familyName sub-attribute. If omitted, the response is sorted by id. Note that the following attributes are not supported: securityPolicy securityProfile locale preferredLanguage
    - `:sortOrder` (String.t): Optional: Specify the order in which the sortBy parameter is applied. Allowed values are ascending or descending. If omitted, defaults to ascending.
    - `:count` (String.t): Optional: Specify the number of query results per page, for example, 10. Negative values are treated as 0, and 0 returns no results except for totalResults. If omitted, defaults to 1000.
    - `:startIndex` (String.t): Optional: Specify the index of the first result. For example, 10 would omit the first 9 results and begin on result 10. Omission, negative values, and 0 is treated as 1.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_users_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_users_get(connection, opts \\ []) do
    optional_params = %{
      :filter => :query,
      :attributes => :query,
      :excludedAttributes => :query,
      :sortBy => :query,
      :sortOrder => :query,
      :count => :query,
      :startIndex => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/scim/v2/Users")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Single User with SCIM

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The id of the user you wish to update.
  - `opts` (keyword): Optional parameters
    - `:filter` (String.t): Optional: Filter for a specific attribute value. Must be in the format {attribute} eq \"{value}\". For example, to filter for a particular user name, userName eq \"john\". Complex expressions are not supported, and eq is the only supported operator.
    - `:attributes` (String.t): Optional: Include specified attributes only. Enter multiple values in a comma separated list. For example, to include only user name and email in the response, attributes=userName,emails. Note that the schemas and id attributes are always returned.
    - `:excludedAttributes` (String.t): Optional: Exclude specific attributes from the response. Enter multiple values in a comma separated list. For example, to exclude user name and email from the response, excludedAttributes=userName,emails. Note that the schemas and id attributes are always returned and cannot be excluded.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_users_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_users_id_get(connection, id, opts \\ []) do
    optional_params = %{
      :filter => :query,
      :attributes => :query,
      :excludedAttributes => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/scim/v2/Users/#{id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update User with SCIM

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `id` (String.t): The id of the user you wish to update.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_users_id_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_users_id_put(connection, id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/scim/v2/Users/#{id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create User with SCIM

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec scim_v2_users_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def scim_v2_users_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/scim/v2/Users")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Signing Certificate

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `cert_id` (String.t): The cert_id is provided in each Spark message in the X-VaultAPISignature-CertificateId header.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_certificate_cert_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_certificate_cert_id_get(connection, cert_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/certificate/#{cert_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Disable Configuration Mode

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_configuration_mode_actions_disable_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_configuration_mode_actions_disable_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/services/configuration_mode/actions/disable")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Enable Configuration Mode

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_configuration_mode_actions_enable_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_configuration_mode_actions_enable_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/services/configuration_mode/actions/enable")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Available Direct Data Files

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:extract_type` (String.t): The Direct Data file type: incremental_directdata, full_directdata, or log_directdata. If omitted, returns all files.
    - `:start_time` (integer()): Specify a time in YYYY-MM-DDTHH:MM:SSZ format. For example, 7AM on January 15, 2024 would use 2024-01-15T07:00:00Z. If omitted, defaults to the Vault’s creation date and time.
    - `:stop_time` (integer()): Specify a time in YYYY-MM-DDTHH:MM:SSZ format. For example, 9AM on January 15, 2024 would use 2024-01-15T09:00:00Z. If omitted, defaults to today’s date and current time.
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_directdata_files_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_directdata_files_get(connection, opts \\ []) do
    optional_params = %{
      :extract_type => :query,
      :start_time => :query,
      :stop_time => :query,
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/directdata/files")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Direct Data File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `name` (String.t): The name of the Direct Data file part. Obtain this from the Retrieve Available Direct Data Files request. For example, 146478-20240213-0000-F.001.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_directdata_files_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_directdata_files_name_get(connection, name, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/directdata/files/#{name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Item Content

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `item` (String.t): The absolute path to a file or folder. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:Range` (String.t): Optional: Specifies a partial range of bytes to include in the upload. Maximum 50 MB. Must be in the format `bytes={min}-{max}`. For example, `bytes=0-1000`.
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_items_content_item_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_items_content_item_get(connection, item, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :Range => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/file_staging/items/content/#{item}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete File or Folder

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `item` (String.t): The absolute path to the file or folder to delete. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory.
  - `opts` (keyword): Optional parameters
    - `:recursive` (String.t): Applicable to deleting folders only. If true, the request will delete the contents of a folder and all subfolders. The default is false.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_items_item_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_items_item_delete(connection, item, opts \\ []) do
    optional_params = %{
      :recursive => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/services/file_staging/items/#{item}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  List Items at a Path

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `item` (String.t): The absolute path to the file or folder to delete. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory.
  - `opts` (keyword): Optional parameters
    - `:recursive` (String.t): If true, the response will contain the contents of all subfolders. If not specified, the default value is false.
    - `:limit` (String.t): Optional: The maximum number of items per page in the response. This can be any value between 1 and 1000. If omitted, the default value is 1000.
    - `:format_result` (String.t): If set to csv, the response includes a job_id. Use the Job ID value to retrieve the status and results of the request.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_items_item_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_items_item_get(connection, item, opts \\ []) do
    optional_params = %{
      :recursive => :query,
      :limit => :query,
      :format_result => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/file_staging/items/#{item}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Folder or File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `item` (String.t): The absolute path to the file or folder to delete. This path is specific to the authenticated user. Admin users can access the root directory. All other users can only access their own user directory.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_items_item_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_items_item_put(connection, item, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/services/file_staging/items/#{item}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Folder or File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-MD5"` (String.t): Optional: The MD5 checksum of the file being uploaded.
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_items_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_items_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-MD5" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/services/file_staging/items")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  List Upload Sessions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_upload_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_upload_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/file_staging/upload/")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Resumable Upload Session

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_upload_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_upload_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/services/file_staging/upload")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Abort Upload Session

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `upload_session_id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_upload_upload_session_id_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_upload_upload_session_id_delete(connection, upload_session_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/services/file_staging/upload/#{upload_session_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Get Upload Session Details

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `upload_session_id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_upload_upload_session_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_upload_upload_session_id_get(connection, upload_session_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/file_staging/upload/#{upload_session_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  List File Parts Uploaded to Session

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `upload_session_id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:limit` (String.t): Optional: The maximum number of items per page in the response. This can be any value between 1 and 1000. If omitted, the default value is 1000.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_upload_upload_session_id_parts_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_upload_upload_session_id_parts_get(connection, upload_session_id, opts \\ []) do
    optional_params = %{
      :limit => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/file_staging/upload/#{upload_session_id}/parts")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Commit Upload Session

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `upload_session_id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_upload_upload_session_id_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_upload_upload_session_id_post(connection, upload_session_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/services/file_staging/upload/#{upload_session_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Upload to a Session

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `upload_session_id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-FilePartNumber"` (String.t): The part number, which uniquely identifies a file part and defines its position within the file as a whole. If a part is uploaded using a part number that has already been used, Vault overwrites the previously uploaded file part. You must upload parts in numerical order. For example, you cannot upload part 3 without first uploading parts 1 and 2.
    - `:"Content-MD5"` (String.t): Optional: The MD5 checksum of the file part being uploaded.
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_file_staging_upload_upload_session_id_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_file_staging_upload_upload_session_id_put(connection, upload_session_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-FilePartNumber" => :headers,
      :"Content-MD5" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/services/file_staging/upload/#{upload_session_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Job Histories

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:start_date` (String.t): Sets the date to start retrieving completed jobs, in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the first completed job.
    - `:end_date` (String.t): Sets the date to end retrieving completed jobs, in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the current date and time.
    - `:status` (String.t): Filter to only retrieve jobs in a certain status. Allowed values are success, errors_encountered, failed_to_run, missed_schedule, cancelled. If omitted, retrieves all statuses.
    - `:limit` (String.t): Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 200. If omitted, defaults to 50.
    - `:offset` (String.t): Paginate the results displayed per page by specifying the amount of offset from the first job history returned. If omitted, defaults to 0. If you are viewing the first 50 results (page 1) and want to see the next page, set this to offset=51.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_jobs_histories_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_jobs_histories_get(connection, opts \\ []) do
    optional_params = %{
      :start_date => :query,
      :end_date => :query,
      :status => :query,
      :limit => :query,
      :offset => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/jobs/histories")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Import Bulk Translation File Job Errors

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The id value of the requested import job. This was returned from the Import Bulk Translation File request.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_jobs_job_id_errors_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_jobs_job_id_errors_get(connection, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/jobs/#{job_id}/errors")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Job Status

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The ID of the job, returned from the original job request.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_jobs_job_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_jobs_job_id_get(connection, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/jobs/#{job_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Import Bulk Translation File Job Summary

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The id value of the requested import job. This was returned from the Import Bulk Translation File request.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_jobs_job_id_summary_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_jobs_job_id_summary_get(connection, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/jobs/#{job_id}/summary")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve SDK Job Tasks

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The ID of the SDK job, returned from the original job request.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_jobs_job_id_tasks_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_jobs_job_id_tasks_get(connection, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/jobs/#{job_id}/tasks")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Job Monitors

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:start_date` (String.t): Sets the date to start retrieving uncompleted jobs, based on the date and time the job instance was created. Value must be in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the first completed job.
    - `:end_date` (String.t): Sets the date to end retrieving uncompleted jobs, based on the date and time the job instance was created. Value must be in the format YYYY-MM-DDTHH:MM:SSZ. For example, for 7AM on January 15, 2016, use 2016-01-15T07:00:00Z. If omitted, defaults to the current date and time.
    - `:status` (String.t): Filter to only retrieve jobs in a certain status. Allowed values are scheduled, queued, running. If omitted, retrieves all statuses.
    - `:limit` (String.t): Paginate the results by specifying the maximum number of jobs per page in the response. This can be any value between 1 and 200. If omitted, defaults to 50.
    - `:offset` (String.t): Paginate the results displayed per page by specifying the amount of offset from the first job instance returned. If omitted, defaults to 0. If you are viewing the first 50 results (page 1) and want to see the next page, set this to offset=51.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_jobs_monitors_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_jobs_monitors_get(connection, opts \\ []) do
    optional_params = %{
      :start_date => :query,
      :end_date => :query,
      :status => :query,
      :limit => :query,
      :offset => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/jobs/monitors")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Start Job

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The ID of the scheduled job instance to start.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_jobs_start_now_job_id_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_jobs_start_now_job_id_post(connection, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/services/jobs/start_now/#{job_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Extract Data Files

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_loader_extract_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_loader_extract_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/services/loader/extract")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Load Failure Log Results

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The id value of the requested extract job.
  - `task_id` (String.t): The id value of the requested extract task.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_loader_job_id_tasks_task_id_failurelog_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_loader_job_id_tasks_task_id_failurelog_get(connection, job_id, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/loader/#{job_id}/tasks/#{task_id}/failurelog")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Loader Extract Results

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The id value of the requested extract job.
  - `task_id` (String.t): The id value of the requested extract task.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_loader_job_id_tasks_task_id_results_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_loader_job_id_tasks_task_id_results_get(connection, job_id, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/loader/#{job_id}/tasks/#{task_id}/results")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Loader Extract Renditions Results

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The id value of the requested extract job.
  - `task_id` (String.t): The id value of the requested extract task.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_loader_job_id_tasks_task_id_results_renditions_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_loader_job_id_tasks_task_id_results_renditions_get(connection, job_id, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/loader/#{job_id}/tasks/#{task_id}/results/renditions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Load Success Log Results

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The id value of the requested extract job.
  - `task_id` (String.t): The id value of the requested extract task.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_loader_job_id_tasks_task_id_successlog_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_loader_job_id_tasks_task_id_successlog_get(connection, job_id, task_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/loader/#{job_id}/tasks/#{task_id}/successlog")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Load Data Objects

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_loader_load_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_loader_load_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/services/loader/load")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Validate Package

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_package_actions_validate_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_package_actions_validate_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/services/package/actions/validate")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Export Package

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_package_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_package_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/services/package")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Import Package

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_package_put(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_package_put(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/services/package")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Queues

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_queues_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_queues_get(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/queues")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Disable Delivery

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `queue_name` (String.t): The name of a specific Queue.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_queues_queue_name_actions_disable_delivery_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_queues_queue_name_actions_disable_delivery_put(connection, queue_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/services/queues/#{queue_name}/actions/disable_delivery")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Enable Delivery

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `queue_name` (String.t): The name of a specific Queue.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_queues_queue_name_actions_enable_delivery_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_queues_queue_name_actions_enable_delivery_put(connection, queue_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/services/queues/#{queue_name}/actions/enable_delivery")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Reset Queue

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `queue_name` (String.t): The name of a specific Queue.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_queues_queue_name_actions_reset_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_queues_queue_name_actions_reset_put(connection, queue_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/services/queues/#{queue_name}/actions/reset")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Queue Status

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `queue_name` (String.t): The name of a specific queue. For example, queue__c.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_queues_queue_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_queues_queue_name_get(connection, queue_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/services/queues/#{queue_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Validate Imported Package

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `package_id` (String.t): The ID of the package to validate. You can find this in the API response of a package import, or in the URL of package in the Vault UI.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec services_vobject_vault_package_v_package_id_actions_validate_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def services_vobject_vault_package_v_package_id_actions_validate_post(connection, package_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/services/vobject/vault_package__v/#{package_id}/actions/validate")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  End Session

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): The Vault sessionId to end.
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec session_delete(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def session_delete(connection, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/session")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Single Client Code Distribution

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `distribution_name` (String.t): The name attribute of the client code distribution to download.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec uicode_distributions_distribution_name_code_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def uicode_distributions_distribution_name_code_get(connection, distribution_name, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/uicode/distributions/#{distribution_name}/code")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Single Client Code Distribution

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `distribution_name` (String.t): The name attribute of the client code distribution to delete.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec uicode_distributions_distribution_name_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def uicode_distributions_distribution_name_delete(connection, distribution_name, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/uicode/distributions/#{distribution_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Single Client Code Distribution Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `distribution_name` (String.t): The name attribute of the client code distribution to delete.
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec uicode_distributions_distribution_name_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def uicode_distributions_distribution_name_get(connection, distribution_name, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/uicode/distributions/#{distribution_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve All Client Code Distribution Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec uicode_distributions_get(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def uicode_distributions_get(connection, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/uicode/distributions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Add or Replace Single Client Code Distribution

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Accept` (String.t): 
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec uicode_distributions_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def uicode_distributions_post(connection, opts \\ []) do
    optional_params = %{
      :Accept => :headers,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/uicode/distributions")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Deploy Package

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `package_id` (String.t): The id field value of the vault_package__v object record used for deployment. See Import Package.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobject_vault_package_v_package_id_actions_deploy_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobject_vault_package_v_package_id_actions_deploy_post(connection, package_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobject/vault_package__v/#{package_id}/actions/deploy")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Package Deploy Results

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `package_id` (String.t): The id field value of the vault_package__v object record used for deployment. See Deploy Package.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobject_vault_package_v_package_id_actions_deploy_results_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobject_vault_package_v_package_id_actions_deploy_results_get(connection, package_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobject/vault_package__v/#{package_id}/actions/deploy/results")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Results of Cascade Delete Job

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `job_status` (String.t): 
  - `job_id` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_cascadedelete_results_object_name_job_status_job_id_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_cascadedelete_results_object_name_job_status_job_id_get(connection, object_name, job_status, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/cascadedelete/results/#{object_name}/#{job_status}/#{job_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Results of Deep Copy Job

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `job_status` (String.t): The ID of the job, retrieved from the response of the job request.
  - `job_id` (String.t): Possible values are success or failure. Find if your job succeeded or failed by retrieving the job status.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_deepcopy_results_object_name_job_status_job_id_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_deepcopy_results_object_name_job_status_job_id_get(connection, object_name, job_status, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/deepcopy/results/#{object_name}/#{job_status}/#{job_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create a Placeholder from an EDL Item

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_edl_item_v_actions_createplaceholder_post(Tesla.Env.client, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_edl_item_v_actions_createplaceholder_post(connection, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/edl_item__v/actions/createplaceholder")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Merge Records Job Log

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The job_id field value returned from the merge operation. You can start merge operations with the Initiate Record Merge API request or with the Vault Java SDK.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_merges_job_id_log_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_merges_job_id_log_get(connection, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/merges/#{job_id}/log")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Record Merge Results

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The job_id field value returned from the merge operation. You can start merge operations with the Initiate Record Merge API request or with the Vault Java SDK.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_merges_job_id_results_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_merges_job_id_results_get(connection, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/merges/#{job_id}/results")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Record Merge Status

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `job_id` (String.t): The job_id field value returned from the merge operation. You can start merge operations with the Initiate Record Merge API request or with the Vault Java SDK.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_merges_job_id_status_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_merges_job_id_status_get(connection, job_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/merges/#{job_id}/status")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Object Action on Multiple Records

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value.
  - `action_name` (String.t): Either the name of the Objectaction or Objectlifecyclestateuseraction to initiate. This is obtained from the Retrieve User Actions request. The format for action_name is Objectaction.vobject.action or Objectlifecyclestateuseraction.vobject.state.action.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_actions_action_name_post(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_actions_action_name_post(connection, object_name, action_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/actions/#{action_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Change Object Type

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The name of the object.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_actions_changetype_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_actions_changetype_post(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/actions/changetype")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Record Merge

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value. For example, account__v. This object must have Enable Merges configured.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.
    - `:body` ([VeevaVaultAPIV251.Model.VobjectsObjectNameActionsMergePostRequestInner.t]): 

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_actions_merge_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_actions_merge_post(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers,
      :body => :body
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/actions/merge")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Roll-up Field Recalculation Status

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The name of the object for which to check the status of a Roll-up field recalculation.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_actions_recalculaterollups_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_actions_recalculaterollups_get(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/actions/recalculaterollups")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Recalculate Roll-up Fields

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The name of the object for which to check the status of a Roll-up field recalculation.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_actions_recalculaterollups_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_actions_recalculaterollups_post(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/actions/recalculaterollups")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Corporate Currency Fields

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_actions_updatecorporatecurrency_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_actions_updatecorporatecurrency_put(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/vobjects/#{object_name}/actions/updatecorporatecurrency")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Multiple Object Record Attachments

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `opts` (keyword): Optional parameters
    - `:idParam` (String.t): 
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_attachments_batch_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_attachments_batch_delete(connection, object_name, opts \\ []) do
    optional_params = %{
      :idParam => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/vobjects/#{object_name}/attachments/batch")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Multiple Object Record Attachments

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_attachments_batch_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_attachments_batch_post(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/attachments/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Multiple Object Record Attachment Descriptions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_attachments_batch_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_attachments_batch_put(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/vobjects/#{object_name}/attachments/batch")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Object Records

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): Can be text/csv or application/json
    - `:Accept` (String.t): Can be text/csv or application/json
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_delete(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/vobjects/#{object_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Object Record Roles

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name.
  - `id` (String.t): The id of the document, binder, or object record.
  - `role_name` (String.t): Optional: Include a role name to filter for a specific role. For example, owner__v.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_id_roles_role_name_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_id_roles_role_name_get(connection, object_name, id, role_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{id}/roles/#{role_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Object User Actions Details

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value.
  - `object_record_id` (String.t): The object record id field value from which to retrieve user actions.
  - `action_name` (String.t): The name of the Objectaction or Objectlifecyclestateuseraction to initiate. You can retrieve this from the Retrieve User Actions request. The format for action_name is Objectaction.vobject.action or Objectlifecyclestateuseraction.vobject.state.action.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_actions_action_name_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_actions_action_name_get(connection, object_name, object_record_id, action_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}/actions/#{action_name}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Initiate Object Action on a Single Record

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value.
  - `object_record_id` (String.t): The object record id field value from which to retrieve user actions.
  - `action_name` (String.t): The name of the Objectaction or Objectlifecyclestateuseraction to initiate. You can retrieve this from the Retrieve User Actions request. The format for action_name is Objectaction.vobject.action or Objectlifecyclestateuseraction.vobject.state.action.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_actions_action_name_post(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_actions_action_name_post(connection, object_name, object_record_id, action_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/#{object_record_id}/actions/#{action_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Cascade Delete Object Record

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_actions_cascadedelete_post(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_actions_cascadedelete_post(connection, object_name, object_record_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/#{object_record_id}/actions/cascadedelete")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Deep Copy Object Record

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_actions_deepcopy_post(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_actions_deepcopy_post(connection, object_name, object_record_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/#{object_record_id}/actions/deepcopy")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Object Record User Actions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value.
  - `object_record_id` (String.t): The object record id field value.
  - `opts` (keyword): Optional parameters
    - `:loc` (boolean()): Optional: When true, retrieves localized (translated) strings for the label. 
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_actions_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_actions_get(connection, object_name, object_record_id, opts \\ []) do
    optional_params = %{
      :loc => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}/actions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Attachment Field File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value. For example, product__v.
  - `object_record_id` (String.t): The object record id field value.
  - `attachment_field_name` (String.t): The name of the Attachment field to update.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get(connection, object_name, object_record_id, attachment_field_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachment_fields/#{attachment_field_name}/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Attachment Field File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value. For example, product__v.
  - `object_record_id` (String.t): The object record id field value.
  - `attachment_field_name` (String.t): The name of the Attachment field to update.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post(connection, object_name, object_record_id, attachment_field_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachment_fields/#{attachment_field_name}/file")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download All Attachment Field Files

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value. For example, product__v.
  - `object_record_id` (String.t): The object record id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachment_fields_file_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachment_fields_file_get(connection, object_name, object_record_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachment_fields/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Object Record Attachment

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachments_attachment_id_delete(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachments_attachment_id_delete(connection, object_name, object_record_id, attachment_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachments/#{attachment_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Object Record Attachment Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachments_attachment_id_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachments_attachment_id_get(connection, object_name, object_record_id, attachment_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachments/#{attachment_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Object Record Attachment Description

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachments_attachment_id_put(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachments_attachment_id_put(connection, object_name, object_record_id, attachment_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachments/#{attachment_id}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Delete Object Record Attachment Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `attachment_version` (String.t): The attachment version__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete(connection, object_name, object_record_id, attachment_id, attachment_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachments/#{attachment_id}/versions/#{attachment_version}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download Object Record Attachment File

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `attachment_version` (String.t): 
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get(connection, object_name, object_record_id, attachment_id, attachment_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachments/#{attachment_id}/versions/#{attachment_version}/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Object Record Attachment Version Metadata

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `attachment_version` (String.t): The attachment version__v field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get(connection, object_name, object_record_id, attachment_id, attachment_version, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachments/#{attachment_id}/versions/#{attachment_version}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Restore Object Record Attachment Version

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `attachment_version` (String.t): The attachment version__v field value.
  - `opts` (keyword): Optional parameters
    - `:restore` (boolean()): 
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post(connection, object_name, object_record_id, attachment_id, attachment_version, opts \\ []) do
    optional_params = %{
      :restore => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachments/#{attachment_id}/versions/#{attachment_version}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Object Record Attachment Versions

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `attachment_id` (String.t): The attachment id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachments_attachment_id_versions_get(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachments_attachment_id_versions_get(connection, object_name, object_record_id, attachment_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachments/#{attachment_id}/versions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Download All Object Record Attachment Files

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachments_file_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachments_file_get(connection, object_name, object_record_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachments/file")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Object Record Attachments

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachments_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachments_get(connection, object_name, object_record_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachments")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create Object Record Attachment

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_attachments_post(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_attachments_post(connection, object_name, object_record_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/#{object_record_id}/attachments")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Complete Audit History for a Single Object Record

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value.
  - `object_record_id` (String.t): The object record id field value from which to retrieve user actions.
  - `opts` (keyword): Optional parameters
    - `:start_date` (String.t): Specify a start date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to the vVault’s creation date. 
    - `:end_date` (String.t): Specify an end date to retrieve audit history. This date cannot be more than 30 days ago. Dates must be YYYY-MM-DDTHH:MM:SSZ format, for example, 7AM on January 15, 2018 would use 2018-01-15T07:00:00Z. If omitted, defaults to today’s date. 
    - `:format_result` (String.t): To request a CSV file of your audit history, use csv. 
    - `:limit` (String.t): Paginate the results by specifying the maximum number of histories per page in the response. This can be any value between 1 and 1000. If omitted, defaults to 200.
    - `:offset` (String.t): Paginate the results displayed per page by specifying the amount of offset from the entry returned. For example, if you are viewing the first 50 results (page 1) and want to see the next page, set this to offset=51. If omitted, defaults to 0.
    - `:events` (String.t): Provide a comma-separated list of one or more audit events to retrieve their audit history. See Vault Help for a full list of object audit events. The values passed to this parameter are case sensitive. For example, events=Copy,Edit,Delete. If omitted, defaults to all audit events.
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_audittrail_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_audittrail_get(connection, object_name, object_record_id, opts \\ []) do
    optional_params = %{
      :start_date => :query,
      :end_date => :query,
      :format_result => :query,
      :limit => :query,
      :offset => :query,
      :events => :query,
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}/audittrail")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Object Record

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `object_record_id` (String.t): The object record id field value.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_object_record_id_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_object_record_id_get(connection, object_name, object_record_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/#{object_name}/#{object_record_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Create & Upsert Object Records

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `opts` (keyword): Optional parameters
    - `:idParam` (String.t): To upsert object records, add `idParam={field_name}` to the request endpoint. You can use any object field which has `unique` set to `true` in the object metadata. For example, `idParam=external_id__v`.
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): Can be text/csv or application/json
    - `:Accept` (String.t): Can be text/csv or application/json
    - `:"X-VaultAPI-MigrationMode"` (boolean()): If set to `true`, Vault allows you to create or update object records in a noninitial state and with minimal validation, create inactive records, and set standard and system-managed fields such as `created_by__v`. Does not bypass record triggers. Use the `X-VaultAPI-NoTriggers` header to bypass all standard and custom SDK triggers. You must have the Record Migration permission to use this header.
    - `:"X-VaultAPI-NoTriggers"` (boolean()): If set to `true` and Record Migration Mode is enabled, it bypasses all standard and custom SDK triggers.
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_post(connection, object_name, opts \\ []) do
    optional_params = %{
      :idParam => :query,
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-MigrationMode" => :headers,
      :"X-VaultAPI-NoTriggers" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Update Object Records

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The object name__v field value (product__v, country__v, custom_object__c, etc.).
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:"Content-Type"` (String.t): Can be text/csv or application/json
    - `:Accept` (String.t): Can be text/csv or application/json
    - `:"X-VaultAPI-MigrationMode"` (boolean()): If set to `true`, Vault allows you to update object records in a noninitial state and with minimal validation, create inactive records, and set standard and system-managed fields such as `created_by__v`. Does not bypass record triggers. Use the `X-VaultAPI-NoTriggers` header to bypass all standard and custom SDK triggers. You must have the Record Migration permission to use this header.
    - `:"X-VaultAPI-NoTriggers"` (boolean()): If set to `true` and Record Migration Mode is enabled, it bypasses all standard and custom SDK triggers.
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_put(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :"Content-Type" => :headers,
      :Accept => :headers,
      :"X-VaultAPI-MigrationMode" => :headers,
      :"X-VaultAPI-NoTriggers" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:put)
      |> url("/vobjects/#{object_name}")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Remove Users & Groups from Roles on Object Records

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The name of the object where you want to remove roles.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_roles_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_roles_delete(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/vobjects/#{object_name}/roles")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Assign Users & Groups to Roles on Object Records

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `object_name` (String.t): The name of the object where you want to remove roles.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"Content-Type"` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_object_name_roles_post(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_object_name_roles_post(connection, object_name, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"Content-Type" => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:post)
      |> url("/vobjects/#{object_name}/roles")
      |> add_optional_params(optional_params, opts)
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end

  @doc """
  Retrieve Outbound Package Dependencies

  ### Parameters

  - `connection` (VeevaVaultAPIV251.Connection): Connection to server
  - `package_id` (String.t): The ID of the outbound_package__v record from which to retrieve dependencies.
  - `opts` (keyword): Optional parameters
    - `:Authorization` (String.t): 
    - `:Accept` (String.t): 
    - `:"X-VaultAPI-ClientID"` (String.t): Include a Client ID to identify this request. This ID appears in the API Usage Logs, which is avaiable to download from Admin > Logs > API Usage Logs or through the Vault REST API with the Download Daily API Usage request. If omitted, the value will appear as `unknown` in the API Usage Log.

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec vobjects_outbound_package_v_package_id_dependencies_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def vobjects_outbound_package_v_package_id_dependencies_get(connection, package_id, opts \\ []) do
    optional_params = %{
      :Authorization => :headers,
      :Accept => :headers,
      :"X-VaultAPI-ClientID" => :headers
    }

    request =
      %{}
      |> method(:get)
      |> url("/vobjects/outbound_package__v/#{package_id}/dependencies")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, false}
    ])
  end
end
