/**
 * Veeva Vault API v25.1
 * The latest GA version of the Vault REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VeevaVaultApiV251);
  }
}(this, function(expect, VeevaVaultApiV251) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VeevaVaultApiV251.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('apiGet', function() {
      it('should call apiGet successfully', function(done) {
        //uncomment below and update the code to test apiGet
        //instance.apiGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiMdlComponentsComponentTypeAndRecordNameFilesGet', function() {
      it('should call apiMdlComponentsComponentTypeAndRecordNameFilesGet successfully', function(done) {
        //uncomment below and update the code to test apiMdlComponentsComponentTypeAndRecordNameFilesGet
        //instance.apiMdlComponentsComponentTypeAndRecordNameFilesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiMdlComponentsComponentTypeAndRecordNameGet', function() {
      it('should call apiMdlComponentsComponentTypeAndRecordNameGet successfully', function(done) {
        //uncomment below and update the code to test apiMdlComponentsComponentTypeAndRecordNameGet
        //instance.apiMdlComponentsComponentTypeAndRecordNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiMdlExecuteAsyncJobIdResultsGet', function() {
      it('should call apiMdlExecuteAsyncJobIdResultsGet successfully', function(done) {
        //uncomment below and update the code to test apiMdlExecuteAsyncJobIdResultsGet
        //instance.apiMdlExecuteAsyncJobIdResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiMdlExecuteAsyncPost', function() {
      it('should call apiMdlExecuteAsyncPost successfully', function(done) {
        //uncomment below and update the code to test apiMdlExecuteAsyncPost
        //instance.apiMdlExecuteAsyncPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiMdlExecutePost', function() {
      it('should call apiMdlExecutePost successfully', function(done) {
        //uncomment below and update the code to test apiMdlExecutePost
        //instance.apiMdlExecutePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiMdlFilesPost', function() {
      it('should call apiMdlFilesPost successfully', function(done) {
        //uncomment below and update the code to test apiMdlFilesPost
        //instance.apiMdlFilesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('audittrailAuditTrailTypeGet', function() {
      it('should call audittrailAuditTrailTypeGet successfully', function(done) {
        //uncomment below and update the code to test audittrailAuditTrailTypeGet
        //instance.audittrailAuditTrailTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authDiscoveryPost', function() {
      it('should call authDiscoveryPost successfully', function(done) {
        //uncomment below and update the code to test authDiscoveryPost
        //instance.authDiscoveryPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authOauthSessionOathOidcProfileIdPost', function() {
      it('should call authOauthSessionOathOidcProfileIdPost successfully', function(done) {
        //uncomment below and update the code to test authOauthSessionOathOidcProfileIdPost
        //instance.authOauthSessionOathOidcProfileIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authPost', function() {
      it('should call authPost successfully', function(done) {
        //uncomment below and update the code to test authPost
        //instance.authPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('codeClassNameDelete', function() {
      it('should call codeClassNameDelete successfully', function(done) {
        //uncomment below and update the code to test codeClassNameDelete
        //instance.codeClassNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('codeClassNameDisablePut', function() {
      it('should call codeClassNameDisablePut successfully', function(done) {
        //uncomment below and update the code to test codeClassNameDisablePut
        //instance.codeClassNameDisablePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('codeClassNameEnablePut', function() {
      it('should call codeClassNameEnablePut successfully', function(done) {
        //uncomment below and update the code to test codeClassNameEnablePut
        //instance.codeClassNameEnablePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('codeClassNameGet', function() {
      it('should call codeClassNameGet successfully', function(done) {
        //uncomment below and update the code to test codeClassNameGet
        //instance.codeClassNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('codeProfilerGet', function() {
      it('should call codeProfilerGet successfully', function(done) {
        //uncomment below and update the code to test codeProfilerGet
        //instance.codeProfilerGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('codeProfilerPost', function() {
      it('should call codeProfilerPost successfully', function(done) {
        //uncomment below and update the code to test codeProfilerPost
        //instance.codeProfilerPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('codeProfilerSessionNameActionsEndPost', function() {
      it('should call codeProfilerSessionNameActionsEndPost successfully', function(done) {
        //uncomment below and update the code to test codeProfilerSessionNameActionsEndPost
        //instance.codeProfilerSessionNameActionsEndPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('codeProfilerSessionNameDelete', function() {
      it('should call codeProfilerSessionNameDelete successfully', function(done) {
        //uncomment below and update the code to test codeProfilerSessionNameDelete
        //instance.codeProfilerSessionNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('codeProfilerSessionNameGet', function() {
      it('should call codeProfilerSessionNameGet successfully', function(done) {
        //uncomment below and update the code to test codeProfilerSessionNameGet
        //instance.codeProfilerSessionNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('codeProfilerSessionNameResultsGet', function() {
      it('should call codeProfilerSessionNameResultsGet successfully', function(done) {
        //uncomment below and update the code to test codeProfilerSessionNameResultsGet
        //instance.codeProfilerSessionNameResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('codePut', function() {
      it('should call codePut successfully', function(done) {
        //uncomment below and update the code to test codePut
        //instance.codePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('compositesTreesEdlHierarchyOrTemplateActionsListnodesPost', function() {
      it('should call compositesTreesEdlHierarchyOrTemplateActionsListnodesPost successfully', function(done) {
        //uncomment below and update the code to test compositesTreesEdlHierarchyOrTemplateActionsListnodesPost
        //instance.compositesTreesEdlHierarchyOrTemplateActionsListnodesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('compositesTreesEdlHierarchyOrTemplateGet', function() {
      it('should call compositesTreesEdlHierarchyOrTemplateGet successfully', function(done) {
        //uncomment below and update the code to test compositesTreesEdlHierarchyOrTemplateGet
        //instance.compositesTreesEdlHierarchyOrTemplateGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('compositesTreesEdlHierarchyVParentNodeIdChildrenGet', function() {
      it('should call compositesTreesEdlHierarchyVParentNodeIdChildrenGet successfully', function(done) {
        //uncomment below and update the code to test compositesTreesEdlHierarchyVParentNodeIdChildrenGet
        //instance.compositesTreesEdlHierarchyVParentNodeIdChildrenGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('compositesTreesEdlHierarchyVParentNodeIdChildrenPut', function() {
      it('should call compositesTreesEdlHierarchyVParentNodeIdChildrenPut successfully', function(done) {
        //uncomment below and update the code to test compositesTreesEdlHierarchyVParentNodeIdChildrenPut
        //instance.compositesTreesEdlHierarchyVParentNodeIdChildrenPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationComponentTypeAndRecordNameGet', function() {
      it('should call configurationComponentTypeAndRecordNameGet successfully', function(done) {
        //uncomment below and update the code to test configurationComponentTypeAndRecordNameGet
        //instance.configurationComponentTypeAndRecordNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationComponentTypeGet', function() {
      it('should call configurationComponentTypeGet successfully', function(done) {
        //uncomment below and update the code to test configurationComponentTypeGet
        //instance.configurationComponentTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationObjectNameAndObjectTypeGet', function() {
      it('should call configurationObjectNameAndObjectTypeGet successfully', function(done) {
        //uncomment below and update the code to test configurationObjectNameAndObjectTypeGet
        //instance.configurationObjectNameAndObjectTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationObjecttypeGet', function() {
      it('should call configurationObjecttypeGet successfully', function(done) {
        //uncomment below and update the code to test configurationObjecttypeGet
        //instance.configurationObjecttypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationRoleAssignmentRuleDelete', function() {
      it('should call configurationRoleAssignmentRuleDelete successfully', function(done) {
        //uncomment below and update the code to test configurationRoleAssignmentRuleDelete
        //instance.configurationRoleAssignmentRuleDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationRoleAssignmentRuleGet', function() {
      it('should call configurationRoleAssignmentRuleGet successfully', function(done) {
        //uncomment below and update the code to test configurationRoleAssignmentRuleGet
        //instance.configurationRoleAssignmentRuleGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationRoleAssignmentRulePost', function() {
      it('should call configurationRoleAssignmentRulePost successfully', function(done) {
        //uncomment below and update the code to test configurationRoleAssignmentRulePost
        //instance.configurationRoleAssignmentRulePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('configurationRoleAssignmentRulePut', function() {
      it('should call configurationRoleAssignmentRulePut successfully', function(done) {
        //uncomment below and update the code to test configurationRoleAssignmentRulePut
        //instance.configurationRoleAssignmentRulePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('delegationLoginPost', function() {
      it('should call delegationLoginPost successfully', function(done) {
        //uncomment below and update the code to test delegationLoginPost
        //instance.delegationLoginPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('delegationVaultsGet', function() {
      it('should call delegationVaultsGet successfully', function(done) {
        //uncomment below and update the code to test delegationVaultsGet
        //instance.delegationVaultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('keepAlivePost', function() {
      it('should call keepAlivePost successfully', function(done) {
        //uncomment below and update the code to test keepAlivePost
        //instance.keepAlivePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('limitsGet', function() {
      it('should call limitsGet successfully', function(done) {
        //uncomment below and update the code to test limitsGet
        //instance.limitsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logsApiUsageGet', function() {
      it('should call logsApiUsageGet successfully', function(done) {
        //uncomment below and update the code to test logsApiUsageGet
        //instance.logsApiUsageGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logsCodeDebugGet', function() {
      it('should call logsCodeDebugGet successfully', function(done) {
        //uncomment below and update the code to test logsCodeDebugGet
        //instance.logsCodeDebugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logsCodeDebugIdActionsResetDelete', function() {
      it('should call logsCodeDebugIdActionsResetDelete successfully', function(done) {
        //uncomment below and update the code to test logsCodeDebugIdActionsResetDelete
        //instance.logsCodeDebugIdActionsResetDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logsCodeDebugIdActionsResetPost', function() {
      it('should call logsCodeDebugIdActionsResetPost successfully', function(done) {
        //uncomment below and update the code to test logsCodeDebugIdActionsResetPost
        //instance.logsCodeDebugIdActionsResetPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logsCodeDebugIdFilesGet', function() {
      it('should call logsCodeDebugIdFilesGet successfully', function(done) {
        //uncomment below and update the code to test logsCodeDebugIdFilesGet
        //instance.logsCodeDebugIdFilesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logsCodeDebugIdGet', function() {
      it('should call logsCodeDebugIdGet successfully', function(done) {
        //uncomment below and update the code to test logsCodeDebugIdGet
        //instance.logsCodeDebugIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logsCodeDebugPost', function() {
      it('should call logsCodeDebugPost successfully', function(done) {
        //uncomment below and update the code to test logsCodeDebugPost
        //instance.logsCodeDebugPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logsCodeRuntimeGet', function() {
      it('should call logsCodeRuntimeGet successfully', function(done) {
        //uncomment below and update the code to test logsCodeRuntimeGet
        //instance.logsCodeRuntimeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesMessageTypeActionsImportPost', function() {
      it('should call messagesMessageTypeActionsImportPost successfully', function(done) {
        //uncomment below and update the code to test messagesMessageTypeActionsImportPost
        //instance.messagesMessageTypeActionsImportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesMessageTypeLanguageLangActionsExportPost', function() {
      it('should call messagesMessageTypeLanguageLangActionsExportPost successfully', function(done) {
        //uncomment below and update the code to test messagesMessageTypeLanguageLangActionsExportPost
        //instance.messagesMessageTypeLanguageLangActionsExportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataAudittrailAuditTrailTypeGet', function() {
      it('should call metadataAudittrailAuditTrailTypeGet successfully', function(done) {
        //uncomment below and update the code to test metadataAudittrailAuditTrailTypeGet
        //instance.metadataAudittrailAuditTrailTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataAudittrailGet', function() {
      it('should call metadataAudittrailGet successfully', function(done) {
        //uncomment below and update the code to test metadataAudittrailGet
        //instance.metadataAudittrailGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataComponentsComponentTypeGet', function() {
      it('should call metadataComponentsComponentTypeGet successfully', function(done) {
        //uncomment below and update the code to test metadataComponentsComponentTypeGet
        //instance.metadataComponentsComponentTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataComponentsGet', function() {
      it('should call metadataComponentsGet successfully', function(done) {
        //uncomment below and update the code to test metadataComponentsGet
        //instance.metadataComponentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsBindersTemplatesBindernodesGet', function() {
      it('should call metadataObjectsBindersTemplatesBindernodesGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsBindersTemplatesBindernodesGet
        //instance.metadataObjectsBindersTemplatesBindernodesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsBindersTemplatesGet', function() {
      it('should call metadataObjectsBindersTemplatesGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsBindersTemplatesGet
        //instance.metadataObjectsBindersTemplatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGet', function() {
      it('should call metadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGet
        //instance.metadataObjectsDocumentsAnnotationsPlacemarksTypesPlacemarkTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGet', function() {
      it('should call metadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGet
        //instance.metadataObjectsDocumentsAnnotationsReferencesTypesReferenceTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsAnnotationsTypesAnnotationTypeGet', function() {
      it('should call metadataObjectsDocumentsAnnotationsTypesAnnotationTypeGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsAnnotationsTypesAnnotationTypeGet
        //instance.metadataObjectsDocumentsAnnotationsTypesAnnotationTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGet', function() {
      it('should call metadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGet
        //instance.metadataObjectsDocumentsEventsEventTypeTypesEventSubtypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsEventsGet', function() {
      it('should call metadataObjectsDocumentsEventsGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsEventsGet
        //instance.metadataObjectsDocumentsEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsLockGet', function() {
      it('should call metadataObjectsDocumentsLockGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsLockGet
        //instance.metadataObjectsDocumentsLockGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsPropertiesFindCommonPost', function() {
      it('should call metadataObjectsDocumentsPropertiesFindCommonPost successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsPropertiesFindCommonPost
        //instance.metadataObjectsDocumentsPropertiesFindCommonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsPropertiesGet', function() {
      it('should call metadataObjectsDocumentsPropertiesGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsPropertiesGet
        //instance.metadataObjectsDocumentsPropertiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsTemplatesGet', function() {
      it('should call metadataObjectsDocumentsTemplatesGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsTemplatesGet
        //instance.metadataObjectsDocumentsTemplatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsTypesGet', function() {
      it('should call metadataObjectsDocumentsTypesGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsTypesGet
        //instance.metadataObjectsDocumentsTypesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsTypesTypeGet', function() {
      it('should call metadataObjectsDocumentsTypesTypeGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsTypesTypeGet
        //instance.metadataObjectsDocumentsTypesTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsTypesTypeRelationshipsGet', function() {
      it('should call metadataObjectsDocumentsTypesTypeRelationshipsGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsTypesTypeRelationshipsGet
        //instance.metadataObjectsDocumentsTypesTypeRelationshipsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGet', function() {
      it('should call metadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGet
        //instance.metadataObjectsDocumentsTypesTypeSubtypesSubtypeClassificationsClassificationGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsDocumentsTypesTypeSubtypesSubtypeGet', function() {
      it('should call metadataObjectsDocumentsTypesTypeSubtypesSubtypeGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsDocumentsTypesTypeSubtypesSubtypeGet
        //instance.metadataObjectsDocumentsTypesTypeSubtypesSubtypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsGroupsGet', function() {
      it('should call metadataObjectsGroupsGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsGroupsGet
        //instance.metadataObjectsGroupsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsSecuritypoliciesGet', function() {
      it('should call metadataObjectsSecuritypoliciesGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsSecuritypoliciesGet
        //instance.metadataObjectsSecuritypoliciesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataObjectsUsersGet', function() {
      it('should call metadataObjectsUsersGet successfully', function(done) {
        //uncomment below and update the code to test metadataObjectsUsersGet
        //instance.metadataObjectsUsersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGet', function() {
      it('should call metadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGet successfully', function(done) {
        //uncomment below and update the code to test metadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGet
        //instance.metadataQueryArchivedDocumentsRelationshipsDocumentSignatureSysrGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataQueryDocumentsRelationshipsDocumentSignatureSysrGet', function() {
      it('should call metadataQueryDocumentsRelationshipsDocumentSignatureSysrGet successfully', function(done) {
        //uncomment below and update the code to test metadataQueryDocumentsRelationshipsDocumentSignatureSysrGet
        //instance.metadataQueryDocumentsRelationshipsDocumentSignatureSysrGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataVobjectsGet', function() {
      it('should call metadataVobjectsGet successfully', function(done) {
        //uncomment below and update the code to test metadataVobjectsGet
        //instance.metadataVobjectsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataVobjectsObjectNameActionsCanceldeploymentPost', function() {
      it('should call metadataVobjectsObjectNameActionsCanceldeploymentPost successfully', function(done) {
        //uncomment below and update the code to test metadataVobjectsObjectNameActionsCanceldeploymentPost
        //instance.metadataVobjectsObjectNameActionsCanceldeploymentPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataVobjectsObjectNameFieldsObjectFieldNameGet', function() {
      it('should call metadataVobjectsObjectNameFieldsObjectFieldNameGet successfully', function(done) {
        //uncomment below and update the code to test metadataVobjectsObjectNameFieldsObjectFieldNameGet
        //instance.metadataVobjectsObjectNameFieldsObjectFieldNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataVobjectsObjectNameGet', function() {
      it('should call metadataVobjectsObjectNameGet successfully', function(done) {
        //uncomment below and update the code to test metadataVobjectsObjectNameGet
        //instance.metadataVobjectsObjectNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataVobjectsObjectNamePageLayoutsGet', function() {
      it('should call metadataVobjectsObjectNamePageLayoutsGet successfully', function(done) {
        //uncomment below and update the code to test metadataVobjectsObjectNamePageLayoutsGet
        //instance.metadataVobjectsObjectNamePageLayoutsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataVobjectsObjectNamePageLayoutsLayoutNameGet', function() {
      it('should call metadataVobjectsObjectNamePageLayoutsLayoutNameGet successfully', function(done) {
        //uncomment below and update the code to test metadataVobjectsObjectNamePageLayoutsLayoutNameGet
        //instance.metadataVobjectsObjectNamePageLayoutsLayoutNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('notificationsHistoriesGet', function() {
      it('should call notificationsHistoriesGet successfully', function(done) {
        //uncomment below and update the code to test notificationsHistoriesGet
        //instance.notificationsHistoriesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectWorkflowActionsActionGet', function() {
      it('should call objectWorkflowActionsActionGet successfully', function(done) {
        //uncomment below and update the code to test objectWorkflowActionsActionGet
        //instance.objectWorkflowActionsActionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectWorkflowActionsActionPost', function() {
      it('should call objectWorkflowActionsActionPost successfully', function(done) {
        //uncomment below and update the code to test objectWorkflowActionsActionPost
        //instance.objectWorkflowActionsActionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectWorkflowActionsCanceltasksPost', function() {
      it('should call objectWorkflowActionsCanceltasksPost successfully', function(done) {
        //uncomment below and update the code to test objectWorkflowActionsCanceltasksPost
        //instance.objectWorkflowActionsCanceltasksPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectWorkflowActionsCancelworkflowsPost', function() {
      it('should call objectWorkflowActionsCancelworkflowsPost successfully', function(done) {
        //uncomment below and update the code to test objectWorkflowActionsCancelworkflowsPost
        //instance.objectWorkflowActionsCancelworkflowsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectWorkflowActionsGet', function() {
      it('should call objectWorkflowActionsGet successfully', function(done) {
        //uncomment below and update the code to test objectWorkflowActionsGet
        //instance.objectWorkflowActionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectWorkflowActionsReassigntasksPost', function() {
      it('should call objectWorkflowActionsReassigntasksPost successfully', function(done) {
        //uncomment below and update the code to test objectWorkflowActionsReassigntasksPost
        //instance.objectWorkflowActionsReassigntasksPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectWorkflowActionsReplaceworkflowownerPost', function() {
      it('should call objectWorkflowActionsReplaceworkflowownerPost successfully', function(done) {
        //uncomment below and update the code to test objectWorkflowActionsReplaceworkflowownerPost
        //instance.objectWorkflowActionsReplaceworkflowownerPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersActionsExportJobIdResultsGet', function() {
      it('should call objectsBindersActionsExportJobIdResultsGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersActionsExportJobIdResultsGet
        //instance.objectsBindersActionsExportJobIdResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdActionsExportPost', function() {
      it('should call objectsBindersBinderIdActionsExportPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdActionsExportPost
        //instance.objectsBindersBinderIdActionsExportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdActionsPost', function() {
      it('should call objectsBindersBinderIdActionsPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdActionsPost
        //instance.objectsBindersBinderIdActionsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdBindingRulePut', function() {
      it('should call objectsBindersBinderIdBindingRulePut successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdBindingRulePut
        //instance.objectsBindersBinderIdBindingRulePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdDelete', function() {
      it('should call objectsBindersBinderIdDelete successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdDelete
        //instance.objectsBindersBinderIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdDocumentsNodeIdBindingRulePut', function() {
      it('should call objectsBindersBinderIdDocumentsNodeIdBindingRulePut successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdDocumentsNodeIdBindingRulePut
        //instance.objectsBindersBinderIdDocumentsNodeIdBindingRulePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdDocumentsPost', function() {
      it('should call objectsBindersBinderIdDocumentsPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdDocumentsPost
        //instance.objectsBindersBinderIdDocumentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdDocumentsSectionIdDelete', function() {
      it('should call objectsBindersBinderIdDocumentsSectionIdDelete successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdDocumentsSectionIdDelete
        //instance.objectsBindersBinderIdDocumentsSectionIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdDocumentsSectionIdPut', function() {
      it('should call objectsBindersBinderIdDocumentsSectionIdPut successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdDocumentsSectionIdPut
        //instance.objectsBindersBinderIdDocumentsSectionIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdGet', function() {
      it('should call objectsBindersBinderIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdGet
        //instance.objectsBindersBinderIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdPost', function() {
      it('should call objectsBindersBinderIdPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdPost
        //instance.objectsBindersBinderIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdPut', function() {
      it('should call objectsBindersBinderIdPut successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdPut
        //instance.objectsBindersBinderIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDelete', function() {
      it('should call objectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDelete successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDelete
        //instance.objectsBindersBinderIdRolesRoleNameAndUserOrGroupIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdSectionsNodeIdBindingRulePut', function() {
      it('should call objectsBindersBinderIdSectionsNodeIdBindingRulePut successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdSectionsNodeIdBindingRulePut
        //instance.objectsBindersBinderIdSectionsNodeIdBindingRulePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdSectionsNodeIdPut', function() {
      it('should call objectsBindersBinderIdSectionsNodeIdPut successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdSectionsNodeIdPut
        //instance.objectsBindersBinderIdSectionsNodeIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdSectionsPost', function() {
      it('should call objectsBindersBinderIdSectionsPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdSectionsPost
        //instance.objectsBindersBinderIdSectionsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdSectionsSectionIdDelete', function() {
      it('should call objectsBindersBinderIdSectionsSectionIdDelete successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdSectionsSectionIdDelete
        //instance.objectsBindersBinderIdSectionsSectionIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdSectionsSectionIdGet', function() {
      it('should call objectsBindersBinderIdSectionsSectionIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdSectionsSectionIdGet
        //instance.objectsBindersBinderIdSectionsSectionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdVersionsGet', function() {
      it('should call objectsBindersBinderIdVersionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdVersionsGet
        //instance.objectsBindersBinderIdVersionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPost', function() {
      it('should call objectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPost
        //instance.objectsBindersBinderIdVersionsMajorVersionMinorVersionActionsExportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdVersionsMajorVersionMinorVersionDelete', function() {
      it('should call objectsBindersBinderIdVersionsMajorVersionMinorVersionDelete successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdVersionsMajorVersionMinorVersionDelete
        //instance.objectsBindersBinderIdVersionsMajorVersionMinorVersionDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdVersionsMajorVersionMinorVersionGet', function() {
      it('should call objectsBindersBinderIdVersionsMajorVersionMinorVersionGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdVersionsMajorVersionMinorVersionGet
        //instance.objectsBindersBinderIdVersionsMajorVersionMinorVersionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdVersionsMajorVersionMinorVersionPut', function() {
      it('should call objectsBindersBinderIdVersionsMajorVersionMinorVersionPut successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdVersionsMajorVersionMinorVersionPut
        //instance.objectsBindersBinderIdVersionsMajorVersionMinorVersionPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPost', function() {
      it('should call objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPost
        //instance.objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete', function() {
      it('should call objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete
        //instance.objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet', function() {
      it('should call objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet
        //instance.objectsBindersBinderIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGet', function() {
      it('should call objectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGet
        //instance.objectsBindersBinderIdVersionsMajorVersionMinorVersionSectionsSectionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersIdRolesGet', function() {
      it('should call objectsBindersIdRolesGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersIdRolesGet
        //instance.objectsBindersIdRolesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersIdRolesPost', function() {
      it('should call objectsBindersIdRolesPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersIdRolesPost
        //instance.objectsBindersIdRolesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersIdRolesRoleNameGet', function() {
      it('should call objectsBindersIdRolesRoleNameGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersIdRolesRoleNameGet
        //instance.objectsBindersIdRolesRoleNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGet', function() {
      it('should call objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGet
        //instance.objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet', function() {
      it('should call objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet
        //instance.objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut', function() {
      it('should call objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut successfully', function(done) {
        //uncomment below and update the code to test objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut
        //instance.objectsBindersIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersLifecycleActionsPost', function() {
      it('should call objectsBindersLifecycleActionsPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersLifecycleActionsPost
        //instance.objectsBindersLifecycleActionsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersLifecycleActionsUserActionNamePut', function() {
      it('should call objectsBindersLifecycleActionsUserActionNamePut successfully', function(done) {
        //uncomment below and update the code to test objectsBindersLifecycleActionsUserActionNamePut
        //instance.objectsBindersLifecycleActionsUserActionNamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersPost', function() {
      it('should call objectsBindersPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersPost
        //instance.objectsBindersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersTemplatesGet', function() {
      it('should call objectsBindersTemplatesGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersTemplatesGet
        //instance.objectsBindersTemplatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersTemplatesPost', function() {
      it('should call objectsBindersTemplatesPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersTemplatesPost
        //instance.objectsBindersTemplatesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersTemplatesPut', function() {
      it('should call objectsBindersTemplatesPut successfully', function(done) {
        //uncomment below and update the code to test objectsBindersTemplatesPut
        //instance.objectsBindersTemplatesPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersTemplatesTemplateNameBindernodesGet', function() {
      it('should call objectsBindersTemplatesTemplateNameBindernodesGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersTemplatesTemplateNameBindernodesGet
        //instance.objectsBindersTemplatesTemplateNameBindernodesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersTemplatesTemplateNameBindernodesPost', function() {
      it('should call objectsBindersTemplatesTemplateNameBindernodesPost successfully', function(done) {
        //uncomment below and update the code to test objectsBindersTemplatesTemplateNameBindernodesPost
        //instance.objectsBindersTemplatesTemplateNameBindernodesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersTemplatesTemplateNameBindernodesPut', function() {
      it('should call objectsBindersTemplatesTemplateNameBindernodesPut successfully', function(done) {
        //uncomment below and update the code to test objectsBindersTemplatesTemplateNameBindernodesPut
        //instance.objectsBindersTemplatesTemplateNameBindernodesPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersTemplatesTemplateNameDelete', function() {
      it('should call objectsBindersTemplatesTemplateNameDelete successfully', function(done) {
        //uncomment below and update the code to test objectsBindersTemplatesTemplateNameDelete
        //instance.objectsBindersTemplatesTemplateNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsBindersTemplatesTemplateNameGet', function() {
      it('should call objectsBindersTemplatesTemplateNameGet successfully', function(done) {
        //uncomment below and update the code to test objectsBindersTemplatesTemplateNameGet
        //instance.objectsBindersTemplatesTemplateNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDeletionsDocumentsGet', function() {
      it('should call objectsDeletionsDocumentsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDeletionsDocumentsGet
        //instance.objectsDeletionsDocumentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDeletionsVobjectsObjectNameGet', function() {
      it('should call objectsDeletionsVobjectsObjectNameGet successfully', function(done) {
        //uncomment below and update the code to test objectsDeletionsVobjectsObjectNameGet
        //instance.objectsDeletionsVobjectsObjectNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsActionsGet', function() {
      it('should call objectsDocumentsActionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsActionsGet
        //instance.objectsDocumentsActionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGet', function() {
      it('should call objectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGet
        //instance.objectsDocumentsActionsLifecycleAndStateAndActionJobIdResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsActionsWorkflowNameGet', function() {
      it('should call objectsDocumentsActionsWorkflowNameGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsActionsWorkflowNameGet
        //instance.objectsDocumentsActionsWorkflowNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsActionsWorkflowNamePost', function() {
      it('should call objectsDocumentsActionsWorkflowNamePost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsActionsWorkflowNamePost
        //instance.objectsDocumentsActionsWorkflowNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsAnnotationsBatchDelete', function() {
      it('should call objectsDocumentsAnnotationsBatchDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsAnnotationsBatchDelete
        //instance.objectsDocumentsAnnotationsBatchDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsAnnotationsBatchPost', function() {
      it('should call objectsDocumentsAnnotationsBatchPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsAnnotationsBatchPost
        //instance.objectsDocumentsAnnotationsBatchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsAnnotationsBatchPut', function() {
      it('should call objectsDocumentsAnnotationsBatchPut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsAnnotationsBatchPut
        //instance.objectsDocumentsAnnotationsBatchPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsAnnotationsRepliesBatchPost', function() {
      it('should call objectsDocumentsAnnotationsRepliesBatchPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsAnnotationsRepliesBatchPost
        //instance.objectsDocumentsAnnotationsRepliesBatchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsAttachmentsBatchDelete', function() {
      it('should call objectsDocumentsAttachmentsBatchDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsAttachmentsBatchDelete
        //instance.objectsDocumentsAttachmentsBatchDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsAttachmentsBatchPost', function() {
      it('should call objectsDocumentsAttachmentsBatchPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsAttachmentsBatchPost
        //instance.objectsDocumentsAttachmentsBatchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsAttachmentsBatchPut', function() {
      it('should call objectsDocumentsAttachmentsBatchPut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsAttachmentsBatchPut
        //instance.objectsDocumentsAttachmentsBatchPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsBatchActionsFileextractJobIdResultsGet', function() {
      it('should call objectsDocumentsBatchActionsFileextractJobIdResultsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsBatchActionsFileextractJobIdResultsGet
        //instance.objectsDocumentsBatchActionsFileextractJobIdResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsBatchActionsFileextractPost', function() {
      it('should call objectsDocumentsBatchActionsFileextractPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsBatchActionsFileextractPost
        //instance.objectsDocumentsBatchActionsFileextractPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsBatchActionsReclassifyPut', function() {
      it('should call objectsDocumentsBatchActionsReclassifyPut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsBatchActionsReclassifyPut
        //instance.objectsDocumentsBatchActionsReclassifyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsBatchActionsRerenderPost', function() {
      it('should call objectsDocumentsBatchActionsRerenderPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsBatchActionsRerenderPost
        //instance.objectsDocumentsBatchActionsRerenderPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsBatchDelete', function() {
      it('should call objectsDocumentsBatchDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsBatchDelete
        //instance.objectsDocumentsBatchDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsBatchLockDelete', function() {
      it('should call objectsDocumentsBatchLockDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsBatchLockDelete
        //instance.objectsDocumentsBatchLockDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsBatchPost', function() {
      it('should call objectsDocumentsBatchPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsBatchPost
        //instance.objectsDocumentsBatchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsBatchPut', function() {
      it('should call objectsDocumentsBatchPut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsBatchPut
        //instance.objectsDocumentsBatchPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAnchorsGet', function() {
      it('should call objectsDocumentsDocIdAnchorsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAnchorsGet
        //instance.objectsDocumentsDocIdAnchorsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAnnotationsFileGet', function() {
      it('should call objectsDocumentsDocIdAnnotationsFileGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAnnotationsFileGet
        //instance.objectsDocumentsDocIdAnnotationsFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAnnotationsFilePost', function() {
      it('should call objectsDocumentsDocIdAnnotationsFilePost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAnnotationsFilePost
        //instance.objectsDocumentsDocIdAnnotationsFilePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsAttachmentIdDelete', function() {
      it('should call objectsDocumentsDocIdAttachmentsAttachmentIdDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsAttachmentIdDelete
        //instance.objectsDocumentsDocIdAttachmentsAttachmentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsAttachmentIdFileGet', function() {
      it('should call objectsDocumentsDocIdAttachmentsAttachmentIdFileGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsAttachmentIdFileGet
        //instance.objectsDocumentsDocIdAttachmentsAttachmentIdFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsAttachmentIdGet', function() {
      it('should call objectsDocumentsDocIdAttachmentsAttachmentIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsAttachmentIdGet
        //instance.objectsDocumentsDocIdAttachmentsAttachmentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsAttachmentIdPut', function() {
      it('should call objectsDocumentsDocIdAttachmentsAttachmentIdPut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsAttachmentIdPut
        //instance.objectsDocumentsDocIdAttachmentsAttachmentIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete', function() {
      it('should call objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete
        //instance.objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet', function() {
      it('should call objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet
        //instance.objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGet', function() {
      it('should call objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGet
        //instance.objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPost', function() {
      it('should call objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPost
        //instance.objectsDocumentsDocIdAttachmentsAttachmentIdVersionsAttachmentVersionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsAttachmentIdVersionsGet', function() {
      it('should call objectsDocumentsDocIdAttachmentsAttachmentIdVersionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsAttachmentIdVersionsGet
        //instance.objectsDocumentsDocIdAttachmentsAttachmentIdVersionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsFileGet', function() {
      it('should call objectsDocumentsDocIdAttachmentsFileGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsFileGet
        //instance.objectsDocumentsDocIdAttachmentsFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsGet', function() {
      it('should call objectsDocumentsDocIdAttachmentsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsGet
        //instance.objectsDocumentsDocIdAttachmentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAttachmentsPost', function() {
      it('should call objectsDocumentsDocIdAttachmentsPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAttachmentsPost
        //instance.objectsDocumentsDocIdAttachmentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdAudittrailGet', function() {
      it('should call objectsDocumentsDocIdAudittrailGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdAudittrailGet
        //instance.objectsDocumentsDocIdAudittrailGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdDelete', function() {
      it('should call objectsDocumentsDocIdDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdDelete
        //instance.objectsDocumentsDocIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdEventsGet', function() {
      it('should call objectsDocumentsDocIdEventsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdEventsGet
        //instance.objectsDocumentsDocIdEventsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdFileGet', function() {
      it('should call objectsDocumentsDocIdFileGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdFileGet
        //instance.objectsDocumentsDocIdFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdGet', function() {
      it('should call objectsDocumentsDocIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdGet
        //instance.objectsDocumentsDocIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdLockDelete', function() {
      it('should call objectsDocumentsDocIdLockDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdLockDelete
        //instance.objectsDocumentsDocIdLockDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdLockGet', function() {
      it('should call objectsDocumentsDocIdLockGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdLockGet
        //instance.objectsDocumentsDocIdLockGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdLockPost', function() {
      it('should call objectsDocumentsDocIdLockPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdLockPost
        //instance.objectsDocumentsDocIdLockPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGet', function() {
      it('should call objectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGet
        //instance.objectsDocumentsDocIdMajorVersionMinorVersionAttachmentsFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdPost', function() {
      it('should call objectsDocumentsDocIdPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdPost
        //instance.objectsDocumentsDocIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdPut', function() {
      it('should call objectsDocumentsDocIdPut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdPut
        //instance.objectsDocumentsDocIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdRenditionsGet', function() {
      it('should call objectsDocumentsDocIdRenditionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdRenditionsGet
        //instance.objectsDocumentsDocIdRenditionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdRenditionsRenditionTypeDelete', function() {
      it('should call objectsDocumentsDocIdRenditionsRenditionTypeDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdRenditionsRenditionTypeDelete
        //instance.objectsDocumentsDocIdRenditionsRenditionTypeDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdRenditionsRenditionTypeGet', function() {
      it('should call objectsDocumentsDocIdRenditionsRenditionTypeGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdRenditionsRenditionTypeGet
        //instance.objectsDocumentsDocIdRenditionsRenditionTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdRenditionsRenditionTypePost', function() {
      it('should call objectsDocumentsDocIdRenditionsRenditionTypePost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdRenditionsRenditionTypePost
        //instance.objectsDocumentsDocIdRenditionsRenditionTypePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdRenditionsRenditionTypePut', function() {
      it('should call objectsDocumentsDocIdRenditionsRenditionTypePut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdRenditionsRenditionTypePut
        //instance.objectsDocumentsDocIdRenditionsRenditionTypePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDelete', function() {
      it('should call objectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDelete
        //instance.objectsDocumentsDocIdRolesRoleNameAndUserOrGroupIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGet', function() {
      it('should call objectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGet
        //instance.objectsDocumentsDocIdVersionMajorVersionMinorVersionAttachmentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsGet', function() {
      it('should call objectsDocumentsDocIdVersionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsGet
        //instance.objectsDocumentsDocIdVersionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsAnnotationIdRepliesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePost', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePost
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsFilePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionAnnotationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionAttachmentsAttachmentIdVersionsAttachmentVersionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionDelete', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionDelete
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionDocExportAnnotationsToCsvGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPost', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPost
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionEventsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionExportVideoAnnotationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionPut', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionPut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionPut
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPost', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPost
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionRelationshipsRelationshipIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDelete', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDelete
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePost', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePost
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePut', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePut
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionRenditionsRenditionTypePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGet', function() {
      it('should call objectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGet
        //instance.objectsDocumentsDocIdVersionsMajorVersionMinorVersionThumbnailGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsGet', function() {
      it('should call objectsDocumentsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsGet
        //instance.objectsDocumentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsIdRolesGet', function() {
      it('should call objectsDocumentsIdRolesGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsIdRolesGet
        //instance.objectsDocumentsIdRolesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsIdRolesPost', function() {
      it('should call objectsDocumentsIdRolesPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsIdRolesPost
        //instance.objectsDocumentsIdRolesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsIdRolesRoleNameGet', function() {
      it('should call objectsDocumentsIdRolesRoleNameGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsIdRolesRoleNameGet
        //instance.objectsDocumentsIdRolesRoleNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGet', function() {
      it('should call objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGet
        //instance.objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet', function() {
      it('should call objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet
        //instance.objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVEntryRequirementsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut', function() {
      it('should call objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut
        //instance.objectsDocumentsIdVersionsMajorVersionMinorVersionLifecycleActionsNameVPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsLifecycleActionsPost', function() {
      it('should call objectsDocumentsLifecycleActionsPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsLifecycleActionsPost
        //instance.objectsDocumentsLifecycleActionsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsLifecycleActionsUserActionNamePut', function() {
      it('should call objectsDocumentsLifecycleActionsUserActionNamePut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsLifecycleActionsUserActionNamePut
        //instance.objectsDocumentsLifecycleActionsUserActionNamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsPost', function() {
      it('should call objectsDocumentsPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsPost
        //instance.objectsDocumentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsRelationshipsBatchDelete', function() {
      it('should call objectsDocumentsRelationshipsBatchDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsRelationshipsBatchDelete
        //instance.objectsDocumentsRelationshipsBatchDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsRelationshipsBatchPost', function() {
      it('should call objectsDocumentsRelationshipsBatchPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsRelationshipsBatchPost
        //instance.objectsDocumentsRelationshipsBatchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsRenditionsBatchDelete', function() {
      it('should call objectsDocumentsRenditionsBatchDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsRenditionsBatchDelete
        //instance.objectsDocumentsRenditionsBatchDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsRenditionsBatchPost', function() {
      it('should call objectsDocumentsRenditionsBatchPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsRenditionsBatchPost
        //instance.objectsDocumentsRenditionsBatchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsRolesBatchDelete', function() {
      it('should call objectsDocumentsRolesBatchDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsRolesBatchDelete
        //instance.objectsDocumentsRolesBatchDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsRolesBatchPost', function() {
      it('should call objectsDocumentsRolesBatchPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsRolesBatchPost
        //instance.objectsDocumentsRolesBatchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsTemplatesGet', function() {
      it('should call objectsDocumentsTemplatesGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsTemplatesGet
        //instance.objectsDocumentsTemplatesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsTemplatesPost', function() {
      it('should call objectsDocumentsTemplatesPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsTemplatesPost
        //instance.objectsDocumentsTemplatesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsTemplatesPut', function() {
      it('should call objectsDocumentsTemplatesPut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsTemplatesPut
        //instance.objectsDocumentsTemplatesPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsTemplatesTemplateNameDelete', function() {
      it('should call objectsDocumentsTemplatesTemplateNameDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsTemplatesTemplateNameDelete
        //instance.objectsDocumentsTemplatesTemplateNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsTemplatesTemplateNameFileGet', function() {
      it('should call objectsDocumentsTemplatesTemplateNameFileGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsTemplatesTemplateNameFileGet
        //instance.objectsDocumentsTemplatesTemplateNameFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsTemplatesTemplateNameGet', function() {
      it('should call objectsDocumentsTemplatesTemplateNameGet successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsTemplatesTemplateNameGet
        //instance.objectsDocumentsTemplatesTemplateNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsTemplatesTemplateNamePut', function() {
      it('should call objectsDocumentsTemplatesTemplateNamePut successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsTemplatesTemplateNamePut
        //instance.objectsDocumentsTemplatesTemplateNamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsTokensPost', function() {
      it('should call objectsDocumentsTokensPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsTokensPost
        //instance.objectsDocumentsTokensPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsVersionsBatchActionsFileextractPost', function() {
      it('should call objectsDocumentsVersionsBatchActionsFileextractPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsVersionsBatchActionsFileextractPost
        //instance.objectsDocumentsVersionsBatchActionsFileextractPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsVersionsBatchDelete', function() {
      it('should call objectsDocumentsVersionsBatchDelete successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsVersionsBatchDelete
        //instance.objectsDocumentsVersionsBatchDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDocumentsVersionsBatchPost', function() {
      it('should call objectsDocumentsVersionsBatchPost successfully', function(done) {
        //uncomment below and update the code to test objectsDocumentsVersionsBatchPost
        //instance.objectsDocumentsVersionsBatchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDomainGet', function() {
      it('should call objectsDomainGet successfully', function(done) {
        //uncomment below and update the code to test objectsDomainGet
        //instance.objectsDomainGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsDomainsGet', function() {
      it('should call objectsDomainsGet successfully', function(done) {
        //uncomment below and update the code to test objectsDomainsGet
        //instance.objectsDomainsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsEdlMatchedDocumentsBatchActionsAddPost', function() {
      it('should call objectsEdlMatchedDocumentsBatchActionsAddPost successfully', function(done) {
        //uncomment below and update the code to test objectsEdlMatchedDocumentsBatchActionsAddPost
        //instance.objectsEdlMatchedDocumentsBatchActionsAddPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsEdlMatchedDocumentsBatchActionsRemovePost', function() {
      it('should call objectsEdlMatchedDocumentsBatchActionsRemovePost successfully', function(done) {
        //uncomment below and update the code to test objectsEdlMatchedDocumentsBatchActionsRemovePost
        //instance.objectsEdlMatchedDocumentsBatchActionsRemovePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsGroupsAutoGet', function() {
      it('should call objectsGroupsAutoGet successfully', function(done) {
        //uncomment below and update the code to test objectsGroupsAutoGet
        //instance.objectsGroupsAutoGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsGroupsGet', function() {
      it('should call objectsGroupsGet successfully', function(done) {
        //uncomment below and update the code to test objectsGroupsGet
        //instance.objectsGroupsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsGroupsGroupIdDelete', function() {
      it('should call objectsGroupsGroupIdDelete successfully', function(done) {
        //uncomment below and update the code to test objectsGroupsGroupIdDelete
        //instance.objectsGroupsGroupIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsGroupsGroupIdGet', function() {
      it('should call objectsGroupsGroupIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsGroupsGroupIdGet
        //instance.objectsGroupsGroupIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsGroupsGroupIdPut', function() {
      it('should call objectsGroupsGroupIdPut successfully', function(done) {
        //uncomment below and update the code to test objectsGroupsGroupIdPut
        //instance.objectsGroupsGroupIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsGroupsPost', function() {
      it('should call objectsGroupsPost successfully', function(done) {
        //uncomment below and update the code to test objectsGroupsPost
        //instance.objectsGroupsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsLicensesGet', function() {
      it('should call objectsLicensesGet successfully', function(done) {
        //uncomment below and update the code to test objectsLicensesGet
        //instance.objectsLicensesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsActionsGet', function() {
      it('should call objectsObjectworkflowsActionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsActionsGet
        //instance.objectsObjectworkflowsActionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsActionsWorkflowNameGet', function() {
      it('should call objectsObjectworkflowsActionsWorkflowNameGet successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsActionsWorkflowNameGet
        //instance.objectsObjectworkflowsActionsWorkflowNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsActionsWorkflowNamePost', function() {
      it('should call objectsObjectworkflowsActionsWorkflowNamePost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsActionsWorkflowNamePost
        //instance.objectsObjectworkflowsActionsWorkflowNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsGet', function() {
      it('should call objectsObjectworkflowsGet successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsGet
        //instance.objectsObjectworkflowsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksGet', function() {
      it('should call objectsObjectworkflowsTasksGet successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksGet
        //instance.objectsObjectworkflowsTasksGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsAcceptPost', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsAcceptPost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsAcceptPost
        //instance.objectsObjectworkflowsTasksTaskIdActionsAcceptPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsCancelPost', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsCancelPost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsCancelPost
        //instance.objectsObjectworkflowsTasksTaskIdActionsCancelPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsCompletePost', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsCompletePost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsCompletePost
        //instance.objectsObjectworkflowsTasksTaskIdActionsCompletePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsGet', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsGet
        //instance.objectsObjectworkflowsTasksTaskIdActionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsMdwacceptPost', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsMdwacceptPost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsMdwacceptPost
        //instance.objectsObjectworkflowsTasksTaskIdActionsMdwacceptPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsMdwcompletePost', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsMdwcompletePost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsMdwcompletePost
        //instance.objectsObjectworkflowsTasksTaskIdActionsMdwcompletePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPost', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPost
        //instance.objectsObjectworkflowsTasksTaskIdActionsMdwmanagecontentPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsMdwreassignPost', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsMdwreassignPost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsMdwreassignPost
        //instance.objectsObjectworkflowsTasksTaskIdActionsMdwreassignPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsReassignPost', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsReassignPost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsReassignPost
        //instance.objectsObjectworkflowsTasksTaskIdActionsReassignPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsTaskActionGet', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsTaskActionGet successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsTaskActionGet
        //instance.objectsObjectworkflowsTasksTaskIdActionsTaskActionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsUndoacceptPost', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsUndoacceptPost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsUndoacceptPost
        //instance.objectsObjectworkflowsTasksTaskIdActionsUndoacceptPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdActionsUpdateduedatePost', function() {
      it('should call objectsObjectworkflowsTasksTaskIdActionsUpdateduedatePost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdActionsUpdateduedatePost
        //instance.objectsObjectworkflowsTasksTaskIdActionsUpdateduedatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsTasksTaskIdGet', function() {
      it('should call objectsObjectworkflowsTasksTaskIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsTasksTaskIdGet
        //instance.objectsObjectworkflowsTasksTaskIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsWorkflowIdActionsGet', function() {
      it('should call objectsObjectworkflowsWorkflowIdActionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsWorkflowIdActionsGet
        //instance.objectsObjectworkflowsWorkflowIdActionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsWorkflowIdActionsWorkflowActionGet', function() {
      it('should call objectsObjectworkflowsWorkflowIdActionsWorkflowActionGet successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsWorkflowIdActionsWorkflowActionGet
        //instance.objectsObjectworkflowsWorkflowIdActionsWorkflowActionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsWorkflowIdActionsWorkflowActionPost', function() {
      it('should call objectsObjectworkflowsWorkflowIdActionsWorkflowActionPost successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsWorkflowIdActionsWorkflowActionPost
        //instance.objectsObjectworkflowsWorkflowIdActionsWorkflowActionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsObjectworkflowsWorkflowIdGet', function() {
      it('should call objectsObjectworkflowsWorkflowIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsObjectworkflowsWorkflowIdGet
        //instance.objectsObjectworkflowsWorkflowIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsPicklistsGet', function() {
      it('should call objectsPicklistsGet successfully', function(done) {
        //uncomment below and update the code to test objectsPicklistsGet
        //instance.objectsPicklistsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsPicklistsPicklistNameGet', function() {
      it('should call objectsPicklistsPicklistNameGet successfully', function(done) {
        //uncomment below and update the code to test objectsPicklistsPicklistNameGet
        //instance.objectsPicklistsPicklistNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsPicklistsPicklistNamePicklistValueNameDelete', function() {
      it('should call objectsPicklistsPicklistNamePicklistValueNameDelete successfully', function(done) {
        //uncomment below and update the code to test objectsPicklistsPicklistNamePicklistValueNameDelete
        //instance.objectsPicklistsPicklistNamePicklistValueNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsPicklistsPicklistNamePicklistValueNamePut', function() {
      it('should call objectsPicklistsPicklistNamePicklistValueNamePut successfully', function(done) {
        //uncomment below and update the code to test objectsPicklistsPicklistNamePicklistValueNamePut
        //instance.objectsPicklistsPicklistNamePicklistValueNamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsPicklistsPicklistNamePost', function() {
      it('should call objectsPicklistsPicklistNamePost successfully', function(done) {
        //uncomment below and update the code to test objectsPicklistsPicklistNamePost
        //instance.objectsPicklistsPicklistNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsPicklistsPicklistNamePut', function() {
      it('should call objectsPicklistsPicklistNamePut successfully', function(done) {
        //uncomment below and update the code to test objectsPicklistsPicklistNamePut
        //instance.objectsPicklistsPicklistNamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxActionsBuildproductionPost', function() {
      it('should call objectsSandboxActionsBuildproductionPost successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxActionsBuildproductionPost
        //instance.objectsSandboxActionsBuildproductionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxActionsPromoteproductionPost', function() {
      it('should call objectsSandboxActionsPromoteproductionPost successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxActionsPromoteproductionPost
        //instance.objectsSandboxActionsPromoteproductionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxActionsRecheckusagePost', function() {
      it('should call objectsSandboxActionsRecheckusagePost successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxActionsRecheckusagePost
        //instance.objectsSandboxActionsRecheckusagePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxBatchChangesizePost', function() {
      it('should call objectsSandboxBatchChangesizePost successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxBatchChangesizePost
        //instance.objectsSandboxBatchChangesizePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxEntitlementsSetPost', function() {
      it('should call objectsSandboxEntitlementsSetPost successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxEntitlementsSetPost
        //instance.objectsSandboxEntitlementsSetPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxGet', function() {
      it('should call objectsSandboxGet successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxGet
        //instance.objectsSandboxGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxNameDelete', function() {
      it('should call objectsSandboxNameDelete successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxNameDelete
        //instance.objectsSandboxNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxPost', function() {
      it('should call objectsSandboxPost successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxPost
        //instance.objectsSandboxPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxSnapshotApiNameActionsUpdatePost', function() {
      it('should call objectsSandboxSnapshotApiNameActionsUpdatePost successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxSnapshotApiNameActionsUpdatePost
        //instance.objectsSandboxSnapshotApiNameActionsUpdatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxSnapshotApiNameActionsUpgradePost', function() {
      it('should call objectsSandboxSnapshotApiNameActionsUpgradePost successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxSnapshotApiNameActionsUpgradePost
        //instance.objectsSandboxSnapshotApiNameActionsUpgradePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxSnapshotApiNameDelete', function() {
      it('should call objectsSandboxSnapshotApiNameDelete successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxSnapshotApiNameDelete
        //instance.objectsSandboxSnapshotApiNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxSnapshotGet', function() {
      it('should call objectsSandboxSnapshotGet successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxSnapshotGet
        //instance.objectsSandboxSnapshotGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxSnapshotPost', function() {
      it('should call objectsSandboxSnapshotPost successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxSnapshotPost
        //instance.objectsSandboxSnapshotPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxVaultIdActionsRefreshPost', function() {
      it('should call objectsSandboxVaultIdActionsRefreshPost successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxVaultIdActionsRefreshPost
        //instance.objectsSandboxVaultIdActionsRefreshPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSandboxVaultIdGet', function() {
      it('should call objectsSandboxVaultIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsSandboxVaultIdGet
        //instance.objectsSandboxVaultIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSecuritypoliciesGet', function() {
      it('should call objectsSecuritypoliciesGet successfully', function(done) {
        //uncomment below and update the code to test objectsSecuritypoliciesGet
        //instance.objectsSecuritypoliciesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsSecuritypoliciesSecurityPolicyNameGet', function() {
      it('should call objectsSecuritypoliciesSecurityPolicyNameGet successfully', function(done) {
        //uncomment below and update the code to test objectsSecuritypoliciesSecurityPolicyNameGet
        //instance.objectsSecuritypoliciesSecurityPolicyNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersGet', function() {
      it('should call objectsUsersGet successfully', function(done) {
        //uncomment below and update the code to test objectsUsersGet
        //instance.objectsUsersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersIdGet', function() {
      it('should call objectsUsersIdGet successfully', function(done) {
        //uncomment below and update the code to test objectsUsersIdGet
        //instance.objectsUsersIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersIdPermissionsGet', function() {
      it('should call objectsUsersIdPermissionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsUsersIdPermissionsGet
        //instance.objectsUsersIdPermissionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersIdPut', function() {
      it('should call objectsUsersIdPut successfully', function(done) {
        //uncomment below and update the code to test objectsUsersIdPut
        //instance.objectsUsersIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersMeGet', function() {
      it('should call objectsUsersMeGet successfully', function(done) {
        //uncomment below and update the code to test objectsUsersMeGet
        //instance.objectsUsersMeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersMePasswordPost', function() {
      it('should call objectsUsersMePasswordPost successfully', function(done) {
        //uncomment below and update the code to test objectsUsersMePasswordPost
        //instance.objectsUsersMePasswordPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersMePermissionsGet', function() {
      it('should call objectsUsersMePermissionsGet successfully', function(done) {
        //uncomment below and update the code to test objectsUsersMePermissionsGet
        //instance.objectsUsersMePermissionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersMePut', function() {
      it('should call objectsUsersMePut successfully', function(done) {
        //uncomment below and update the code to test objectsUsersMePut
        //instance.objectsUsersMePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersPost', function() {
      it('should call objectsUsersPost successfully', function(done) {
        //uncomment below and update the code to test objectsUsersPost
        //instance.objectsUsersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersPut', function() {
      it('should call objectsUsersPut successfully', function(done) {
        //uncomment below and update the code to test objectsUsersPut
        //instance.objectsUsersPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersUserIdDelete', function() {
      it('should call objectsUsersUserIdDelete successfully', function(done) {
        //uncomment below and update the code to test objectsUsersUserIdDelete
        //instance.objectsUsersUserIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsUsersUserIdVaultMembershipVaultIdPut', function() {
      it('should call objectsUsersUserIdVaultMembershipVaultIdPut successfully', function(done) {
        //uncomment below and update the code to test objectsUsersUserIdVaultMembershipVaultIdPut
        //instance.objectsUsersUserIdVaultMembershipVaultIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsVaultActionsComparePost', function() {
      it('should call objectsVaultActionsComparePost successfully', function(done) {
        //uncomment below and update the code to test objectsVaultActionsComparePost
        //instance.objectsVaultActionsComparePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('objectsVaultActionsConfigreportPost', function() {
      it('should call objectsVaultActionsConfigreportPost successfully', function(done) {
        //uncomment below and update the code to test objectsVaultActionsConfigreportPost
        //instance.objectsVaultActionsConfigreportPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryComponentsPost', function() {
      it('should call queryComponentsPost successfully', function(done) {
        //uncomment below and update the code to test queryComponentsPost
        //instance.queryComponentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryNextPagePost', function() {
      it('should call queryNextPagePost successfully', function(done) {
        //uncomment below and update the code to test queryNextPagePost
        //instance.queryNextPagePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryPost', function() {
      it('should call queryPost successfully', function(done) {
        //uncomment below and update the code to test queryPost
        //instance.queryPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryPreviousPagePost', function() {
      it('should call queryPreviousPagePost successfully', function(done) {
        //uncomment below and update the code to test queryPreviousPagePost
        //instance.queryPreviousPagePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2MeGet', function() {
      it('should call scimV2MeGet successfully', function(done) {
        //uncomment below and update the code to test scimV2MeGet
        //instance.scimV2MeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2MePut', function() {
      it('should call scimV2MePut successfully', function(done) {
        //uncomment below and update the code to test scimV2MePut
        //instance.scimV2MePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2ResourceTypesGet', function() {
      it('should call scimV2ResourceTypesGet successfully', function(done) {
        //uncomment below and update the code to test scimV2ResourceTypesGet
        //instance.scimV2ResourceTypesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2ResourceTypesTypeGet', function() {
      it('should call scimV2ResourceTypesTypeGet successfully', function(done) {
        //uncomment below and update the code to test scimV2ResourceTypesTypeGet
        //instance.scimV2ResourceTypesTypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2SchemasGet', function() {
      it('should call scimV2SchemasGet successfully', function(done) {
        //uncomment below and update the code to test scimV2SchemasGet
        //instance.scimV2SchemasGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2SchemasIdGet', function() {
      it('should call scimV2SchemasIdGet successfully', function(done) {
        //uncomment below and update the code to test scimV2SchemasIdGet
        //instance.scimV2SchemasIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2ServiceProviderConfigGet', function() {
      it('should call scimV2ServiceProviderConfigGet successfully', function(done) {
        //uncomment below and update the code to test scimV2ServiceProviderConfigGet
        //instance.scimV2ServiceProviderConfigGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2TypeGet', function() {
      it('should call scimV2TypeGet successfully', function(done) {
        //uncomment below and update the code to test scimV2TypeGet
        //instance.scimV2TypeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2TypeIdGet', function() {
      it('should call scimV2TypeIdGet successfully', function(done) {
        //uncomment below and update the code to test scimV2TypeIdGet
        //instance.scimV2TypeIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2UsersGet', function() {
      it('should call scimV2UsersGet successfully', function(done) {
        //uncomment below and update the code to test scimV2UsersGet
        //instance.scimV2UsersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2UsersIdGet', function() {
      it('should call scimV2UsersIdGet successfully', function(done) {
        //uncomment below and update the code to test scimV2UsersIdGet
        //instance.scimV2UsersIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2UsersIdPut', function() {
      it('should call scimV2UsersIdPut successfully', function(done) {
        //uncomment below and update the code to test scimV2UsersIdPut
        //instance.scimV2UsersIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('scimV2UsersPost', function() {
      it('should call scimV2UsersPost successfully', function(done) {
        //uncomment below and update the code to test scimV2UsersPost
        //instance.scimV2UsersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesCertificateCertIdGet', function() {
      it('should call servicesCertificateCertIdGet successfully', function(done) {
        //uncomment below and update the code to test servicesCertificateCertIdGet
        //instance.servicesCertificateCertIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesConfigurationModeActionsDisablePost', function() {
      it('should call servicesConfigurationModeActionsDisablePost successfully', function(done) {
        //uncomment below and update the code to test servicesConfigurationModeActionsDisablePost
        //instance.servicesConfigurationModeActionsDisablePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesConfigurationModeActionsEnablePost', function() {
      it('should call servicesConfigurationModeActionsEnablePost successfully', function(done) {
        //uncomment below and update the code to test servicesConfigurationModeActionsEnablePost
        //instance.servicesConfigurationModeActionsEnablePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesDirectdataFilesGet', function() {
      it('should call servicesDirectdataFilesGet successfully', function(done) {
        //uncomment below and update the code to test servicesDirectdataFilesGet
        //instance.servicesDirectdataFilesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesDirectdataFilesNameGet', function() {
      it('should call servicesDirectdataFilesNameGet successfully', function(done) {
        //uncomment below and update the code to test servicesDirectdataFilesNameGet
        //instance.servicesDirectdataFilesNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingItemsContentItemGet', function() {
      it('should call servicesFileStagingItemsContentItemGet successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingItemsContentItemGet
        //instance.servicesFileStagingItemsContentItemGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingItemsItemDelete', function() {
      it('should call servicesFileStagingItemsItemDelete successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingItemsItemDelete
        //instance.servicesFileStagingItemsItemDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingItemsItemGet', function() {
      it('should call servicesFileStagingItemsItemGet successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingItemsItemGet
        //instance.servicesFileStagingItemsItemGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingItemsItemPut', function() {
      it('should call servicesFileStagingItemsItemPut successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingItemsItemPut
        //instance.servicesFileStagingItemsItemPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingItemsPost', function() {
      it('should call servicesFileStagingItemsPost successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingItemsPost
        //instance.servicesFileStagingItemsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingUploadGet', function() {
      it('should call servicesFileStagingUploadGet successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingUploadGet
        //instance.servicesFileStagingUploadGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingUploadPost', function() {
      it('should call servicesFileStagingUploadPost successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingUploadPost
        //instance.servicesFileStagingUploadPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingUploadUploadSessionIdDelete', function() {
      it('should call servicesFileStagingUploadUploadSessionIdDelete successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingUploadUploadSessionIdDelete
        //instance.servicesFileStagingUploadUploadSessionIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingUploadUploadSessionIdGet', function() {
      it('should call servicesFileStagingUploadUploadSessionIdGet successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingUploadUploadSessionIdGet
        //instance.servicesFileStagingUploadUploadSessionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingUploadUploadSessionIdPartsGet', function() {
      it('should call servicesFileStagingUploadUploadSessionIdPartsGet successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingUploadUploadSessionIdPartsGet
        //instance.servicesFileStagingUploadUploadSessionIdPartsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingUploadUploadSessionIdPost', function() {
      it('should call servicesFileStagingUploadUploadSessionIdPost successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingUploadUploadSessionIdPost
        //instance.servicesFileStagingUploadUploadSessionIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesFileStagingUploadUploadSessionIdPut', function() {
      it('should call servicesFileStagingUploadUploadSessionIdPut successfully', function(done) {
        //uncomment below and update the code to test servicesFileStagingUploadUploadSessionIdPut
        //instance.servicesFileStagingUploadUploadSessionIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesJobsHistoriesGet', function() {
      it('should call servicesJobsHistoriesGet successfully', function(done) {
        //uncomment below and update the code to test servicesJobsHistoriesGet
        //instance.servicesJobsHistoriesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesJobsJobIdErrorsGet', function() {
      it('should call servicesJobsJobIdErrorsGet successfully', function(done) {
        //uncomment below and update the code to test servicesJobsJobIdErrorsGet
        //instance.servicesJobsJobIdErrorsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesJobsJobIdGet', function() {
      it('should call servicesJobsJobIdGet successfully', function(done) {
        //uncomment below and update the code to test servicesJobsJobIdGet
        //instance.servicesJobsJobIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesJobsJobIdSummaryGet', function() {
      it('should call servicesJobsJobIdSummaryGet successfully', function(done) {
        //uncomment below and update the code to test servicesJobsJobIdSummaryGet
        //instance.servicesJobsJobIdSummaryGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesJobsJobIdTasksGet', function() {
      it('should call servicesJobsJobIdTasksGet successfully', function(done) {
        //uncomment below and update the code to test servicesJobsJobIdTasksGet
        //instance.servicesJobsJobIdTasksGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesJobsMonitorsGet', function() {
      it('should call servicesJobsMonitorsGet successfully', function(done) {
        //uncomment below and update the code to test servicesJobsMonitorsGet
        //instance.servicesJobsMonitorsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesJobsStartNowJobIdPost', function() {
      it('should call servicesJobsStartNowJobIdPost successfully', function(done) {
        //uncomment below and update the code to test servicesJobsStartNowJobIdPost
        //instance.servicesJobsStartNowJobIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesLoaderExtractPost', function() {
      it('should call servicesLoaderExtractPost successfully', function(done) {
        //uncomment below and update the code to test servicesLoaderExtractPost
        //instance.servicesLoaderExtractPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesLoaderJobIdTasksTaskIdFailurelogGet', function() {
      it('should call servicesLoaderJobIdTasksTaskIdFailurelogGet successfully', function(done) {
        //uncomment below and update the code to test servicesLoaderJobIdTasksTaskIdFailurelogGet
        //instance.servicesLoaderJobIdTasksTaskIdFailurelogGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesLoaderJobIdTasksTaskIdResultsGet', function() {
      it('should call servicesLoaderJobIdTasksTaskIdResultsGet successfully', function(done) {
        //uncomment below and update the code to test servicesLoaderJobIdTasksTaskIdResultsGet
        //instance.servicesLoaderJobIdTasksTaskIdResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesLoaderJobIdTasksTaskIdResultsRenditionsGet', function() {
      it('should call servicesLoaderJobIdTasksTaskIdResultsRenditionsGet successfully', function(done) {
        //uncomment below and update the code to test servicesLoaderJobIdTasksTaskIdResultsRenditionsGet
        //instance.servicesLoaderJobIdTasksTaskIdResultsRenditionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesLoaderJobIdTasksTaskIdSuccesslogGet', function() {
      it('should call servicesLoaderJobIdTasksTaskIdSuccesslogGet successfully', function(done) {
        //uncomment below and update the code to test servicesLoaderJobIdTasksTaskIdSuccesslogGet
        //instance.servicesLoaderJobIdTasksTaskIdSuccesslogGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesLoaderLoadPost', function() {
      it('should call servicesLoaderLoadPost successfully', function(done) {
        //uncomment below and update the code to test servicesLoaderLoadPost
        //instance.servicesLoaderLoadPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesPackageActionsValidatePost', function() {
      it('should call servicesPackageActionsValidatePost successfully', function(done) {
        //uncomment below and update the code to test servicesPackageActionsValidatePost
        //instance.servicesPackageActionsValidatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesPackagePost', function() {
      it('should call servicesPackagePost successfully', function(done) {
        //uncomment below and update the code to test servicesPackagePost
        //instance.servicesPackagePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesPackagePut', function() {
      it('should call servicesPackagePut successfully', function(done) {
        //uncomment below and update the code to test servicesPackagePut
        //instance.servicesPackagePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesQueuesGet', function() {
      it('should call servicesQueuesGet successfully', function(done) {
        //uncomment below and update the code to test servicesQueuesGet
        //instance.servicesQueuesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesQueuesQueueNameActionsDisableDeliveryPut', function() {
      it('should call servicesQueuesQueueNameActionsDisableDeliveryPut successfully', function(done) {
        //uncomment below and update the code to test servicesQueuesQueueNameActionsDisableDeliveryPut
        //instance.servicesQueuesQueueNameActionsDisableDeliveryPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesQueuesQueueNameActionsEnableDeliveryPut', function() {
      it('should call servicesQueuesQueueNameActionsEnableDeliveryPut successfully', function(done) {
        //uncomment below and update the code to test servicesQueuesQueueNameActionsEnableDeliveryPut
        //instance.servicesQueuesQueueNameActionsEnableDeliveryPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesQueuesQueueNameActionsResetPut', function() {
      it('should call servicesQueuesQueueNameActionsResetPut successfully', function(done) {
        //uncomment below and update the code to test servicesQueuesQueueNameActionsResetPut
        //instance.servicesQueuesQueueNameActionsResetPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesQueuesQueueNameGet', function() {
      it('should call servicesQueuesQueueNameGet successfully', function(done) {
        //uncomment below and update the code to test servicesQueuesQueueNameGet
        //instance.servicesQueuesQueueNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('servicesVobjectVaultPackageVPackageIdActionsValidatePost', function() {
      it('should call servicesVobjectVaultPackageVPackageIdActionsValidatePost successfully', function(done) {
        //uncomment below and update the code to test servicesVobjectVaultPackageVPackageIdActionsValidatePost
        //instance.servicesVobjectVaultPackageVPackageIdActionsValidatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sessionDelete', function() {
      it('should call sessionDelete successfully', function(done) {
        //uncomment below and update the code to test sessionDelete
        //instance.sessionDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uicodeDistributionsDistributionNameCodeGet', function() {
      it('should call uicodeDistributionsDistributionNameCodeGet successfully', function(done) {
        //uncomment below and update the code to test uicodeDistributionsDistributionNameCodeGet
        //instance.uicodeDistributionsDistributionNameCodeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uicodeDistributionsDistributionNameDelete', function() {
      it('should call uicodeDistributionsDistributionNameDelete successfully', function(done) {
        //uncomment below and update the code to test uicodeDistributionsDistributionNameDelete
        //instance.uicodeDistributionsDistributionNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uicodeDistributionsDistributionNameGet', function() {
      it('should call uicodeDistributionsDistributionNameGet successfully', function(done) {
        //uncomment below and update the code to test uicodeDistributionsDistributionNameGet
        //instance.uicodeDistributionsDistributionNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uicodeDistributionsGet', function() {
      it('should call uicodeDistributionsGet successfully', function(done) {
        //uncomment below and update the code to test uicodeDistributionsGet
        //instance.uicodeDistributionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uicodeDistributionsPost', function() {
      it('should call uicodeDistributionsPost successfully', function(done) {
        //uncomment below and update the code to test uicodeDistributionsPost
        //instance.uicodeDistributionsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectVaultPackageVPackageIdActionsDeployPost', function() {
      it('should call vobjectVaultPackageVPackageIdActionsDeployPost successfully', function(done) {
        //uncomment below and update the code to test vobjectVaultPackageVPackageIdActionsDeployPost
        //instance.vobjectVaultPackageVPackageIdActionsDeployPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectVaultPackageVPackageIdActionsDeployResultsGet', function() {
      it('should call vobjectVaultPackageVPackageIdActionsDeployResultsGet successfully', function(done) {
        //uncomment below and update the code to test vobjectVaultPackageVPackageIdActionsDeployResultsGet
        //instance.vobjectVaultPackageVPackageIdActionsDeployResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsCascadedeleteResultsObjectNameJobStatusJobIdGet', function() {
      it('should call vobjectsCascadedeleteResultsObjectNameJobStatusJobIdGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsCascadedeleteResultsObjectNameJobStatusJobIdGet
        //instance.vobjectsCascadedeleteResultsObjectNameJobStatusJobIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsDeepcopyResultsObjectNameJobStatusJobIdGet', function() {
      it('should call vobjectsDeepcopyResultsObjectNameJobStatusJobIdGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsDeepcopyResultsObjectNameJobStatusJobIdGet
        //instance.vobjectsDeepcopyResultsObjectNameJobStatusJobIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsEdlItemVActionsCreateplaceholderPost', function() {
      it('should call vobjectsEdlItemVActionsCreateplaceholderPost successfully', function(done) {
        //uncomment below and update the code to test vobjectsEdlItemVActionsCreateplaceholderPost
        //instance.vobjectsEdlItemVActionsCreateplaceholderPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsMergesJobIdLogGet', function() {
      it('should call vobjectsMergesJobIdLogGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsMergesJobIdLogGet
        //instance.vobjectsMergesJobIdLogGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsMergesJobIdResultsGet', function() {
      it('should call vobjectsMergesJobIdResultsGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsMergesJobIdResultsGet
        //instance.vobjectsMergesJobIdResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsMergesJobIdStatusGet', function() {
      it('should call vobjectsMergesJobIdStatusGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsMergesJobIdStatusGet
        //instance.vobjectsMergesJobIdStatusGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameActionsActionNamePost', function() {
      it('should call vobjectsObjectNameActionsActionNamePost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameActionsActionNamePost
        //instance.vobjectsObjectNameActionsActionNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameActionsChangetypePost', function() {
      it('should call vobjectsObjectNameActionsChangetypePost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameActionsChangetypePost
        //instance.vobjectsObjectNameActionsChangetypePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameActionsMergePost', function() {
      it('should call vobjectsObjectNameActionsMergePost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameActionsMergePost
        //instance.vobjectsObjectNameActionsMergePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameActionsRecalculaterollupsGet', function() {
      it('should call vobjectsObjectNameActionsRecalculaterollupsGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameActionsRecalculaterollupsGet
        //instance.vobjectsObjectNameActionsRecalculaterollupsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameActionsRecalculaterollupsPost', function() {
      it('should call vobjectsObjectNameActionsRecalculaterollupsPost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameActionsRecalculaterollupsPost
        //instance.vobjectsObjectNameActionsRecalculaterollupsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameActionsUpdatecorporatecurrencyPut', function() {
      it('should call vobjectsObjectNameActionsUpdatecorporatecurrencyPut successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameActionsUpdatecorporatecurrencyPut
        //instance.vobjectsObjectNameActionsUpdatecorporatecurrencyPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameAttachmentsBatchDelete', function() {
      it('should call vobjectsObjectNameAttachmentsBatchDelete successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameAttachmentsBatchDelete
        //instance.vobjectsObjectNameAttachmentsBatchDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameAttachmentsBatchPost', function() {
      it('should call vobjectsObjectNameAttachmentsBatchPost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameAttachmentsBatchPost
        //instance.vobjectsObjectNameAttachmentsBatchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameAttachmentsBatchPut', function() {
      it('should call vobjectsObjectNameAttachmentsBatchPut successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameAttachmentsBatchPut
        //instance.vobjectsObjectNameAttachmentsBatchPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameDelete', function() {
      it('should call vobjectsObjectNameDelete successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameDelete
        //instance.vobjectsObjectNameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameIdRolesRoleNameGet', function() {
      it('should call vobjectsObjectNameIdRolesRoleNameGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameIdRolesRoleNameGet
        //instance.vobjectsObjectNameIdRolesRoleNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdActionsActionNameGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdActionsActionNameGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdActionsActionNameGet
        //instance.vobjectsObjectNameObjectRecordIdActionsActionNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdActionsActionNamePost', function() {
      it('should call vobjectsObjectNameObjectRecordIdActionsActionNamePost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdActionsActionNamePost
        //instance.vobjectsObjectNameObjectRecordIdActionsActionNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdActionsCascadedeletePost', function() {
      it('should call vobjectsObjectNameObjectRecordIdActionsCascadedeletePost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdActionsCascadedeletePost
        //instance.vobjectsObjectNameObjectRecordIdActionsCascadedeletePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdActionsDeepcopyPost', function() {
      it('should call vobjectsObjectNameObjectRecordIdActionsDeepcopyPost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdActionsDeepcopyPost
        //instance.vobjectsObjectNameObjectRecordIdActionsDeepcopyPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdActionsGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdActionsGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdActionsGet
        //instance.vobjectsObjectNameObjectRecordIdActionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGet
        //instance.vobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePost', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePost
        //instance.vobjectsObjectNameObjectRecordIdAttachmentFieldsAttachmentFieldNameFilePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentFieldsFileGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentFieldsFileGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentFieldsFileGet
        //instance.vobjectsObjectNameObjectRecordIdAttachmentFieldsFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDelete', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDelete successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDelete
        //instance.vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGet
        //instance.vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPut', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPut successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPut
        //instance.vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete
        //instance.vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet
        //instance.vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGet
        //instance.vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPost', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPost
        //instance.vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsAttachmentVersionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGet
        //instance.vobjectsObjectNameObjectRecordIdAttachmentsAttachmentIdVersionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentsFileGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentsFileGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentsFileGet
        //instance.vobjectsObjectNameObjectRecordIdAttachmentsFileGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentsGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentsGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentsGet
        //instance.vobjectsObjectNameObjectRecordIdAttachmentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAttachmentsPost', function() {
      it('should call vobjectsObjectNameObjectRecordIdAttachmentsPost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAttachmentsPost
        //instance.vobjectsObjectNameObjectRecordIdAttachmentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdAudittrailGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdAudittrailGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdAudittrailGet
        //instance.vobjectsObjectNameObjectRecordIdAudittrailGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameObjectRecordIdGet', function() {
      it('should call vobjectsObjectNameObjectRecordIdGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameObjectRecordIdGet
        //instance.vobjectsObjectNameObjectRecordIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNamePost', function() {
      it('should call vobjectsObjectNamePost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNamePost
        //instance.vobjectsObjectNamePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNamePut', function() {
      it('should call vobjectsObjectNamePut successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNamePut
        //instance.vobjectsObjectNamePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameRolesDelete', function() {
      it('should call vobjectsObjectNameRolesDelete successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameRolesDelete
        //instance.vobjectsObjectNameRolesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsObjectNameRolesPost', function() {
      it('should call vobjectsObjectNameRolesPost successfully', function(done) {
        //uncomment below and update the code to test vobjectsObjectNameRolesPost
        //instance.vobjectsObjectNameRolesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('vobjectsOutboundPackageVPackageIdDependenciesGet', function() {
      it('should call vobjectsOutboundPackageVPackageIdDependenciesGet successfully', function(done) {
        //uncomment below and update the code to test vobjectsOutboundPackageVPackageIdDependenciesGet
        //instance.vobjectsOutboundPackageVPackageIdDependenciesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
