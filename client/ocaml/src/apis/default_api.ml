(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let api_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/api/" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let api_mdl_components_component_type_and_record_name_files_get ~component_type_and_record_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/api/mdl/components/{component_type_and_record_name}/files" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "component_type_and_record_name" (fun x -> x) component_type_and_record_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let api_mdl_components_component_type_and_record_name_get ~component_type_and_record_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/api/mdl/components/{component_type_and_record_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "component_type_and_record_name" (fun x -> x) component_type_and_record_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let api_mdl_execute_async_job_id_results_get ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/api/mdl/execute_async/{job_id}/results" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let api_mdl_execute_async_post ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/api/mdl/execute_async" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let api_mdl_execute_post ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/api/mdl/execute" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let api_mdl_files_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/api/mdl/files" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let audittrail_audit_trail_type_get ~audit_trail_type ?start_date ?end_date ?all_dates ?format_result ?limit ?offset ?objects ?events ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/audittrail/{audit_trail_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "audit_trail_type" (fun x -> x) audit_trail_type in
    let uri = Request.maybe_add_query_param uri "start_date" (fun x -> x) start_date in
    let uri = Request.maybe_add_query_param uri "end_date" (fun x -> x) end_date in
    let uri = Request.maybe_add_query_param uri "all_dates" (fun x -> x) all_dates in
    let uri = Request.maybe_add_query_param uri "format_result" (fun x -> x) format_result in
    let uri = Request.maybe_add_query_param uri "limit" (fun x -> x) limit in
    let uri = Request.maybe_add_query_param uri "offset" (fun x -> x) offset in
    let uri = Request.maybe_add_query_param uri "objects" (fun x -> x) objects in
    let uri = Request.maybe_add_query_param uri "events" (fun x -> x) events in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let auth_discovery_post ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/auth/discovery" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let auth_oauth_session_oath_oidc_profile_id_post ~oath_oidc_profile_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/auth/oauth/session/{oath_oidc_profile_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "oath_oidc_profile_id" (fun x -> x) oath_oidc_profile_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let auth_post ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/auth" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let code_class_name_delete ~class_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/code/{class_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "class_name" (fun x -> x) class_name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let code_class_name_disable_put ~class_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/code/{class_name}/disable" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "class_name" (fun x -> x) class_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let code_class_name_enable_put ~class_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/code/{class_name}/enable" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "class_name" (fun x -> x) class_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let code_class_name_get ~class_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/code/{class_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "class_name" (fun x -> x) class_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let code_profiler_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/code/profiler" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let code_profiler_post ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/code/profiler" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let code_profiler_session_name_actions_end_post ~session_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/code/profiler/{session_name}/actions/end" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "session_name" (fun x -> x) session_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let code_profiler_session_name_delete ~session_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/code/profiler/{session_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "session_name" (fun x -> x) session_name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let code_profiler_session_name_get ~session_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/code/profiler/{session_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "session_name" (fun x -> x) session_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let code_profiler_session_name_results_get ~session_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/code/profiler/{session_name}/results" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "session_name" (fun x -> x) session_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let code_put ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/code" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let composites_trees_edl_hierarchy_or_template_actions_listnodes_post ~edl_hierarchy_or_template ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/composites/trees/{edl_hierarchy_or_template}/actions/listnodes" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "edl_hierarchy_or_template" (fun x -> x) edl_hierarchy_or_template in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let composites_trees_edl_hierarchy_or_template_get ~edl_hierarchy_or_template ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/composites/trees/{edl_hierarchy_or_template}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "edl_hierarchy_or_template" (fun x -> x) edl_hierarchy_or_template in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let composites_trees_edl_hierarchy_v_parent_node_id_children_get ~parent_node_id ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/composites/trees/edl_hierarchy__v/{parent_node_id}/children" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "parent_node_id" (fun x -> x) parent_node_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let composites_trees_edl_hierarchy_v_parent_node_id_children_put ~parent_node_id ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/composites/trees/edl_hierarchy__v/{parent_node_id}/children" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "parent_node_id" (fun x -> x) parent_node_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let configuration_component_type_and_record_name_get ~component_type_and_record_name ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/configuration/{component_type_and_record_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "component_type_and_record_name" (fun x -> x) component_type_and_record_name in
    let uri = Request.maybe_add_query_param uri "loc" (fun x -> x) loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let configuration_component_type_get ~component_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/configuration/{component_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "component_type" (fun x -> x) component_type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let configuration_object_name_and_object_type_get ~object_name_and_object_type ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/configuration/{object_name_and_object_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name_and_object_type" (fun x -> x) object_name_and_object_type in
    let uri = Request.maybe_add_query_param uri "loc" (fun x -> x) loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let configuration_objecttype_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/configuration/Objecttype" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let configuration_role_assignment_rule_delete ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/configuration/role_assignment_rule" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let configuration_role_assignment_rule_get ?lifecycle__v ?role__v ?product__v ?country__v ?study__v ?study_country__v ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/configuration/role_assignment_rule" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "lifecycle__v" (fun x -> x) lifecycle__v in
    let uri = Request.maybe_add_query_param uri "role__v" (fun x -> x) role__v in
    let uri = Request.maybe_add_query_param uri "product__v" (fun x -> x) product__v in
    let uri = Request.maybe_add_query_param uri "country__v" (fun x -> x) country__v in
    let uri = Request.maybe_add_query_param uri "study__v" (fun x -> x) study__v in
    let uri = Request.maybe_add_query_param uri "study_country__v" (fun x -> x) study_country__v in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let configuration_role_assignment_rule_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/configuration/role_assignment_rule" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let configuration_role_assignment_rule_put ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/configuration/role_assignment_rule" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let delegation_login_post ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/delegation/login" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let delegation_vaults_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/delegation/vaults" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let keep_alive_post ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/keep-alive" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let limits_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/limits" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let logs_api_usage_get ?date ?log_format ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/logs/api_usage" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "date" (fun x -> x) date in
    let uri = Request.maybe_add_query_param uri "log_format" (fun x -> x) log_format in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let logs_code_debug_get ?user_id ?include_inactive ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/logs/code/debug" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "user_id" (fun x -> x) user_id in
    let uri = Request.maybe_add_query_param uri "include_inactive" string_of_bool include_inactive in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let logs_code_debug_id_actions_reset_delete ~id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/logs/code/debug/{id}/actions/reset" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let logs_code_debug_id_actions_reset_post ~id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/logs/code/debug/{id}/actions/reset" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let logs_code_debug_id_files_get ~id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/logs/code/debug/{id}/files" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let logs_code_debug_id_get ~id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/logs/code/debug/{id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let logs_code_debug_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/logs/code/debug" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let logs_code_runtime_get ?date ?log_format ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/logs/code/runtime" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "date" (fun x -> x) date in
    let uri = Request.maybe_add_query_param uri "log_format" (fun x -> x) log_format in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let messages_message_type_actions_import_post ~message_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/messages/{message_type}/actions/import" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "message_type" (fun x -> x) message_type in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let messages_message_type_language_lang_actions_export_post ~message_type ~lang ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/messages/{message_type}/language/{lang}/actions/export" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "message_type" (fun x -> x) message_type in
    let uri = Request.replace_path_param uri "lang" (fun x -> x) lang in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_audittrail_audit_trail_type_get ~audit_trail_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/audittrail/{audit_trail_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "audit_trail_type" (fun x -> x) audit_trail_type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_audittrail_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/audittrail" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_components_component_type_get ~component_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/components/{component_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "component_type" (fun x -> x) component_type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_components_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/components" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_binders_templates_bindernodes_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/binders/templates/bindernodes" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_binders_templates_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/binders/templates" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_annotations_placemarks_types_placemark_type_get ~placemark_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/annotations/placemarks/types/{placemark_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "placemark_type" (fun x -> x) placemark_type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_annotations_references_types_reference_type_get ~reference_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/annotations/references/types/{reference_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "reference_type" (fun x -> x) reference_type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_annotations_types_annotation_type_get ~annotation_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/annotations/types/{annotation_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "annotation_type" (fun x -> x) annotation_type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_events_event_type_types_event_subtype_get ~event_type ~event_subtype ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/events/{event_type}/types/{event_subtype}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "event_type" (fun x -> x) event_type in
    let uri = Request.replace_path_param uri "event_subtype" (fun x -> x) event_subtype in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_events_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/events" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_lock_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/lock" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_properties_find_common_post ?content_type ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/properties/find_common" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_properties_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/properties" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_templates_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/templates" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_types_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/types" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_types_type_get ~_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/types/{type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "type" (fun x -> x) _type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_types_type_relationships_get ~_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/types/{type}/relationships" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "type" (fun x -> x) _type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_types_type_subtypes_subtype_classifications_classification_get ~_type ~subtype ~classification ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/types/{type}/subtypes/{subtype}/classifications/{classification}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "type" (fun x -> x) _type in
    let uri = Request.replace_path_param uri "subtype" (fun x -> x) subtype in
    let uri = Request.replace_path_param uri "classification" (fun x -> x) classification in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_documents_types_type_subtypes_subtype_get ~_type ~subtype ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/documents/types/{type}/subtypes/{subtype}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "type" (fun x -> x) _type in
    let uri = Request.replace_path_param uri "subtype" (fun x -> x) subtype in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_groups_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/groups" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_securitypolicies_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/securitypolicies" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_objects_users_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/objects/users" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_query_archived_documents_relationships_document_signature_sysr_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/query/archived_documents/relationships/document_signature__sysr" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_query_documents_relationships_document_signature_sysr_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/query/documents/relationships/document_signature__sysr" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_vobjects_get ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/vobjects" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "loc" string_of_bool loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_vobjects_object_name_actions_canceldeployment_post ~object_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/vobjects/{object_name}/actions/canceldeployment" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_vobjects_object_name_fields_object_field_name_get ~object_name ~object_field_name ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/vobjects/{object_name}/fields/{object_field_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_field_name" (fun x -> x) object_field_name in
    let uri = Request.maybe_add_query_param uri "loc" string_of_bool loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_vobjects_object_name_get ~object_name ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/vobjects/{object_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.maybe_add_query_param uri "loc" string_of_bool loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_vobjects_object_name_page_layouts_get ~object_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/vobjects/{object_name}/page_layouts" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let metadata_vobjects_object_name_page_layouts_layout_name_get ~object_name ~layout_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/metadata/vobjects/{object_name}/page_layouts/{layout_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "layout_name" (fun x -> x) layout_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let notifications_histories_get ?start_date ?end_date ?all_dates ?format_result ?limit ?offset ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/notifications/histories" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "start_date" (fun x -> x) start_date in
    let uri = Request.maybe_add_query_param uri "end_date" (fun x -> x) end_date in
    let uri = Request.maybe_add_query_param uri "all_dates" string_of_bool all_dates in
    let uri = Request.maybe_add_query_param uri "format_result" (fun x -> x) format_result in
    let uri = Request.maybe_add_query_param uri "limit" (fun x -> x) limit in
    let uri = Request.maybe_add_query_param uri "offset" (fun x -> x) offset in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let object_workflow_actions_action_get ~action ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/object/workflow/actions/{action}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "action" (fun x -> x) action in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let object_workflow_actions_action_post ~action ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/object/workflow/actions/{action}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "action" (fun x -> x) action in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let object_workflow_actions_canceltasks_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/object/workflow/actions/canceltasks" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let object_workflow_actions_cancelworkflows_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/object/workflow/actions/cancelworkflows" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let object_workflow_actions_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/object/workflow/actions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let object_workflow_actions_reassigntasks_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/object/workflow/actions/reassigntasks" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let object_workflow_actions_replaceworkflowowner_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/object/workflow/actions/replaceworkflowowner" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_actions_export_job_id_results_get ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/actions/export/{job_id}/results" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_actions_export_post ~binder_id ?source ?renditiontype ?docversion ?attachments ?export ?docfield ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/actions/export" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.maybe_add_query_param uri "source" string_of_bool source in
    let uri = Request.maybe_add_query_param uri "renditiontype" (fun x -> x) renditiontype in
    let uri = Request.maybe_add_query_param uri "docversion" (fun x -> x) docversion in
    let uri = Request.maybe_add_query_param uri "attachments" (fun x -> x) attachments in
    let uri = Request.maybe_add_query_param uri "export" (fun x -> x) export in
    let uri = Request.maybe_add_query_param uri "docfield" string_of_bool docfield in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_actions_post ~binder_id ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/actions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_binding_rule_put ~binder_id ?content_type ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/binding_rule" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_delete ~binder_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_documents_node_id_binding_rule_put ~binder_id ~node_id ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/documents/{node_id}/binding_rule" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "node_id" (fun x -> x) node_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_documents_post ~binder_id ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/documents" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_documents_section_id_delete ~binder_id ~section_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/documents/{section_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "section_id" (fun x -> x) section_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_documents_section_id_put ~binder_id ~section_id ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/documents/{section_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "section_id" (fun x -> x) section_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_get ~binder_id ?depth ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.maybe_add_query_param uri "depth" (fun x -> x) depth in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_post ~binder_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_put ~binder_id ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_roles_role_name_and_user_or_group_id_delete ~binder_id ~role_name_and_user_or_group ~id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/roles/{role_name_and_user_or_group}/{id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "role_name_and_user_or_group" (fun x -> x) role_name_and_user_or_group in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_sections_node_id_binding_rule_put ~binder_id ~node_id ?content_type ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/sections/{node_id}/binding_rule" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "node_id" (fun x -> x) node_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_sections_node_id_put ~binder_id ~node_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/sections/{node_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "node_id" (fun x -> x) node_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_sections_post ~binder_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/sections" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_sections_section_id_delete ~binder_id ~section_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/sections/{section_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "section_id" (fun x -> x) section_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_sections_section_id_get ~binder_id ~section_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/sections/{section_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "section_id" (fun x -> x) section_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_versions_get ~binder_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/versions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_versions_major_version_minor_version_actions_export_post ~binder_id ~major_version ~minor_version ?source ?renditiontype ?docversion ?attachments ?export ?docfield ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/actions/export" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.maybe_add_query_param uri "source" string_of_bool source in
    let uri = Request.maybe_add_query_param uri "renditiontype" (fun x -> x) renditiontype in
    let uri = Request.maybe_add_query_param uri "docversion" (fun x -> x) docversion in
    let uri = Request.maybe_add_query_param uri "attachments" (fun x -> x) attachments in
    let uri = Request.maybe_add_query_param uri "export" (fun x -> x) export in
    let uri = Request.maybe_add_query_param uri "docfield" string_of_bool docfield in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_versions_major_version_minor_version_delete ~binder_id ~major_version ~minor_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_versions_major_version_minor_version_get ~binder_id ~major_version ~minor_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_versions_major_version_minor_version_put ~binder_id ~major_version ~minor_version ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_versions_major_version_minor_version_relationships_post ~binder_id ~major_version ~minor_version ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_delete ~binder_id ~major_version ~minor_version ~relationship_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "relationship_id" (fun x -> x) relationship_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_versions_major_version_minor_version_relationships_relationship_id_get ~binder_id ~major_version ~minor_version ~relationship_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "relationship_id" (fun x -> x) relationship_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_binder_id_versions_major_version_minor_version_sections_section_id_get ~binder_id ~major_version ~minor_version ~section_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{binder_id}/versions/{major_version}/{minor_version}/sections/{section_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "binder_id" (fun x -> x) binder_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "section_id" (fun x -> x) section_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_id_roles_get ~id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{id}/roles" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_id_roles_post ~id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{id}/roles" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_id_roles_role_name_get ~id ~role_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{id}/roles/{role_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.replace_path_param uri "role_name" (fun x -> x) role_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_id_versions_major_version_minor_version_lifecycle_actions_get ~id ~major_version ~minor_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get ~id ~major_version ~minor_version ~name__v ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}/entry_requirements" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "name__v" (fun x -> x) name__v in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_id_versions_major_version_minor_version_lifecycle_actions_name_v_put ~id ~major_version ~minor_version ~name__v ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "name__v" (fun x -> x) name__v in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_lifecycle_actions_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/lifecycle_actions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_lifecycle_actions_user_action_name_put ~user_action_name ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/lifecycle_actions/{user_action_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "user_action_name" (fun x -> x) user_action_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_post ?async ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "async" string_of_bool async in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_templates_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/templates" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_templates_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/templates" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_templates_put ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/templates" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_templates_template_name_bindernodes_get ~template_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/templates/{template_name}/bindernodes" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "template_name" (fun x -> x) template_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_templates_template_name_bindernodes_post ~template_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/templates/{template_name}/bindernodes" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "template_name" (fun x -> x) template_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_templates_template_name_bindernodes_put ~template_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/templates/{template_name}/bindernodes" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "template_name" (fun x -> x) template_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_templates_template_name_delete ~template_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/templates/{template_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "template_name" (fun x -> x) template_name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_binders_templates_template_name_get ~template_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/binders/templates/{template_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "template_name" (fun x -> x) template_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_deletions_documents_get ?start_date ?end_date ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/deletions/documents" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "start_date" (fun x -> x) start_date in
    let uri = Request.maybe_add_query_param uri "end_date" (fun x -> x) end_date in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_deletions_vobjects_object_name_get ~object_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/deletions/vobjects/{object_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_actions_get ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/actions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "loc" string_of_bool loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_actions_lifecycle_and_state_and_action_job_id_results_get ~lifecycle_and_state_and_action ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/actions/{lifecycle_and_state_and_action}/{job_id}/results" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "lifecycle_and_state_and_action" (fun x -> x) lifecycle_and_state_and_action in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_actions_workflow_name_get ~workflow_name ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/actions/{workflow_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "workflow_name" (fun x -> x) workflow_name in
    let uri = Request.maybe_add_query_param uri "loc" string_of_bool loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_actions_workflow_name_post ~workflow_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/actions/{workflow_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "workflow_name" (fun x -> x) workflow_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_annotations_batch_delete ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/annotations/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_annotations_batch_post ~authorization ~content_type ~accept ~x_vault_api_client_id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/annotations/batch" in
    let headers = Request.default_headers in
    let headers = Request.add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_annotations_batch_put ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/annotations/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_annotations_replies_batch_post ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/annotations/replies/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_attachments_batch_delete ?accept ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/attachments/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_attachments_batch_post ?accept ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/attachments/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_attachments_batch_put ?accept ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/attachments/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_batch_actions_fileextract_job_id_results_get ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/batch/actions/fileextract/{job_id}/results" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_batch_actions_fileextract_post ?source ?renditions ?allversions ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/batch/actions/fileextract" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "source" string_of_bool source in
    let uri = Request.maybe_add_query_param uri "renditions" string_of_bool renditions in
    let uri = Request.maybe_add_query_param uri "allversions" string_of_bool allversions in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_batch_actions_reclassify_put ?authorization ?content_type ?accept ?x_vault_api_migration_mode ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/batch/actions/reclassify" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-MigrationMode" string_of_bool x_vault_api_migration_mode in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_batch_actions_rerender_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/batch/actions/rerender" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_batch_delete ?id_param ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "idParam" (fun x -> x) id_param in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_batch_lock_delete ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/batch/lock" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_batch_post ?authorization ?accept ?content_type ?x_vault_api_migration_mode ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-MigrationMode" string_of_bool x_vault_api_migration_mode in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_batch_put ?authorization ?accept ?content_type ?x_vault_api_migration_mode ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-MigrationMode" string_of_bool x_vault_api_migration_mode in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_anchors_get ~doc_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/anchors" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_annotations_file_get ~doc_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/annotations/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_annotations_file_post ~doc_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/annotations/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_attachment_id_delete ~doc_id ~attachment_id ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments/{attachment_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_attachment_id_file_get ~doc_id ~attachment_id ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments/{attachment_id}/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_attachment_id_get ~doc_id ~attachment_id ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments/{attachment_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_attachment_id_put ~doc_id ~attachment_id ?accept ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments/{attachment_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_delete ~doc_id ~attachment_id ~attachment_version ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    let uri = Request.replace_path_param uri "attachment_version" (fun x -> x) attachment_version in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_file_get ~doc_id ~attachment_id ~attachment_version ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    let uri = Request.replace_path_param uri "attachment_version" (fun x -> x) attachment_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_get ~doc_id ~attachment_id ~attachment_version ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    let uri = Request.replace_path_param uri "attachment_version" (fun x -> x) attachment_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_attachment_id_versions_attachment_version_post ~doc_id ~attachment_id ~attachment_version ?restore ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments/{attachment_id}/versions/{attachment_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    let uri = Request.replace_path_param uri "attachment_version" (fun x -> x) attachment_version in
    let uri = Request.maybe_add_query_param uri "restore" string_of_bool restore in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_attachment_id_versions_get ~doc_id ~attachment_id ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments/{attachment_id}/versions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_file_get ~doc_id ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_get ~doc_id ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_attachments_post ~doc_id ?accept ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/attachments" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_audittrail_get ~doc_id ?start_date ?end_date ?format_result ?limit ?offset ?events ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/audittrail" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.maybe_add_query_param uri "start_date" (fun x -> x) start_date in
    let uri = Request.maybe_add_query_param uri "end_date" (fun x -> x) end_date in
    let uri = Request.maybe_add_query_param uri "format_result" (fun x -> x) format_result in
    let uri = Request.maybe_add_query_param uri "limit" (fun x -> x) limit in
    let uri = Request.maybe_add_query_param uri "offset" (fun x -> x) offset in
    let uri = Request.maybe_add_query_param uri "events" (fun x -> x) events in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_delete ~doc_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_events_get ~doc_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/events" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_file_get ~doc_id ?lock_document ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.maybe_add_query_param uri "lockDocument" string_of_bool lock_document in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_get ~doc_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_lock_delete ~doc_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/lock" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_lock_get ~doc_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/lock" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_lock_post ~doc_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/lock" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_major_version_minor_version_attachments_file_get ~doc_id ~major_version ~minor_version ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/{major_version}/{minor_version}/attachments/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_post ~doc_id ?suppress_rendition ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.maybe_add_query_param uri "suppressRendition" (fun x -> x) suppress_rendition in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_put ~doc_id ?authorization ?content_type ?accept ?x_vault_api_migration_mode ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-MigrationMode" string_of_bool x_vault_api_migration_mode in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_renditions_get ~doc_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/renditions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_renditions_rendition_type_delete ~doc_id ~rendition_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/renditions/{rendition_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "rendition_type" (fun x -> x) rendition_type in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_renditions_rendition_type_get ~doc_id ~rendition_type ?steady_state ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/renditions/{rendition_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "rendition_type" (fun x -> x) rendition_type in
    let uri = Request.maybe_add_query_param uri "steadyState" (fun x -> x) steady_state in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_renditions_rendition_type_post ~doc_id ~rendition_type ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/renditions/{rendition_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "rendition_type" (fun x -> x) rendition_type in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_renditions_rendition_type_put ~doc_id ~rendition_type ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/renditions/{rendition_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "rendition_type" (fun x -> x) rendition_type in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_roles_role_name_and_user_or_group_id_delete ~doc_id ~role_name_and_user_or_group ~id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/roles/{role_name_and_user_or_group}/{id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "role_name_and_user_or_group" (fun x -> x) role_name_and_user_or_group in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_version_major_version_minor_version_attachments_get ~doc_id ~major_version ~minor_version ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/version/{major_version}/{minor_version}/attachments" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_get ~doc_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_get ~doc_id ~major_version ~minor_version ~annotation_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/{annotation_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "annotation_id" (fun x -> x) annotation_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_annotations_annotation_id_replies_get ~doc_id ~major_version ~minor_version ~annotation_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/{annotation_id}/replies" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "annotation_id" (fun x -> x) annotation_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_annotations_file_get ~doc_id ~major_version ~minor_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_annotations_file_post ~doc_id ~major_version ~minor_version ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_annotations_get ~doc_id ~major_version ~minor_version ?limit ?offset ?annotation_types ?pagination_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/annotations" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.maybe_add_query_param uri "limit" (fun x -> x) limit in
    let uri = Request.maybe_add_query_param uri "offset" (fun x -> x) offset in
    let uri = Request.maybe_add_query_param uri "annotation_types" (fun x -> x) annotation_types in
    let uri = Request.maybe_add_query_param uri "pagination_id" (fun x -> x) pagination_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_file_get ~doc_id ~major_version ~minor_version ~attachment_id ~attachment_version ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/attachments/{attachment_id}/versions/{attachment_version}/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    let uri = Request.replace_path_param uri "attachment_version" (fun x -> x) attachment_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_attachments_attachment_id_versions_attachment_version_get ~doc_id ~major_version ~minor_version ~attachment_id ~attachment_version ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/attachments/{attachment_id}/versions/{attachment_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    let uri = Request.replace_path_param uri "attachment_version" (fun x -> x) attachment_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_delete ~doc_id ~major_version ~minor_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_doc_export_annotations_to_csv_get ~doc_id ~major_version ~minor_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/doc-export-annotations-to-csv" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_events_post ~doc_id ~major_version ~minor_version ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/events" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_export_video_annotations_get ~doc_id ~major_version ~minor_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/export-video-annotations" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_file_get ~doc_id ~major_version ~minor_version ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_get ~doc_id ~major_version ~minor_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_put ~doc_id ~major_version ~minor_version ?authorization ?content_type ?accept ?x_vault_api_migration_mode ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-MigrationMode" string_of_bool x_vault_api_migration_mode in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_relationships_get ~doc_id ~major_version ~minor_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_relationships_post ~doc_id ~major_version ~minor_version ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_delete ~doc_id ~major_version ~minor_version ~relationship_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "relationship_id" (fun x -> x) relationship_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_relationships_relationship_id_get ~doc_id ~major_version ~minor_version ~relationship_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/relationships/{relationship_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "relationship_id" (fun x -> x) relationship_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_renditions_get ~doc_id ~major_version ~minor_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_delete ~doc_id ~major_version ~minor_version ~rendition_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "rendition_type" (fun x -> x) rendition_type in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_get ~doc_id ~major_version ~minor_version ~rendition_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "rendition_type" (fun x -> x) rendition_type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_post ~doc_id ~major_version ~minor_version ~rendition_type ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "rendition_type" (fun x -> x) rendition_type in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_renditions_rendition_type_put ~doc_id ~major_version ~minor_version ~rendition_type ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/renditions/{rendition_type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "rendition_type" (fun x -> x) rendition_type in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_doc_id_versions_major_version_minor_version_thumbnail_get ~doc_id ~major_version ~minor_version ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{doc_id}/versions/{major_version}/{minor_version}/thumbnail" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "doc_id" (fun x -> x) doc_id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_get ?named_filter ?scope ?versionscope ?search ?limit ?sort ?start ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "named_filter" (fun x -> x) named_filter in
    let uri = Request.maybe_add_query_param uri "scope" (fun x -> x) scope in
    let uri = Request.maybe_add_query_param uri "versionscope" (fun x -> x) versionscope in
    let uri = Request.maybe_add_query_param uri "search" (fun x -> x) search in
    let uri = Request.maybe_add_query_param uri "limit" (fun x -> x) limit in
    let uri = Request.maybe_add_query_param uri "sort" (fun x -> x) sort in
    let uri = Request.maybe_add_query_param uri "start" (fun x -> x) start in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_id_roles_get ~id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{id}/roles" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_id_roles_post ~id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{id}/roles" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_id_roles_role_name_get ~id ~role_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{id}/roles/{role_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.replace_path_param uri "role_name" (fun x -> x) role_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_id_versions_major_version_minor_version_lifecycle_actions_get ~id ~major_version ~minor_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_entry_requirements_get ~id ~major_version ~minor_version ~name__v ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}/entry_requirements" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "name__v" (fun x -> x) name__v in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_id_versions_major_version_minor_version_lifecycle_actions_name_v_put ~id ~major_version ~minor_version ~name__v ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/{id}/versions/{major_version}/{minor_version}/lifecycle_actions/{name__v}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.replace_path_param uri "major_version" (fun x -> x) major_version in
    let uri = Request.replace_path_param uri "minor_version" (fun x -> x) minor_version in
    let uri = Request.replace_path_param uri "name__v" (fun x -> x) name__v in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_lifecycle_actions_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/lifecycle_actions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_lifecycle_actions_user_action_name_put ~user_action_name ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/lifecycle_actions/{user_action_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "user_action_name" (fun x -> x) user_action_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_post ?authorization ?accept ?x_vault_api_migration_mode ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-MigrationMode" string_of_bool x_vault_api_migration_mode in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_relationships_batch_delete ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/relationships/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_relationships_batch_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/relationships/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_renditions_batch_delete ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/renditions/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_renditions_batch_post ?id_param ?large_size_asset ?authorization ?accept ?content_type ?x_vault_api_migration_mode ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/renditions/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-MigrationMode" string_of_bool x_vault_api_migration_mode in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "idParam" (fun x -> x) id_param in
    let uri = Request.maybe_add_query_param uri "largeSizeAsset" (fun x -> x) large_size_asset in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_roles_batch_delete ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/roles/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_roles_batch_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/roles/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_templates_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/templates" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_templates_post ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/templates" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_templates_put ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/templates" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_templates_template_name_delete ~template_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/templates/{template_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "template_name" (fun x -> x) template_name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_templates_template_name_file_get ~template_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/templates/{template_name}/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "template_name" (fun x -> x) template_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_templates_template_name_get ~template_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/templates/{template_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "template_name" (fun x -> x) template_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_templates_template_name_put ~template_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/templates/{template_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "template_name" (fun x -> x) template_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_tokens_post ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/tokens" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_versions_batch_actions_fileextract_post ?source ?renditions ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/versions/batch/actions/fileextract" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "source" string_of_bool source in
    let uri = Request.maybe_add_query_param uri "renditions" string_of_bool renditions in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_versions_batch_delete ?id_param ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/versions/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "idParam" (fun x -> x) id_param in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_documents_versions_batch_post ?id_param ?authorization ?accept ?content_type ?x_vault_api_migration_mode ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/documents/versions/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-MigrationMode" (fun x -> x) x_vault_api_migration_mode in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "idParam" (fun x -> x) id_param in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_domain_get ?include_application ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/domain" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "include_application" string_of_bool include_application in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_domains_get ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/domains" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_edl_matched_documents_batch_actions_add_post ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/edl_matched_documents/batch/actions/add" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_edl_matched_documents_batch_actions_remove_post ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/edl_matched_documents/batch/actions/remove" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_groups_auto_get ?limit ?offset ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/groups/auto" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "limit" (fun x -> x) limit in
    let uri = Request.maybe_add_query_param uri "offset" (fun x -> x) offset in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_groups_get ?include_implied ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/groups" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "includeImplied" (fun x -> x) include_implied in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_groups_group_id_delete ~group_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/groups/{group_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "group_id" (fun x -> x) group_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_groups_group_id_get ~group_id ?include_implied ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/groups/{group_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "group_id" (fun x -> x) group_id in
    let uri = Request.maybe_add_query_param uri "includeImplied" string_of_bool include_implied in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_groups_group_id_put ~group_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/groups/{group_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "group_id" (fun x -> x) group_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_groups_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/groups" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_licenses_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/licenses" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_actions_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/actions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_actions_workflow_name_get ~workflow_name ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/actions/{workflow_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "workflow_name" (fun x -> x) workflow_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_actions_workflow_name_post ~workflow_name ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/actions/{workflow_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "workflow_name" (fun x -> x) workflow_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_get ?object__v ?record_id__v ?participant ?status__v ?offset ?page_size ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "object__v" (fun x -> x) object__v in
    let uri = Request.maybe_add_query_param uri "record_id__v" (fun x -> x) record_id__v in
    let uri = Request.maybe_add_query_param uri "participant" (fun x -> x) participant in
    let uri = Request.maybe_add_query_param uri "status__v" (fun x -> x) status__v in
    let uri = Request.maybe_add_query_param uri "offset" (fun x -> x) offset in
    let uri = Request.maybe_add_query_param uri "page_size" (fun x -> x) page_size in
    let uri = Request.maybe_add_query_param uri "loc" (fun x -> x) loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_get ?object__v ?record_id__v ?assignee__v ?status__v ?offset ?page_size ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "object__v" (fun x -> x) object__v in
    let uri = Request.maybe_add_query_param uri "record_id__v" (fun x -> x) record_id__v in
    let uri = Request.maybe_add_query_param uri "assignee__v" (fun x -> x) assignee__v in
    let uri = Request.maybe_add_query_param uri "status__v" (fun x -> x) status__v in
    let uri = Request.maybe_add_query_param uri "offset" (fun x -> x) offset in
    let uri = Request.maybe_add_query_param uri "page_size" (fun x -> x) page_size in
    let uri = Request.maybe_add_query_param uri "loc" (fun x -> x) loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_accept_post ~task_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions/accept" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_cancel_post ~task_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions/cancel" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_complete_post ~task_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions/complete" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_get ~task_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_mdwaccept_post ~task_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions/mdwaccept" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_mdwcomplete_post ~task_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions/mdwcomplete" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_mdwmanagecontent_post ~task_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions/mdwmanagecontent" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_mdwreassign_post ~task_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions/mdwreassign" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_reassign_post ~task_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions/reassign" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_task_action_get ~task_id ~task_action ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions/{task_action}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    let uri = Request.replace_path_param uri "task_action" (fun x -> x) task_action in
    let uri = Request.maybe_add_query_param uri "loc" (fun x -> x) loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_undoaccept_post ~task_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions/undoaccept" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_actions_updateduedate_post ~task_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}/actions/updateduedate" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_tasks_task_id_get ~task_id ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/tasks/{task_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    let uri = Request.maybe_add_query_param uri "loc" string_of_bool loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_workflow_id_actions_get ~workflow_id ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/{workflow_id}/actions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "workflow_id" (fun x -> x) workflow_id in
    let uri = Request.maybe_add_query_param uri "loc" (fun x -> x) loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_workflow_id_actions_workflow_action_get ~workflow_id ~workflow_action ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/{workflow_id}/actions/{workflow_action}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "workflow_id" (fun x -> x) workflow_id in
    let uri = Request.replace_path_param uri "workflow_action" (fun x -> x) workflow_action in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_workflow_id_actions_workflow_action_post ~workflow_id ~workflow_action ?documents__sys ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/{workflow_id}/actions/{workflow_action}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "workflow_id" (fun x -> x) workflow_id in
    let uri = Request.replace_path_param uri "workflow_action" (fun x -> x) workflow_action in
    let uri = Request.maybe_add_query_param uri "documents__sys" (fun x -> x) documents__sys in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_objectworkflows_workflow_id_get ~workflow_id ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/objectworkflows/{workflow_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "workflow_id" (fun x -> x) workflow_id in
    let uri = Request.maybe_add_query_param uri "loc" string_of_bool loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_picklists_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/picklists" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_picklists_picklist_name_get ~picklist_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/picklists/{picklist_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "picklist_name" (fun x -> x) picklist_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_picklists_picklist_name_picklist_value_name_delete ~picklist_name ~picklist_value_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/picklists/{picklist_name}/{picklist_value_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "picklist_name" (fun x -> x) picklist_name in
    let uri = Request.replace_path_param uri "picklist_value_name" (fun x -> x) picklist_value_name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_picklists_picklist_name_picklist_value_name_put ~picklist_name ~picklist_value_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/picklists/{picklist_name}/{picklist_value_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "picklist_name" (fun x -> x) picklist_name in
    let uri = Request.replace_path_param uri "picklist_value_name" (fun x -> x) picklist_value_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_picklists_picklist_name_post ~picklist_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/picklists/{picklist_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "picklist_name" (fun x -> x) picklist_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_picklists_picklist_name_put ~picklist_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/picklists/{picklist_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "picklist_name" (fun x -> x) picklist_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_actions_buildproduction_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/actions/buildproduction" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_actions_promoteproduction_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/actions/promoteproduction" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_actions_recheckusage_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/actions/recheckusage" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_batch_changesize_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/batch/changesize" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_entitlements_set_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/entitlements/set" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_name_delete ~name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/{name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_snapshot_api_name_actions_update_post ~api_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/snapshot/{api_name}/actions/update" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "api_name" (fun x -> x) api_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_snapshot_api_name_actions_upgrade_post ~api_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/snapshot/{api_name}/actions/upgrade" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "api_name" (fun x -> x) api_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_snapshot_api_name_delete ~api_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/snapshot/{api_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "api_name" (fun x -> x) api_name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_snapshot_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/snapshot" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_snapshot_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/snapshot" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_vault_id_actions_refresh_post ~vault_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/{vault_id}/actions/refresh" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "vault_id" (fun x -> x) vault_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_sandbox_vault_id_get ~vault_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/sandbox/{vault_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "vault_id" (fun x -> x) vault_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_securitypolicies_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/securitypolicies" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_securitypolicies_security_policy_name_get ~security_policy_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/securitypolicies/{security_policy_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "security_policy_name" (fun x -> x) security_policy_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_get ?vaults ?exclude_vault_membership ?exclude_app_licensing ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users/" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "vaults" (fun x -> x) vaults in
    let uri = Request.maybe_add_query_param uri "exclude_vault_membership" (fun x -> x) exclude_vault_membership in
    let uri = Request.maybe_add_query_param uri "exclude_app_licensing" (fun x -> x) exclude_app_licensing in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_id_get ~id ?exclude_vault_membership ?exclude_app_licensing ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users/{id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.maybe_add_query_param uri "exclude_vault_membership" (fun x -> x) exclude_vault_membership in
    let uri = Request.maybe_add_query_param uri "exclude_app_licensing" (fun x -> x) exclude_app_licensing in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_id_permissions_get ~id ?filter ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users/{id}/permissions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.maybe_add_query_param uri "filter" (fun x -> x) filter in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_id_put ~id ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users/{id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_me_get ?exclude_vault_membership ?exclude_app_licensing ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users/me" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "exclude_vault_membership" (fun x -> x) exclude_vault_membership in
    let uri = Request.maybe_add_query_param uri "exclude_app_licensing" (fun x -> x) exclude_app_licensing in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_me_password_post ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users/me/password" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_me_permissions_get ?filter ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users/me/permissions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "filter" (fun x -> x) filter in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_me_put ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users/me" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_put ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_user_id_delete ~user_id ?domain ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users/{user_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "user_id" (fun x -> x) user_id in
    let uri = Request.maybe_add_query_param uri "domain" string_of_bool domain in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_users_user_id_vault_membership_vault_id_put ~user_id ~vault_id ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/users/{user_id}/vault_membership/{vault_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "user_id" (fun x -> x) user_id in
    let uri = Request.replace_path_param uri "vault_id" (fun x -> x) vault_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_vault_actions_compare_post ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/vault/actions/compare" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let objects_vault_actions_configreport_post ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/objects/vault/actions/configreport" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let query_components_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/query/components" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let query_next_page_post ~next_page ?authorization ?accept ?x_vault_api_describe_query ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/query/{next_page}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-DescribeQuery" string_of_bool x_vault_api_describe_query in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "next_page" (fun x -> x) next_page in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let query_post ?authorization ?accept ?x_vault_api_describe_query ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/query" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-DescribeQuery" string_of_bool x_vault_api_describe_query in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let query_previous_page_post ~previous_page ?authorization ?accept ?x_vault_api_describe_query ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/query/{previous_page}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-DescribeQuery" string_of_bool x_vault_api_describe_query in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "previous_page" (fun x -> x) previous_page in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_me_get ?attributes ?excluded_attributes ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/Me" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "attributes" (fun x -> x) attributes in
    let uri = Request.maybe_add_query_param uri "excludedAttributes" (fun x -> x) excluded_attributes in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_me_put ?attributes ?excluded_attributes ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/Me" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "attributes" (fun x -> x) attributes in
    let uri = Request.maybe_add_query_param uri "excludedAttributes" (fun x -> x) excluded_attributes in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_resource_types_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/ResourceTypes" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_resource_types_type_get ~_type ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/ResourceTypes/{type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "type" (fun x -> x) _type in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_schemas_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/Schemas" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_schemas_id_get ~id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/Schemas/{id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_service_provider_config_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/ServiceProviderConfig" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_type_get ~_type ?filter ?attributes ?excluded_attributes ?sort_by ?sort_order ?start_index ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/{type}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "type" (fun x -> x) _type in
    let uri = Request.maybe_add_query_param uri "filter" (fun x -> x) filter in
    let uri = Request.maybe_add_query_param uri "attributes" (fun x -> x) attributes in
    let uri = Request.maybe_add_query_param uri "excludedAttributes" (fun x -> x) excluded_attributes in
    let uri = Request.maybe_add_query_param uri "sortBy" (fun x -> x) sort_by in
    let uri = Request.maybe_add_query_param uri "sortOrder" (fun x -> x) sort_order in
    let uri = Request.maybe_add_query_param uri "startIndex" (fun x -> x) start_index in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_type_id_get ~_type ~id ?attributes ?excluded_attributes ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/{type}/{id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "type" (fun x -> x) _type in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.maybe_add_query_param uri "attributes" (fun x -> x) attributes in
    let uri = Request.maybe_add_query_param uri "excludedAttributes" (fun x -> x) excluded_attributes in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_users_get ?filter ?attributes ?excluded_attributes ?sort_by ?sort_order ?count ?start_index ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/Users" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "filter" (fun x -> x) filter in
    let uri = Request.maybe_add_query_param uri "attributes" (fun x -> x) attributes in
    let uri = Request.maybe_add_query_param uri "excludedAttributes" (fun x -> x) excluded_attributes in
    let uri = Request.maybe_add_query_param uri "sortBy" (fun x -> x) sort_by in
    let uri = Request.maybe_add_query_param uri "sortOrder" (fun x -> x) sort_order in
    let uri = Request.maybe_add_query_param uri "count" (fun x -> x) count in
    let uri = Request.maybe_add_query_param uri "startIndex" (fun x -> x) start_index in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_users_id_get ~id ?filter ?attributes ?excluded_attributes ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/Users/{id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.maybe_add_query_param uri "filter" (fun x -> x) filter in
    let uri = Request.maybe_add_query_param uri "attributes" (fun x -> x) attributes in
    let uri = Request.maybe_add_query_param uri "excludedAttributes" (fun x -> x) excluded_attributes in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_users_id_put ~id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/Users/{id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let scim_v2_users_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/scim/v2/Users" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_certificate_cert_id_get ~cert_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/certificate/{cert_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "cert_id" (fun x -> x) cert_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_configuration_mode_actions_disable_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/configuration_mode/actions/disable" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_configuration_mode_actions_enable_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/configuration_mode/actions/enable" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_directdata_files_get ?extract_type ?start_time ?stop_time ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/directdata/files" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "extract_type" (fun x -> x) extract_type in
    let uri = Request.maybe_add_query_param uri "start_time" Int32.to_string start_time in
    let uri = Request.maybe_add_query_param uri "stop_time" Int32.to_string stop_time in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_directdata_files_name_get ~name ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/directdata/files/{name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "name" (fun x -> x) name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_items_content_item_get ~item ?authorization ?accept ?range ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/items/content/{item}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Range" (fun x -> x) range in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "item" (fun x -> x) item in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_items_item_delete ~item ?recursive ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/items/{item}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "item" (fun x -> x) item in
    let uri = Request.maybe_add_query_param uri "recursive" (fun x -> x) recursive in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_items_item_get ~item ?recursive ?limit ?format_result ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/items/{item}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "item" (fun x -> x) item in
    let uri = Request.maybe_add_query_param uri "recursive" (fun x -> x) recursive in
    let uri = Request.maybe_add_query_param uri "limit" (fun x -> x) limit in
    let uri = Request.maybe_add_query_param uri "format_result" (fun x -> x) format_result in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_items_item_put ~item ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/items/{item}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "item" (fun x -> x) item in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_items_post ?authorization ?accept ?content_md5 ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/items" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-MD5" (fun x -> x) content_md5 in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_upload_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/upload/" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_upload_post ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/upload" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_upload_upload_session_id_delete ~upload_session_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/upload/{upload_session_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "upload_session_id" (fun x -> x) upload_session_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_upload_upload_session_id_get ~upload_session_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/upload/{upload_session_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "upload_session_id" (fun x -> x) upload_session_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_upload_upload_session_id_parts_get ~upload_session_id ?limit ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/upload/{upload_session_id}/parts" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "upload_session_id" (fun x -> x) upload_session_id in
    let uri = Request.maybe_add_query_param uri "limit" (fun x -> x) limit in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_upload_upload_session_id_post ~upload_session_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/upload/{upload_session_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "upload_session_id" (fun x -> x) upload_session_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_file_staging_upload_upload_session_id_put ~upload_session_id ?authorization ?accept ?content_type ?x_vault_api_file_part_number ?content_md5 ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/file_staging/upload/{upload_session_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-FilePartNumber" (fun x -> x) x_vault_api_file_part_number in
    let headers = Request.maybe_add_header headers "Content-MD5" (fun x -> x) content_md5 in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "upload_session_id" (fun x -> x) upload_session_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_jobs_histories_get ?start_date ?end_date ?status ?limit ?offset ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/jobs/histories" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "start_date" (fun x -> x) start_date in
    let uri = Request.maybe_add_query_param uri "end_date" (fun x -> x) end_date in
    let uri = Request.maybe_add_query_param uri "status" (fun x -> x) status in
    let uri = Request.maybe_add_query_param uri "limit" (fun x -> x) limit in
    let uri = Request.maybe_add_query_param uri "offset" (fun x -> x) offset in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_jobs_job_id_errors_get ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/jobs/{job_id}/errors" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_jobs_job_id_get ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/jobs/{job_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_jobs_job_id_summary_get ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/jobs/{job_id}/summary" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_jobs_job_id_tasks_get ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/jobs/{job_id}/tasks" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_jobs_monitors_get ?start_date ?end_date ?status ?limit ?offset ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/jobs/monitors" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.maybe_add_query_param uri "start_date" (fun x -> x) start_date in
    let uri = Request.maybe_add_query_param uri "end_date" (fun x -> x) end_date in
    let uri = Request.maybe_add_query_param uri "status" (fun x -> x) status in
    let uri = Request.maybe_add_query_param uri "limit" (fun x -> x) limit in
    let uri = Request.maybe_add_query_param uri "offset" (fun x -> x) offset in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_jobs_start_now_job_id_post ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/jobs/start_now/{job_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_loader_extract_post ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/loader/extract" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_loader_job_id_tasks_task_id_failurelog_get ~job_id ~task_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/loader/{job_id}/tasks/{task_id}/failurelog" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_loader_job_id_tasks_task_id_results_get ~job_id ~task_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/loader/{job_id}/tasks/{task_id}/results" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_loader_job_id_tasks_task_id_results_renditions_get ~job_id ~task_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/loader/{job_id}/tasks/{task_id}/results/renditions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_loader_job_id_tasks_task_id_successlog_get ~job_id ~task_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/loader/{job_id}/tasks/{task_id}/successlog" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    let uri = Request.replace_path_param uri "task_id" (fun x -> x) task_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_loader_load_post ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/loader/load" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_package_actions_validate_post ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/package/actions/validate" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_package_post ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/package" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_package_put ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/package" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_queues_get ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/queues" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_queues_queue_name_actions_disable_delivery_put ~queue_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/queues/{queue_name}/actions/disable_delivery" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "queue_name" (fun x -> x) queue_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_queues_queue_name_actions_enable_delivery_put ~queue_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/queues/{queue_name}/actions/enable_delivery" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "queue_name" (fun x -> x) queue_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_queues_queue_name_actions_reset_put ~queue_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/queues/{queue_name}/actions/reset" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "queue_name" (fun x -> x) queue_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_queues_queue_name_get ~queue_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/queues/{queue_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "queue_name" (fun x -> x) queue_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let services_vobject_vault_package_v_package_id_actions_validate_post ~package_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/services/vobject/vault_package__v/{package_id}/actions/validate" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "package_id" (fun x -> x) package_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let session_delete ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/session" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let uicode_distributions_distribution_name_code_get ~distribution_name ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/uicode/distributions/{distribution_name}/code" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "distribution_name" (fun x -> x) distribution_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let uicode_distributions_distribution_name_delete ~distribution_name ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/uicode/distributions/{distribution_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "distribution_name" (fun x -> x) distribution_name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let uicode_distributions_distribution_name_get ~distribution_name ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/uicode/distributions/{distribution_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "distribution_name" (fun x -> x) distribution_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let uicode_distributions_get ?accept ?authorization ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/uicode/distributions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let uicode_distributions_post ?accept ?authorization ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/uicode/distributions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobject_vault_package_v_package_id_actions_deploy_post ~package_id ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobject/vault_package__v/{package_id}/actions/deploy" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "package_id" (fun x -> x) package_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobject_vault_package_v_package_id_actions_deploy_results_get ~package_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobject/vault_package__v/{package_id}/actions/deploy/results" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "package_id" (fun x -> x) package_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_cascadedelete_results_object_name_job_status_job_id_get ~object_name ~job_status ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/cascadedelete/results/{object_name}/{job_status}/{job_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "job_status" (fun x -> x) job_status in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_deepcopy_results_object_name_job_status_job_id_get ~object_name ~job_status ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/deepcopy/results/{object_name}/{job_status}/{job_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "job_status" (fun x -> x) job_status in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_edl_item_v_actions_createplaceholder_post ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/edl_item__v/actions/createplaceholder" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_merges_job_id_log_get ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/merges/{job_id}/log" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_merges_job_id_results_get ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/merges/{job_id}/results" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_merges_job_id_status_get ~job_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/merges/{job_id}/status" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "job_id" (fun x -> x) job_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_actions_action_name_post ~object_name ~action_name ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/actions/{action_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "action_name" (fun x -> x) action_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_actions_changetype_post ~object_name ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/actions/changetype" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_actions_merge_post ~object_name ?authorization ?content_type ?accept ?x_vault_api_client_id ~model__vobjects__object_name__actions_merge_post_request_inner () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/actions/merge" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let body = Request.write_as_json_body (JsonSupport.of_list_of Model__vobjects__object_name__actions_merge_post_request_inner.to_yojson) model__vobjects__object_name__actions_merge_post_request_inner in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_actions_recalculaterollups_get ~object_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/actions/recalculaterollups" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_actions_recalculaterollups_post ~object_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/actions/recalculaterollups" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_actions_updatecorporatecurrency_put ~object_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/actions/updatecorporatecurrency" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_attachments_batch_delete ~object_name ?id_param ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/attachments/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.maybe_add_query_param uri "idParam" (fun x -> x) id_param in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_attachments_batch_post ~object_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/attachments/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_attachments_batch_put ~object_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/attachments/batch" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_delete ~object_name ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_id_roles_role_name_get ~object_name ~id ~role_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{id}/roles/{role_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.replace_path_param uri "role_name" (fun x -> x) role_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_actions_action_name_get ~object_name ~object_record_id ~action_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/actions/{action_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "action_name" (fun x -> x) action_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_actions_action_name_post ~object_name ~object_record_id ~action_name ?authorization ?content_type ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/actions/{action_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "action_name" (fun x -> x) action_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_actions_cascadedelete_post ~object_name ~object_record_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/actions/cascadedelete" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_actions_deepcopy_post ~object_name ~object_record_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/actions/deepcopy" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_actions_get ~object_name ~object_record_id ?loc ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/actions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.maybe_add_query_param uri "loc" string_of_bool loc in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_get ~object_name ~object_record_id ~attachment_field_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachment_fields/{attachment_field_name}/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "attachment_field_name" (fun x -> x) attachment_field_name in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachment_fields_attachment_field_name_file_post ~object_name ~object_record_id ~attachment_field_name ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachment_fields/{attachment_field_name}/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "attachment_field_name" (fun x -> x) attachment_field_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachment_fields_file_get ~object_name ~object_record_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachment_fields/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachments_attachment_id_delete ~object_name ~object_record_id ~attachment_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachments_attachment_id_get ~object_name ~object_record_id ~attachment_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachments_attachment_id_put ~object_name ~object_record_id ~attachment_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_delete ~object_name ~object_record_id ~attachment_id ~attachment_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    let uri = Request.replace_path_param uri "attachment_version" (fun x -> x) attachment_version in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_file_get ~object_name ~object_record_id ~attachment_id ~attachment_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    let uri = Request.replace_path_param uri "attachment_version" (fun x -> x) attachment_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_get ~object_name ~object_record_id ~attachment_id ~attachment_version ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    let uri = Request.replace_path_param uri "attachment_version" (fun x -> x) attachment_version in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachments_attachment_id_versions_attachment_version_post ~object_name ~object_record_id ~attachment_id ~attachment_version ?restore ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions/{attachment_version}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    let uri = Request.replace_path_param uri "attachment_version" (fun x -> x) attachment_version in
    let uri = Request.maybe_add_query_param uri "restore" string_of_bool restore in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachments_attachment_id_versions_get ~object_name ~object_record_id ~attachment_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachments/{attachment_id}/versions" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.replace_path_param uri "attachment_id" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachments_file_get ~object_name ~object_record_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachments/file" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachments_get ~object_name ~object_record_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachments" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_attachments_post ~object_name ~object_record_id ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/attachments" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_audittrail_get ~object_name ~object_record_id ?start_date ?end_date ?format_result ?limit ?offset ?events ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}/audittrail" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    let uri = Request.maybe_add_query_param uri "start_date" (fun x -> x) start_date in
    let uri = Request.maybe_add_query_param uri "end_date" (fun x -> x) end_date in
    let uri = Request.maybe_add_query_param uri "format_result" (fun x -> x) format_result in
    let uri = Request.maybe_add_query_param uri "limit" (fun x -> x) limit in
    let uri = Request.maybe_add_query_param uri "offset" (fun x -> x) offset in
    let uri = Request.maybe_add_query_param uri "events" (fun x -> x) events in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_object_record_id_get ~object_name ~object_record_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/{object_record_id}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.replace_path_param uri "object_record_id" (fun x -> x) object_record_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_post ~object_name ?id_param ?authorization ?content_type ?accept ?x_vault_api_migration_mode ?x_vault_api_no_triggers ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-MigrationMode" string_of_bool x_vault_api_migration_mode in
    let headers = Request.maybe_add_header headers "X-VaultAPI-NoTriggers" string_of_bool x_vault_api_no_triggers in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    let uri = Request.maybe_add_query_param uri "idParam" (fun x -> x) id_param in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_put ~object_name ?authorization ?content_type ?accept ?x_vault_api_migration_mode ?x_vault_api_no_triggers ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-MigrationMode" string_of_bool x_vault_api_migration_mode in
    let headers = Request.maybe_add_header headers "X-VaultAPI-NoTriggers" string_of_bool x_vault_api_no_triggers in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_roles_delete ~object_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/roles" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_object_name_roles_post ~object_name ?authorization ?accept ?content_type ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/{object_name}/roles" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "Content-Type" (fun x -> x) content_type in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "object_name" (fun x -> x) object_name in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let vobjects_outbound_package_v_package_id_dependencies_get ~package_id ?authorization ?accept ?x_vault_api_client_id () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/vobjects/outbound_package__v/{package_id}/dependencies" in
    let headers = Request.default_headers in
    let headers = Request.maybe_add_header headers "Authorization" (fun x -> x) authorization in
    let headers = Request.maybe_add_header headers "Accept" (fun x -> x) accept in
    let headers = Request.maybe_add_header headers "X-VaultAPI-ClientID" (fun x -> x) x_vault_api_client_id in
    let uri = Request.replace_path_param uri "package_id" (fun x -> x) package_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

