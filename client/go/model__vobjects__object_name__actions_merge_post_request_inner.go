/*
Veeva Vault API v25.1

The latest GA version of the Vault REST API.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VobjectsObjectNameActionsMergePostRequestInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VobjectsObjectNameActionsMergePostRequestInner{}

// VobjectsObjectNameActionsMergePostRequestInner struct for VobjectsObjectNameActionsMergePostRequestInner
type VobjectsObjectNameActionsMergePostRequestInner struct {
	DuplicateRecordId *string `json:"duplicate_record_id,omitempty"`
	MainRecordId *string `json:"main_record_id,omitempty"`
}

// NewVobjectsObjectNameActionsMergePostRequestInner instantiates a new VobjectsObjectNameActionsMergePostRequestInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVobjectsObjectNameActionsMergePostRequestInner() *VobjectsObjectNameActionsMergePostRequestInner {
	this := VobjectsObjectNameActionsMergePostRequestInner{}
	return &this
}

// NewVobjectsObjectNameActionsMergePostRequestInnerWithDefaults instantiates a new VobjectsObjectNameActionsMergePostRequestInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVobjectsObjectNameActionsMergePostRequestInnerWithDefaults() *VobjectsObjectNameActionsMergePostRequestInner {
	this := VobjectsObjectNameActionsMergePostRequestInner{}
	return &this
}

// GetDuplicateRecordId returns the DuplicateRecordId field value if set, zero value otherwise.
func (o *VobjectsObjectNameActionsMergePostRequestInner) GetDuplicateRecordId() string {
	if o == nil || IsNil(o.DuplicateRecordId) {
		var ret string
		return ret
	}
	return *o.DuplicateRecordId
}

// GetDuplicateRecordIdOk returns a tuple with the DuplicateRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VobjectsObjectNameActionsMergePostRequestInner) GetDuplicateRecordIdOk() (*string, bool) {
	if o == nil || IsNil(o.DuplicateRecordId) {
		return nil, false
	}
	return o.DuplicateRecordId, true
}

// HasDuplicateRecordId returns a boolean if a field has been set.
func (o *VobjectsObjectNameActionsMergePostRequestInner) HasDuplicateRecordId() bool {
	if o != nil && !IsNil(o.DuplicateRecordId) {
		return true
	}

	return false
}

// SetDuplicateRecordId gets a reference to the given string and assigns it to the DuplicateRecordId field.
func (o *VobjectsObjectNameActionsMergePostRequestInner) SetDuplicateRecordId(v string) {
	o.DuplicateRecordId = &v
}

// GetMainRecordId returns the MainRecordId field value if set, zero value otherwise.
func (o *VobjectsObjectNameActionsMergePostRequestInner) GetMainRecordId() string {
	if o == nil || IsNil(o.MainRecordId) {
		var ret string
		return ret
	}
	return *o.MainRecordId
}

// GetMainRecordIdOk returns a tuple with the MainRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VobjectsObjectNameActionsMergePostRequestInner) GetMainRecordIdOk() (*string, bool) {
	if o == nil || IsNil(o.MainRecordId) {
		return nil, false
	}
	return o.MainRecordId, true
}

// HasMainRecordId returns a boolean if a field has been set.
func (o *VobjectsObjectNameActionsMergePostRequestInner) HasMainRecordId() bool {
	if o != nil && !IsNil(o.MainRecordId) {
		return true
	}

	return false
}

// SetMainRecordId gets a reference to the given string and assigns it to the MainRecordId field.
func (o *VobjectsObjectNameActionsMergePostRequestInner) SetMainRecordId(v string) {
	o.MainRecordId = &v
}

func (o VobjectsObjectNameActionsMergePostRequestInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VobjectsObjectNameActionsMergePostRequestInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DuplicateRecordId) {
		toSerialize["duplicate_record_id"] = o.DuplicateRecordId
	}
	if !IsNil(o.MainRecordId) {
		toSerialize["main_record_id"] = o.MainRecordId
	}
	return toSerialize, nil
}

type NullableVobjectsObjectNameActionsMergePostRequestInner struct {
	value *VobjectsObjectNameActionsMergePostRequestInner
	isSet bool
}

func (v NullableVobjectsObjectNameActionsMergePostRequestInner) Get() *VobjectsObjectNameActionsMergePostRequestInner {
	return v.value
}

func (v *NullableVobjectsObjectNameActionsMergePostRequestInner) Set(val *VobjectsObjectNameActionsMergePostRequestInner) {
	v.value = val
	v.isSet = true
}

func (v NullableVobjectsObjectNameActionsMergePostRequestInner) IsSet() bool {
	return v.isSet
}

func (v *NullableVobjectsObjectNameActionsMergePostRequestInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVobjectsObjectNameActionsMergePostRequestInner(val *VobjectsObjectNameActionsMergePostRequestInner) *NullableVobjectsObjectNameActionsMergePostRequestInner {
	return &NullableVobjectsObjectNameActionsMergePostRequestInner{value: val, isSet: true}
}

func (v NullableVobjectsObjectNameActionsMergePostRequestInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVobjectsObjectNameActionsMergePostRequestInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


